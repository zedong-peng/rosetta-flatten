-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity face_detect is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inData_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    inData_ce0 : OUT STD_LOGIC;
    inData_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    result_x_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    result_x_ce0 : OUT STD_LOGIC;
    result_x_we0 : OUT STD_LOGIC;
    result_x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_y_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    result_y_ce0 : OUT STD_LOGIC;
    result_y_we0 : OUT STD_LOGIC;
    result_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_w_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    result_w_ce0 : OUT STD_LOGIC;
    result_w_we0 : OUT STD_LOGIC;
    result_w_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_h_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    result_h_ce0 : OUT STD_LOGIC;
    result_h_we0 : OUT STD_LOGIC;
    result_h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_size : OUT STD_LOGIC_VECTOR (31 downto 0);
    result_size_ap_vld : OUT STD_LOGIC );
end;


architecture behav of face_detect is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "face_detect_face_detect,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.258625,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=90,HLS_SYN_DSP=0,HLS_SYN_FF=59732,HLS_SYN_LUT=74965,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (45 downto 0) := "0000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (45 downto 0) := "0000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (45 downto 0) := "0000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (45 downto 0) := "0000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (45 downto 0) := "0000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (45 downto 0) := "0000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (45 downto 0) := "0001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (45 downto 0) := "0010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (45 downto 0) := "0100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (45 downto 0) := "1000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_3F99999A : STD_LOGIC_VECTOR (31 downto 0) := "00111111100110011001100110011010";
    constant ap_const_lv32_41C00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001110000000000000000000000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_43A00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011101000000000000000000000";
    constant ap_const_lv32_43700000 : STD_LOGIC_VECTOR (31 downto 0) := "01000011011100000000000000000000";
    constant ap_const_lv32_41C80000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001110010000000000000000000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_1400000 : STD_LOGIC_VECTOR (31 downto 0) := "00000001010000000000000000000000";
    constant ap_const_lv32_F00000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000111100000000000000000000";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_BFE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv27_1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal counter : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal Data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal Data_ce0 : STD_LOGIC;
    signal Data_we0 : STD_LOGIC;
    signal Data_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln2804_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2804_reg_1086 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2806_fu_436_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln2806_reg_1090 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln2808_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2808_reg_1095 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal factor_2_reg_1117 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fu_374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_2_reg_1123 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_379_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_3_reg_1129 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1135 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_13_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1140 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_size_Scale_1_load_reg_1145 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal p_Result_8_fu_525_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_8_reg_1150 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_5_reg_1158 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2838_fu_552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_2_fu_668_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_2_reg_1164 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_7_reg_1171 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_V_3_reg_1177 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_3_fu_789_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_3_reg_1183 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_368_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal value_assign_reg_1190 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal tmp_15_reg_1197 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal conv_i_fu_384_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i_reg_1202 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal select_ln2774_fu_848_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln2774_reg_1207 : STD_LOGIC_VECTOR (63 downto 0);
    signal result_V_20_fu_861_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_20_reg_1212 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal result_V_21_fu_873_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_21_reg_1218 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_ratio_fu_901_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal x_ratio_reg_1224 : STD_LOGIC_VECTOR (26 downto 0);
    signal y_ratio_fu_925_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal y_ratio_reg_1229 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_398_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal dc_reg_1234 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal result_V_19_fu_1063_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_19_reg_1239 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal result_x_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal result_x_Scale_ce0 : STD_LOGIC;
    signal result_x_Scale_we0 : STD_LOGIC;
    signal result_x_Scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_y_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal result_y_Scale_ce0 : STD_LOGIC;
    signal result_y_Scale_we0 : STD_LOGIC;
    signal result_y_Scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_w_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal result_w_Scale_ce0 : STD_LOGIC;
    signal result_w_Scale_we0 : STD_LOGIC;
    signal result_w_Scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_h_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal result_h_Scale_ce0 : STD_LOGIC;
    signal result_h_Scale_we0 : STD_LOGIC;
    signal result_h_Scale_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal IMG1_data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal IMG1_data_ce0 : STD_LOGIC;
    signal IMG1_data_we0 : STD_LOGIC;
    signal IMG1_data_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_start : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_done : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_idle : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_ready : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_inData_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_inData_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_start : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_done : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_idle : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_ready : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_start : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_done : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_idle : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_ready : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_Scale_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_Scale_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_Scale_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_Scale_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_Scale_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_start : STD_LOGIC;
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_done : STD_LOGIC;
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_idle : STD_LOGIC;
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_ready : STD_LOGIC;
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_ce0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_we0 : STD_LOGIC;
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_Data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_Data_ce0 : STD_LOGIC;
    signal grp_processImage_fu_310_ap_start : STD_LOGIC;
    signal grp_processImage_fu_310_ap_done : STD_LOGIC;
    signal grp_processImage_fu_310_ap_idle : STD_LOGIC;
    signal grp_processImage_fu_310_ap_ready : STD_LOGIC;
    signal grp_processImage_fu_310_AllCandidates_x_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_processImage_fu_310_AllCandidates_x_ce0 : STD_LOGIC;
    signal grp_processImage_fu_310_AllCandidates_x_we0 : STD_LOGIC;
    signal grp_processImage_fu_310_AllCandidates_x_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_310_AllCandidates_y_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_processImage_fu_310_AllCandidates_y_ce0 : STD_LOGIC;
    signal grp_processImage_fu_310_AllCandidates_y_we0 : STD_LOGIC;
    signal grp_processImage_fu_310_AllCandidates_y_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_310_AllCandidates_w_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_processImage_fu_310_AllCandidates_w_ce0 : STD_LOGIC;
    signal grp_processImage_fu_310_AllCandidates_w_we0 : STD_LOGIC;
    signal grp_processImage_fu_310_AllCandidates_w_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_310_AllCandidates_h_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_processImage_fu_310_AllCandidates_h_ce0 : STD_LOGIC;
    signal grp_processImage_fu_310_AllCandidates_h_we0 : STD_LOGIC;
    signal grp_processImage_fu_310_AllCandidates_h_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_310_IMG1_data_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_processImage_fu_310_IMG1_data_ce0 : STD_LOGIC;
    signal grp_processImage_fu_310_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_310_grp_fu_368_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_310_grp_fu_368_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_processImage_fu_310_grp_fu_368_p_ce : STD_LOGIC;
    signal grp_processImage_fu_310_grp_fu_398_p_din0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_processImage_fu_310_grp_fu_398_p_din1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_processImage_fu_310_grp_fu_398_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_processImage_fu_310_grp_fu_398_p_ce : STD_LOGIC;
    signal counter_new_0_reg_239 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal storemerge_reg_250 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_start_reg : STD_LOGIC := '0';
    signal grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal icmp_ln2809_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_start_reg : STD_LOGIC := '0';
    signal grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_start_reg : STD_LOGIC := '0';
    signal grp_processImage_fu_310_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal factor_fu_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_size_Scale_1_fu_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_368_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_368_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal grp_fu_387_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_398_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal trunc_ln2804_1_fu_410_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln2804_fu_406_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_420_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_fu_428_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal data_V_2_fu_472_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_475_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_485_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln2838_1_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2838_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln2838_fu_501_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_3_fu_512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_515_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln2838_3_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2838_2_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln2838_1_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2838_1_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2838_2_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mantissa_2_fu_576_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal xs_exp_V_2_fu_566_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln346_fu_590_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_594_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_2_fu_608_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_2_fu_600_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_2_fu_614_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_2_fu_618_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_2_fu_626_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_2_fu_586_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_3_fu_630_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_16_fu_634_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_22_fu_646_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_17_fu_640_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_fu_654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_658_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_694_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_694_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mantissa_3_fu_700_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_1_fu_713_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_1_fu_716_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1512_3_fu_730_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_3_fu_722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_3_fu_735_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_3_fu_739_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1488_3_fu_747_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_3_fu_709_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln1488_4_fu_751_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_18_fu_755_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_26_fu_767_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_19_fu_761_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln818_2_fu_775_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_779_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_797_p0 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln2774_fu_808_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_811_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2774_fu_821_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln2774_4_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2774_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln2774_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln2774_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_13_fu_856_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_17_fu_868_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_694_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln3379_fu_880_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln3379_fu_884_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sub_ln3379_fu_888_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal select_ln3379_fu_894_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_797_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln3380_fu_908_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln3380_fu_912_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln3380_fu_918_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal data_V_fu_932_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_4_fu_945_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal mantissa_fu_949_p4 : STD_LOGIC_VECTOR (53 downto 0);
    signal xs_exp_V_fu_935_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln515_fu_963_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln515_fu_967_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1512_fu_981_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal isNeg_fu_973_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1512_fu_987_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_fu_991_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1488_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_959_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln1488_fu_1003_p1 : STD_LOGIC_VECTOR (136 downto 0);
    signal r_V_fu_1007_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal tmp_27_fu_1019_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_15_fu_1013_p2 : STD_LOGIC_VECTOR (136 downto 0);
    signal zext_ln818_3_fu_1027_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_1031_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_fu_1041_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_1055_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_V_fu_1049_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_368_ce : STD_LOGIC;
    signal grp_fu_387_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_398_ce : STD_LOGIC;
    signal grp_fu_694_ap_start : STD_LOGIC;
    signal grp_fu_694_ap_done : STD_LOGIC;
    signal grp_fu_797_ap_start : STD_LOGIC;
    signal grp_fu_797_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (45 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component face_detect_face_detect_Pipeline_VITIS_LOOP_2805_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln2806 : IN STD_LOGIC_VECTOR (16 downto 0);
        inData_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        inData_ce0 : OUT STD_LOGIC;
        inData_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        Data_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        Data_ce0 : OUT STD_LOGIC;
        Data_we0 : OUT STD_LOGIC;
        Data_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component face_detect_face_detect_Pipeline_VITIS_LOOP_2810_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        result_x_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_x_ce0 : OUT STD_LOGIC;
        result_x_we0 : OUT STD_LOGIC;
        result_x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_y_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_y_ce0 : OUT STD_LOGIC;
        result_y_we0 : OUT STD_LOGIC;
        result_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_w_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_w_ce0 : OUT STD_LOGIC;
        result_w_we0 : OUT STD_LOGIC;
        result_w_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_h_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_h_ce0 : OUT STD_LOGIC;
        result_h_we0 : OUT STD_LOGIC;
        result_h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_detect_face_detect_Pipeline_VITIS_LOOP_2872_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        result_x_Scale_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_x_Scale_ce0 : OUT STD_LOGIC;
        result_x_Scale_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_x_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_x_ce0 : OUT STD_LOGIC;
        result_x_we0 : OUT STD_LOGIC;
        result_x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_y_Scale_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_y_Scale_ce0 : OUT STD_LOGIC;
        result_y_Scale_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_y_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_y_ce0 : OUT STD_LOGIC;
        result_y_we0 : OUT STD_LOGIC;
        result_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_w_Scale_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_w_Scale_ce0 : OUT STD_LOGIC;
        result_w_Scale_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_w_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_w_ce0 : OUT STD_LOGIC;
        result_w_we0 : OUT STD_LOGIC;
        result_w_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        result_h_Scale_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_h_Scale_ce0 : OUT STD_LOGIC;
        result_h_Scale_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        result_h_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        result_h_ce0 : OUT STD_LOGIC;
        result_h_we0 : OUT STD_LOGIC;
        result_h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_detect_face_detect_Pipeline_imageScalerL1_imageScalerL1_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        result_V_16 : IN STD_LOGIC_VECTOR (31 downto 0);
        y_ratio : IN STD_LOGIC_VECTOR (23 downto 0);
        IMG1_data_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        IMG1_data_ce0 : OUT STD_LOGIC;
        IMG1_data_we0 : OUT STD_LOGIC;
        IMG1_data_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        result_V_15 : IN STD_LOGIC_VECTOR (31 downto 0);
        sext_ln3379_2 : IN STD_LOGIC_VECTOR (26 downto 0);
        Data_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        Data_ce0 : OUT STD_LOGIC;
        Data_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component face_detect_processImage IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        factor : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_row : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_col : IN STD_LOGIC_VECTOR (31 downto 0);
        AllCandidates_x_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        AllCandidates_x_ce0 : OUT STD_LOGIC;
        AllCandidates_x_we0 : OUT STD_LOGIC;
        AllCandidates_x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        AllCandidates_y_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        AllCandidates_y_ce0 : OUT STD_LOGIC;
        AllCandidates_y_we0 : OUT STD_LOGIC;
        AllCandidates_y_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        AllCandidates_w_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        AllCandidates_w_ce0 : OUT STD_LOGIC;
        AllCandidates_w_we0 : OUT STD_LOGIC;
        AllCandidates_w_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        AllCandidates_h_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        AllCandidates_h_ce0 : OUT STD_LOGIC;
        AllCandidates_h_we0 : OUT STD_LOGIC;
        AllCandidates_h_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        AllCandidates_size_read : IN STD_LOGIC_VECTOR (31 downto 0);
        IMG1_data_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        IMG1_data_ce0 : OUT STD_LOGIC;
        IMG1_data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        winSize_width : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_368_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_368_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_368_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_368_p_ce : OUT STD_LOGIC;
        grp_fu_398_p_din0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_398_p_din1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_398_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_398_p_dout0 : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_398_p_ce : OUT STD_LOGIC );
    end component;


    component face_detect_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_detect_fdiv_32ns_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_detect_fpext_32ns_64_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component face_detect_fcmp_32ns_32ns_1_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component face_detect_dadd_64ns_64ns_64_3_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component face_detect_sdiv_27ns_32ns_26_31_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component face_detect_sdiv_26ns_32ns_24_30_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component face_detect_Data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component face_detect_result_x_Scale_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component face_detect_IMG1_data_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    Data_U : component face_detect_Data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 76800,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Data_address0,
        ce0 => Data_ce0,
        we0 => Data_we0,
        d0 => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_d0,
        q0 => Data_q0);

    result_x_Scale_U : component face_detect_result_x_Scale_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_x_Scale_address0,
        ce0 => result_x_Scale_ce0,
        we0 => result_x_Scale_we0,
        d0 => grp_processImage_fu_310_AllCandidates_x_d0,
        q0 => result_x_Scale_q0);

    result_y_Scale_U : component face_detect_result_x_Scale_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_y_Scale_address0,
        ce0 => result_y_Scale_ce0,
        we0 => result_y_Scale_we0,
        d0 => grp_processImage_fu_310_AllCandidates_y_d0,
        q0 => result_y_Scale_q0);

    result_w_Scale_U : component face_detect_result_x_Scale_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_w_Scale_address0,
        ce0 => result_w_Scale_ce0,
        we0 => result_w_Scale_we0,
        d0 => grp_processImage_fu_310_AllCandidates_w_d0,
        q0 => result_w_Scale_q0);

    result_h_Scale_U : component face_detect_result_x_Scale_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_h_Scale_address0,
        ce0 => result_h_Scale_ce0,
        we0 => result_h_Scale_we0,
        d0 => grp_processImage_fu_310_AllCandidates_h_d0,
        q0 => result_h_Scale_q0);

    IMG1_data_U : component face_detect_IMG1_data_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 76800,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => IMG1_data_address0,
        ce0 => IMG1_data_ce0,
        we0 => IMG1_data_we0,
        d0 => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_d0,
        q0 => IMG1_data_q0);

    grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262 : component face_detect_face_detect_Pipeline_VITIS_LOOP_2805_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_start,
        ap_done => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_done,
        ap_idle => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_idle,
        ap_ready => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_ready,
        add_ln2806 => add_ln2806_reg_1090,
        inData_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_inData_address0,
        inData_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_inData_ce0,
        inData_q0 => inData_q0,
        Data_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_address0,
        Data_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_ce0,
        Data_we0 => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_we0,
        Data_d0 => grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_d0);

    grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271 : component face_detect_face_detect_Pipeline_VITIS_LOOP_2810_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_start,
        ap_done => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_done,
        ap_idle => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_idle,
        ap_ready => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_ready,
        result_x_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_address0,
        result_x_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_ce0,
        result_x_we0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_we0,
        result_x_d0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_d0,
        result_y_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_address0,
        result_y_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_ce0,
        result_y_we0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_we0,
        result_y_d0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_d0,
        result_w_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_address0,
        result_w_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_ce0,
        result_w_we0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_we0,
        result_w_d0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_d0,
        result_h_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_address0,
        result_h_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_ce0,
        result_h_we0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_we0,
        result_h_d0 => grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_d0);

    grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283 : component face_detect_face_detect_Pipeline_VITIS_LOOP_2872_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_start,
        ap_done => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_done,
        ap_idle => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_idle,
        ap_ready => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_ready,
        result_x_Scale_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_Scale_address0,
        result_x_Scale_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_Scale_ce0,
        result_x_Scale_q0 => result_x_Scale_q0,
        result_x_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_address0,
        result_x_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_ce0,
        result_x_we0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_we0,
        result_x_d0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_d0,
        result_y_Scale_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_Scale_address0,
        result_y_Scale_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_Scale_ce0,
        result_y_Scale_q0 => result_y_Scale_q0,
        result_y_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_address0,
        result_y_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_ce0,
        result_y_we0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_we0,
        result_y_d0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_d0,
        result_w_Scale_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_Scale_address0,
        result_w_Scale_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_Scale_ce0,
        result_w_Scale_q0 => result_w_Scale_q0,
        result_w_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_address0,
        result_w_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_ce0,
        result_w_we0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_we0,
        result_w_d0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_d0,
        result_h_Scale_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_Scale_address0,
        result_h_Scale_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_Scale_ce0,
        result_h_Scale_q0 => result_h_Scale_q0,
        result_h_address0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_address0,
        result_h_ce0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_ce0,
        result_h_we0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_we0,
        result_h_d0 => grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_d0);

    grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299 : component face_detect_face_detect_Pipeline_imageScalerL1_imageScalerL1_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_start,
        ap_done => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_done,
        ap_idle => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_idle,
        ap_ready => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_ready,
        result_V_16 => result_V_21_reg_1218,
        y_ratio => y_ratio_reg_1229,
        IMG1_data_address0 => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_address0,
        IMG1_data_ce0 => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_ce0,
        IMG1_data_we0 => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_we0,
        IMG1_data_d0 => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_d0,
        result_V_15 => result_V_20_reg_1212,
        sext_ln3379_2 => x_ratio_reg_1224,
        Data_address0 => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_Data_address0,
        Data_ce0 => grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_Data_ce0,
        Data_q0 => Data_q0);

    grp_processImage_fu_310 : component face_detect_processImage
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_processImage_fu_310_ap_start,
        ap_done => grp_processImage_fu_310_ap_done,
        ap_idle => grp_processImage_fu_310_ap_idle,
        ap_ready => grp_processImage_fu_310_ap_ready,
        factor => factor_2_reg_1117,
        sum_row => result_V_21_reg_1218,
        sum_col => result_V_20_reg_1212,
        AllCandidates_x_address0 => grp_processImage_fu_310_AllCandidates_x_address0,
        AllCandidates_x_ce0 => grp_processImage_fu_310_AllCandidates_x_ce0,
        AllCandidates_x_we0 => grp_processImage_fu_310_AllCandidates_x_we0,
        AllCandidates_x_d0 => grp_processImage_fu_310_AllCandidates_x_d0,
        AllCandidates_y_address0 => grp_processImage_fu_310_AllCandidates_y_address0,
        AllCandidates_y_ce0 => grp_processImage_fu_310_AllCandidates_y_ce0,
        AllCandidates_y_we0 => grp_processImage_fu_310_AllCandidates_y_we0,
        AllCandidates_y_d0 => grp_processImage_fu_310_AllCandidates_y_d0,
        AllCandidates_w_address0 => grp_processImage_fu_310_AllCandidates_w_address0,
        AllCandidates_w_ce0 => grp_processImage_fu_310_AllCandidates_w_ce0,
        AllCandidates_w_we0 => grp_processImage_fu_310_AllCandidates_w_we0,
        AllCandidates_w_d0 => grp_processImage_fu_310_AllCandidates_w_d0,
        AllCandidates_h_address0 => grp_processImage_fu_310_AllCandidates_h_address0,
        AllCandidates_h_ce0 => grp_processImage_fu_310_AllCandidates_h_ce0,
        AllCandidates_h_we0 => grp_processImage_fu_310_AllCandidates_h_we0,
        AllCandidates_h_d0 => grp_processImage_fu_310_AllCandidates_h_d0,
        AllCandidates_size_read => res_size_Scale_1_fu_228,
        IMG1_data_address0 => grp_processImage_fu_310_IMG1_data_address0,
        IMG1_data_ce0 => grp_processImage_fu_310_IMG1_data_ce0,
        IMG1_data_q0 => IMG1_data_q0,
        winSize_width => result_V_19_reg_1239,
        ap_return => grp_processImage_fu_310_ap_return,
        grp_fu_368_p_din0 => grp_processImage_fu_310_grp_fu_368_p_din0,
        grp_fu_368_p_din1 => grp_processImage_fu_310_grp_fu_368_p_din1,
        grp_fu_368_p_dout0 => grp_fu_368_p2,
        grp_fu_368_p_ce => grp_processImage_fu_310_grp_fu_368_p_ce,
        grp_fu_398_p_din0 => grp_processImage_fu_310_grp_fu_398_p_din0,
        grp_fu_398_p_din1 => grp_processImage_fu_310_grp_fu_398_p_din1,
        grp_fu_398_p_opcode => grp_processImage_fu_310_grp_fu_398_p_opcode,
        grp_fu_398_p_dout0 => grp_fu_398_p2,
        grp_fu_398_p_ce => grp_processImage_fu_310_grp_fu_398_p_ce);

    fmul_32ns_32ns_32_2_max_dsp_1_U2826 : component face_detect_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_368_p0,
        din1 => grp_fu_368_p1,
        ce => grp_fu_368_ce,
        dout => grp_fu_368_p2);

    fdiv_32ns_32ns_32_6_no_dsp_1_U2827 : component face_detect_fdiv_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_43A00000,
        din1 => factor_fu_224,
        ce => ap_const_logic_1,
        dout => grp_fu_374_p2);

    fdiv_32ns_32ns_32_6_no_dsp_1_U2828 : component face_detect_fdiv_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_43700000,
        din1 => factor_fu_224,
        ce => ap_const_logic_1,
        dout => grp_fu_379_p2);

    fpext_32ns_64_1_no_dsp_1_U2829 : component face_detect_fpext_32ns_64_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => value_assign_reg_1190,
        dout => conv_i_fu_384_p1);

    fcmp_32ns_32ns_1_1_no_dsp_1_U2830 : component face_detect_fcmp_32ns_32ns_1_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_387_p0,
        din1 => grp_fu_387_p1,
        opcode => grp_fu_387_opcode,
        dout => grp_fu_387_p2);

    fcmp_32ns_32ns_1_1_no_dsp_1_U2831 : component face_detect_fcmp_32ns_32ns_1_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => dc_3_reg_1129,
        din1 => ap_const_lv32_41C80000,
        opcode => ap_const_lv5_2,
        dout => tmp_13_fu_392_p2);

    dadd_64ns_64ns_64_3_full_dsp_1_U2832 : component face_detect_dadd_64ns_64ns_64_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_398_p0,
        din1 => grp_fu_398_p1,
        ce => grp_fu_398_ce,
        dout => grp_fu_398_p2);

    sdiv_27ns_32ns_26_31_seq_1_U2833 : component face_detect_sdiv_27ns_32ns_26_31_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 31,
        din0_WIDTH => 27,
        din1_WIDTH => 32,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_694_ap_start,
        done => grp_fu_694_ap_done,
        din0 => grp_fu_694_p0,
        din1 => grp_fu_694_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_694_p2);

    sdiv_26ns_32ns_24_30_seq_1_U2834 : component face_detect_sdiv_26ns_32ns_24_30_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 30,
        din0_WIDTH => 26,
        din1_WIDTH => 32,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_797_ap_start,
        done => grp_fu_797_ap_done,
        din0 => grp_fu_797_p0,
        din1 => grp_fu_797_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_797_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln2804_fu_414_p2 = ap_const_lv1_1))) then 
                    grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_ready = ap_const_logic_1)) then 
                    grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln2809_fu_448_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2804_reg_1086 = ap_const_lv1_1))) then 
                    grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_ready = ap_const_logic_1)) then 
                    grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_lv1_0 = and_ln2838_fu_552_p2) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_ready = ap_const_logic_1)) then 
                    grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_ready = ap_const_logic_1)) then 
                    grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_processImage_fu_310_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_processImage_fu_310_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                    grp_processImage_fu_310_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_processImage_fu_310_ap_ready = ap_const_logic_1)) then 
                    grp_processImage_fu_310_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    counter_new_0_reg_239_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
                counter_new_0_reg_239 <= add_ln2808_reg_1095;
            elsif (((grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                counter_new_0_reg_239 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    factor_fu_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln2809_fu_448_p2 = ap_const_lv1_0) or (icmp_ln2804_reg_1086 = ap_const_lv1_0)))) then 
                factor_fu_224 <= ap_const_lv32_3F99999A;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                factor_fu_224 <= grp_fu_368_p2;
            end if; 
        end if;
    end process;

    res_size_Scale_1_fu_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln2809_fu_448_p2 = ap_const_lv1_0) or (icmp_ln2804_reg_1086 = ap_const_lv1_0)))) then 
                res_size_Scale_1_fu_228 <= ap_const_lv32_0;
            elsif (((grp_processImage_fu_310_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                res_size_Scale_1_fu_228 <= grp_processImage_fu_310_ap_return;
            end if; 
        end if;
    end process;

    storemerge_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
                storemerge_reg_250 <= ap_const_lv32_0;
            elsif (((grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                storemerge_reg_250 <= res_size_Scale_1_load_reg_1145;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln2804_fu_414_p2 = ap_const_lv1_1))) then
                    add_ln2806_reg_1090(16 downto 6) <= add_ln2806_fu_436_p2(16 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2804_reg_1086 = ap_const_lv1_1))) then
                add_ln2808_reg_1095 <= add_ln2808_fu_443_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                conv_i_reg_1202 <= conv_i_fu_384_p1;
                    select_ln2774_reg_1207(63) <= select_ln2774_fu_848_p3(63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                counter <= counter_new_0_reg_239;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                dc_2_reg_1123 <= grp_fu_374_p2;
                dc_3_reg_1129 <= grp_fu_379_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                dc_reg_1234 <= grp_fu_398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                factor_2_reg_1117 <= factor_fu_224;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln2804_reg_1086 <= icmp_ln2804_fu_414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln2838_fu_552_p2))) then
                p_Result_5_reg_1158 <= data_V_2_fu_472_p1(31 downto 31);
                p_Result_7_reg_1171 <= data_V_3_fu_512_p1(31 downto 31);
                val_2_reg_1164 <= val_2_fu_668_p3;
                xs_exp_V_3_reg_1177 <= data_V_3_fu_512_p1(30 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                p_Result_8_reg_1150 <= p_Result_8_fu_525_p1;
                res_size_Scale_1_load_reg_1145 <= res_size_Scale_1_fu_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                result_V_19_reg_1239 <= result_V_19_fu_1063_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                result_V_20_reg_1212 <= result_V_20_fu_861_p3;
                result_V_21_reg_1218 <= result_V_21_fu_873_p3;
                x_ratio_reg_1224 <= x_ratio_fu_901_p2;
                y_ratio_reg_1229 <= y_ratio_fu_925_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                tmp_13_reg_1140 <= tmp_13_fu_392_p2;
                tmp_s_reg_1135 <= grp_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                tmp_15_reg_1197 <= grp_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                val_3_reg_1183 <= val_3_fu_789_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                value_assign_reg_1190 <= grp_fu_368_p2;
            end if;
        end if;
    end process;
    add_ln2806_reg_1090(5 downto 0) <= "000000";
    select_ln2774_reg_1207(62 downto 0) <= "011111111100000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln2804_reg_1086, ap_CS_fsm_state2, ap_CS_fsm_state10, and_ln2838_fu_552_p2, ap_CS_fsm_state41, grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_done, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_done, grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_done, grp_processImage_fu_310_ap_done, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_block_state2_on_subcall_done, icmp_ln2809_fu_448_p2, ap_CS_fsm_state43)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln2809_fu_448_p2 = ap_const_lv1_0) or (icmp_ln2804_reg_1086 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((icmp_ln2809_fu_448_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2804_reg_1086 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_lv1_0 = and_ln2838_fu_552_p2) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((grp_processImage_fu_310_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                if (((grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                if (((grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    Data_address0_assign_proc : process(icmp_ln2804_reg_1086, ap_CS_fsm_state2, ap_CS_fsm_state41, grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_address0, grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_Data_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            Data_address0 <= grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_Data_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2804_reg_1086 = ap_const_lv1_1))) then 
            Data_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_address0;
        else 
            Data_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Data_ce0_assign_proc : process(icmp_ln2804_reg_1086, ap_CS_fsm_state2, ap_CS_fsm_state41, grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_ce0, grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_Data_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            Data_ce0 <= grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_Data_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2804_reg_1086 = ap_const_lv1_1))) then 
            Data_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_ce0;
        else 
            Data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Data_we0_assign_proc : process(icmp_ln2804_reg_1086, ap_CS_fsm_state2, grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln2804_reg_1086 = ap_const_lv1_1))) then 
            Data_we0 <= grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_Data_we0;
        else 
            Data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    IMG1_data_address0_assign_proc : process(ap_CS_fsm_state41, grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_address0, grp_processImage_fu_310_IMG1_data_address0, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            IMG1_data_address0 <= grp_processImage_fu_310_IMG1_data_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            IMG1_data_address0 <= grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_address0;
        else 
            IMG1_data_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    IMG1_data_ce0_assign_proc : process(ap_CS_fsm_state41, grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_ce0, grp_processImage_fu_310_IMG1_data_ce0, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            IMG1_data_ce0 <= grp_processImage_fu_310_IMG1_data_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            IMG1_data_ce0 <= grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_ce0;
        else 
            IMG1_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    IMG1_data_we0_assign_proc : process(ap_CS_fsm_state41, grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            IMG1_data_we0 <= grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_IMG1_data_we0;
        else 
            IMG1_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln2806_fu_436_p2 <= std_logic_vector(unsigned(tmp_10_fu_420_p3) + unsigned(tmp_11_fu_428_p3));
    add_ln2808_fu_443_p2 <= std_logic_vector(unsigned(counter) + unsigned(ap_const_lv32_1));
    add_ln346_1_fu_716_p2 <= std_logic_vector(unsigned(zext_ln346_1_fu_713_p1) + unsigned(ap_const_lv9_181));
    add_ln346_fu_594_p2 <= std_logic_vector(unsigned(zext_ln346_fu_590_p1) + unsigned(ap_const_lv9_181));
    add_ln515_fu_967_p2 <= std_logic_vector(unsigned(zext_ln515_fu_963_p1) + unsigned(ap_const_lv12_C01));
    and_ln2774_fu_843_p2 <= (tmp_15_reg_1197 and or_ln2774_fu_837_p2);
    and_ln2838_1_fu_507_p2 <= (tmp_s_reg_1135 and or_ln2838_fu_501_p2);
    and_ln2838_2_fu_547_p2 <= (tmp_13_reg_1140 and or_ln2838_1_fu_541_p2);
    and_ln2838_fu_552_p2 <= (and_ln2838_2_fu_547_p2 and and_ln2838_1_fu_507_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;

    ap_ST_fsm_state41_blk_assign_proc : process(grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_done)
    begin
        if ((grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state41_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state41_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state42_blk <= ap_const_logic_0;

    ap_ST_fsm_state43_blk_assign_proc : process(grp_processImage_fu_310_ap_done)
    begin
        if ((grp_processImage_fu_310_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state43_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state43_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state44_blk_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_done)
    begin
        if ((grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state44_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state44_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state45_blk_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_done)
    begin
        if ((grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state45_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state45_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(icmp_ln2804_reg_1086, grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_done = ap_const_logic_0) and (icmp_ln2804_reg_1086 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln2774_fu_808_p1 <= value_assign_reg_1190;
    data_V_2_fu_472_p1 <= dc_2_reg_1123;
    data_V_3_fu_512_p1 <= dc_3_reg_1129;
    data_V_fu_932_p1 <= dc_reg_1234;
    grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_start <= grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_ap_start_reg;
    grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_start <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_ap_start_reg;
    grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_start <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_ap_start_reg;
    grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_start <= grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_start_reg;

    grp_fu_368_ce_assign_proc : process(grp_processImage_fu_310_grp_fu_368_p_ce, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_368_ce <= grp_processImage_fu_310_grp_fu_368_p_ce;
        else 
            grp_fu_368_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_368_p0_assign_proc : process(factor_2_reg_1117, ap_CS_fsm_state10, grp_processImage_fu_310_grp_fu_368_p_din0, ap_CS_fsm_state43, factor_fu_224, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_368_p0 <= grp_processImage_fu_310_grp_fu_368_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_368_p0 <= factor_2_reg_1117;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_368_p0 <= factor_fu_224;
        else 
            grp_fu_368_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_368_p1_assign_proc : process(ap_CS_fsm_state10, grp_processImage_fu_310_grp_fu_368_p_din1, ap_CS_fsm_state43, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_368_p1 <= grp_processImage_fu_310_grp_fu_368_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            grp_fu_368_p1 <= ap_const_lv32_41C00000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_368_p1 <= ap_const_lv32_3F99999A;
        else 
            grp_fu_368_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_387_opcode_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_387_opcode <= ap_const_lv5_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_387_opcode <= ap_const_lv5_2;
        else 
            grp_fu_387_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_387_p0_assign_proc : process(dc_2_reg_1123, ap_CS_fsm_state9, value_assign_reg_1190, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_387_p0 <= value_assign_reg_1190;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_387_p0 <= dc_2_reg_1123;
        else 
            grp_fu_387_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_387_p1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            grp_fu_387_p1 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_387_p1 <= ap_const_lv32_41C80000;
        else 
            grp_fu_387_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_398_ce_assign_proc : process(ap_CS_fsm_state40, ap_CS_fsm_state41, grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_done, grp_processImage_fu_310_grp_fu_398_p_ce, ap_CS_fsm_state43, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_398_ce <= grp_processImage_fu_310_grp_fu_398_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state40) or ((grp_face_detect_Pipeline_imageScalerL1_imageScalerL1_1_fu_299_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41)))) then 
            grp_fu_398_ce <= ap_const_logic_1;
        else 
            grp_fu_398_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_398_p0_assign_proc : process(conv_i_reg_1202, grp_processImage_fu_310_grp_fu_398_p_din0, ap_CS_fsm_state43, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_398_p0 <= grp_processImage_fu_310_grp_fu_398_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_398_p0 <= conv_i_reg_1202;
        else 
            grp_fu_398_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_398_p1_assign_proc : process(select_ln2774_reg_1207, grp_processImage_fu_310_grp_fu_398_p_din1, ap_CS_fsm_state43, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_398_p1 <= grp_processImage_fu_310_grp_fu_398_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_398_p1 <= select_ln2774_reg_1207;
        else 
            grp_fu_398_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_694_ap_start_assign_proc : process(ap_CS_fsm_state10, and_ln2838_fu_552_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_lv1_1 = and_ln2838_fu_552_p2))) then 
            grp_fu_694_ap_start <= ap_const_logic_1;
        else 
            grp_fu_694_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_694_p0 <= ap_const_lv32_1400000(27 - 1 downto 0);
    grp_fu_694_p1 <= 
        zext_ln818_fu_654_p1 when (isNeg_2_fu_600_p3(0) = '1') else 
        tmp_16_fu_658_p4;

    grp_fu_797_ap_start_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_797_ap_start <= ap_const_logic_1;
        else 
            grp_fu_797_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_797_p0 <= ap_const_lv32_F00000(26 - 1 downto 0);
    grp_fu_797_p1 <= 
        zext_ln818_2_fu_775_p1 when (isNeg_3_fu_722_p3(0) = '1') else 
        tmp_17_fu_779_p4;
    grp_processImage_fu_310_ap_start <= grp_processImage_fu_310_ap_start_reg;
    icmp_ln2774_4_fu_831_p2 <= "1" when (trunc_ln2774_fu_821_p1 = ap_const_lv23_0) else "0";
    icmp_ln2774_fu_825_p2 <= "0" when (tmp_14_fu_811_p4 = ap_const_lv8_FF) else "1";
    icmp_ln2804_fu_414_p2 <= "1" when (signed(counter) < signed(ap_const_lv32_F0)) else "0";
    icmp_ln2809_fu_448_p2 <= "1" when (signed(add_ln2808_fu_443_p2) < signed(ap_const_lv32_F0)) else "0";
    icmp_ln2838_1_fu_495_p2 <= "1" when (p_Result_6_fu_485_p1 = ap_const_lv23_0) else "0";
    icmp_ln2838_2_fu_529_p2 <= "0" when (tmp_12_fu_515_p4 = ap_const_lv8_FF) else "1";
    icmp_ln2838_3_fu_535_p2 <= "1" when (p_Result_8_fu_525_p1 = ap_const_lv23_0) else "0";
    icmp_ln2838_fu_489_p2 <= "0" when (tmp_fu_475_p4 = ap_const_lv8_FF) else "1";
    inData_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_inData_address0;
    inData_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2805_1_fu_262_inData_ce0;
    isNeg_2_fu_600_p3 <= add_ln346_fu_594_p2(8 downto 8);
    isNeg_3_fu_722_p3 <= add_ln346_1_fu_716_p2(8 downto 8);
    isNeg_fu_973_p3 <= add_ln515_fu_967_p2(11 downto 11);
    mantissa_2_fu_576_p4 <= ((ap_const_lv1_1 & p_Result_6_fu_485_p1) & ap_const_lv1_0);
    mantissa_3_fu_700_p4 <= ((ap_const_lv1_1 & p_Result_8_reg_1150) & ap_const_lv1_0);
    mantissa_fu_949_p4 <= ((ap_const_lv1_1 & p_Result_4_fu_945_p1) & ap_const_lv1_0);
    or_ln2774_fu_837_p2 <= (icmp_ln2774_fu_825_p2 or icmp_ln2774_4_fu_831_p2);
    or_ln2838_1_fu_541_p2 <= (icmp_ln2838_3_fu_535_p2 or icmp_ln2838_2_fu_529_p2);
    or_ln2838_fu_501_p2 <= (icmp_ln2838_fu_489_p2 or icmp_ln2838_1_fu_495_p2);
    p_Result_4_fu_945_p1 <= data_V_fu_932_p1(52 - 1 downto 0);
    p_Result_6_fu_485_p1 <= data_V_2_fu_472_p1(23 - 1 downto 0);
    p_Result_8_fu_525_p1 <= data_V_3_fu_512_p1(23 - 1 downto 0);
    p_Result_s_fu_1055_p3 <= data_V_fu_932_p1(63 downto 63);
    r_V_15_fu_1013_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_959_p1),to_integer(unsigned('0' & zext_ln1488_fu_1003_p1(31-1 downto 0)))));
    r_V_16_fu_634_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_2_fu_586_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_630_p1(31-1 downto 0)))));
    r_V_17_fu_640_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_2_fu_586_p1),to_integer(unsigned('0' & zext_ln1488_3_fu_630_p1(31-1 downto 0)))));
    r_V_18_fu_755_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_3_fu_709_p1),to_integer(unsigned('0' & zext_ln1488_4_fu_751_p1(31-1 downto 0)))));
    r_V_19_fu_761_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_3_fu_709_p1),to_integer(unsigned('0' & zext_ln1488_4_fu_751_p1(31-1 downto 0)))));
    r_V_fu_1007_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_959_p1),to_integer(unsigned('0' & zext_ln1488_fu_1003_p1(31-1 downto 0)))));
    result_V_13_fu_856_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_2_reg_1164));
    result_V_17_fu_868_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_3_reg_1183));
    result_V_19_fu_1063_p3 <= 
        result_V_fu_1049_p2 when (p_Result_s_fu_1055_p3(0) = '1') else 
        val_fu_1041_p3;
    result_V_20_fu_861_p3 <= 
        result_V_13_fu_856_p2 when (p_Result_5_reg_1158(0) = '1') else 
        val_2_reg_1164;
    result_V_21_fu_873_p3 <= 
        result_V_17_fu_868_p2 when (p_Result_7_reg_1171(0) = '1') else 
        val_3_reg_1183;
    result_V_fu_1049_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_fu_1041_p3));

    result_h_Scale_address0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_Scale_address0, grp_processImage_fu_310_AllCandidates_h_address0, ap_CS_fsm_state44, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_h_Scale_address0 <= grp_processImage_fu_310_AllCandidates_h_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_h_Scale_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_Scale_address0;
        else 
            result_h_Scale_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_h_Scale_ce0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_Scale_ce0, grp_processImage_fu_310_AllCandidates_h_ce0, ap_CS_fsm_state44, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_h_Scale_ce0 <= grp_processImage_fu_310_AllCandidates_h_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_h_Scale_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_Scale_ce0;
        else 
            result_h_Scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_h_Scale_we0_assign_proc : process(grp_processImage_fu_310_AllCandidates_h_we0, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_h_Scale_we0 <= grp_processImage_fu_310_AllCandidates_h_we0;
        else 
            result_h_Scale_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_h_address0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_address0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_address0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_h_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_h_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_address0;
        else 
            result_h_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_h_ce0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_ce0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_ce0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_h_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_h_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_ce0;
        else 
            result_h_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_h_d0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_d0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_d0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_h_d0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_h_d0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_d0;
        else 
            result_h_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_h_we0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_we0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_we0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_h_we0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_h_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_h_we0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_h_we0;
        else 
            result_h_we0 <= ap_const_logic_0;
        end if; 
    end process;

    result_size <= storemerge_reg_250;

    result_size_ap_vld_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            result_size_ap_vld <= ap_const_logic_1;
        else 
            result_size_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    result_w_Scale_address0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_Scale_address0, grp_processImage_fu_310_AllCandidates_w_address0, ap_CS_fsm_state44, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_w_Scale_address0 <= grp_processImage_fu_310_AllCandidates_w_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_w_Scale_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_Scale_address0;
        else 
            result_w_Scale_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_w_Scale_ce0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_Scale_ce0, grp_processImage_fu_310_AllCandidates_w_ce0, ap_CS_fsm_state44, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_w_Scale_ce0 <= grp_processImage_fu_310_AllCandidates_w_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_w_Scale_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_Scale_ce0;
        else 
            result_w_Scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_w_Scale_we0_assign_proc : process(grp_processImage_fu_310_AllCandidates_w_we0, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_w_Scale_we0 <= grp_processImage_fu_310_AllCandidates_w_we0;
        else 
            result_w_Scale_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_w_address0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_address0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_address0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_w_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_w_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_address0;
        else 
            result_w_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_w_ce0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_ce0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_ce0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_w_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_w_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_ce0;
        else 
            result_w_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_w_d0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_d0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_d0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_w_d0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_w_d0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_d0;
        else 
            result_w_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_w_we0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_we0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_we0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_w_we0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_w_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_w_we0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_w_we0;
        else 
            result_w_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_x_Scale_address0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_Scale_address0, grp_processImage_fu_310_AllCandidates_x_address0, ap_CS_fsm_state44, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_x_Scale_address0 <= grp_processImage_fu_310_AllCandidates_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_x_Scale_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_Scale_address0;
        else 
            result_x_Scale_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_x_Scale_ce0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_Scale_ce0, grp_processImage_fu_310_AllCandidates_x_ce0, ap_CS_fsm_state44, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_x_Scale_ce0 <= grp_processImage_fu_310_AllCandidates_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_x_Scale_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_Scale_ce0;
        else 
            result_x_Scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_x_Scale_we0_assign_proc : process(grp_processImage_fu_310_AllCandidates_x_we0, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_x_Scale_we0 <= grp_processImage_fu_310_AllCandidates_x_we0;
        else 
            result_x_Scale_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_x_address0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_address0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_address0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_x_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_x_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_address0;
        else 
            result_x_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_x_ce0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_ce0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_ce0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_x_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_x_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_ce0;
        else 
            result_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_x_d0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_d0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_d0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_x_d0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_x_d0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_d0;
        else 
            result_x_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_x_we0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_we0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_we0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_x_we0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_x_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_x_we0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_x_we0;
        else 
            result_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_y_Scale_address0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_Scale_address0, grp_processImage_fu_310_AllCandidates_y_address0, ap_CS_fsm_state44, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_y_Scale_address0 <= grp_processImage_fu_310_AllCandidates_y_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_y_Scale_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_Scale_address0;
        else 
            result_y_Scale_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_y_Scale_ce0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_Scale_ce0, grp_processImage_fu_310_AllCandidates_y_ce0, ap_CS_fsm_state44, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_y_Scale_ce0 <= grp_processImage_fu_310_AllCandidates_y_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_y_Scale_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_Scale_ce0;
        else 
            result_y_Scale_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_y_Scale_we0_assign_proc : process(grp_processImage_fu_310_AllCandidates_y_we0, ap_CS_fsm_state43)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            result_y_Scale_we0 <= grp_processImage_fu_310_AllCandidates_y_we0;
        else 
            result_y_Scale_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_y_address0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_address0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_address0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_y_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_y_address0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_address0;
        else 
            result_y_address0 <= "XXXXXXX";
        end if; 
    end process;


    result_y_ce0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_ce0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_ce0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_y_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_y_ce0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_ce0;
        else 
            result_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_y_d0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_d0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_d0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_y_d0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_y_d0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_d0;
        else 
            result_y_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    result_y_we0_assign_proc : process(grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_we0, grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_we0, ap_CS_fsm_state44, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            result_y_we0 <= grp_face_detect_Pipeline_VITIS_LOOP_2872_3_fu_283_result_y_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            result_y_we0 <= grp_face_detect_Pipeline_VITIS_LOOP_2810_2_fu_271_result_y_we0;
        else 
            result_y_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln2774_fu_848_p3 <= 
        ap_const_lv64_3FE0000000000000 when (and_ln2774_fu_843_p2(0) = '1') else 
        ap_const_lv64_BFE0000000000000;
    select_ln3379_fu_894_p3 <= 
        sub_ln3379_fu_888_p2 when (p_Result_5_reg_1158(0) = '1') else 
        sext_ln3379_fu_884_p1;
    select_ln3380_fu_918_p3 <= 
        sub_ln3380_fu_912_p2 when (p_Result_7_reg_1171(0) = '1') else 
        trunc_ln3380_fu_908_p1;
        sext_ln1488_2_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_2_fu_618_p3),32));

        sext_ln1488_3_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_3_fu_739_p3),32));

        sext_ln1488_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_991_p3),32));

        sext_ln1512_2_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_2_fu_608_p2),9));

        sext_ln1512_3_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_3_fu_730_p2),9));

        sext_ln1512_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1512_fu_981_p2),12));

        sext_ln3379_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3379_fu_880_p1),27));

    sub_ln1512_2_fu_608_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_2_fu_566_p4));
    sub_ln1512_3_fu_730_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_V_3_reg_1177));
    sub_ln1512_fu_981_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(xs_exp_V_fu_935_p4));
    sub_ln3379_fu_888_p2 <= std_logic_vector(unsigned(ap_const_lv27_0) - unsigned(sext_ln3379_fu_884_p1));
    sub_ln3380_fu_912_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(trunc_ln3380_fu_908_p1));
    tmp_10_fu_420_p3 <= (trunc_ln2804_1_fu_410_p1 & ap_const_lv8_0);
    tmp_11_fu_428_p3 <= (trunc_ln2804_fu_406_p1 & ap_const_lv6_0);
    tmp_12_fu_515_p4 <= data_V_3_fu_512_p1(30 downto 23);
    tmp_14_fu_811_p4 <= bitcast_ln2774_fu_808_p1(30 downto 23);
    tmp_16_fu_658_p4 <= r_V_17_fu_640_p2(55 downto 24);
    tmp_17_fu_779_p4 <= r_V_19_fu_761_p2(55 downto 24);
    tmp_22_fu_646_p3 <= r_V_16_fu_634_p2(24 downto 24);
    tmp_26_fu_767_p3 <= r_V_18_fu_755_p2(24 downto 24);
    tmp_27_fu_1019_p3 <= r_V_fu_1007_p2(53 downto 53);
    tmp_28_fu_1031_p4 <= r_V_15_fu_1013_p2(84 downto 53);
    tmp_fu_475_p4 <= data_V_2_fu_472_p1(30 downto 23);
    trunc_ln2774_fu_821_p1 <= bitcast_ln2774_fu_808_p1(23 - 1 downto 0);
    trunc_ln2804_1_fu_410_p1 <= counter(9 - 1 downto 0);
    trunc_ln2804_fu_406_p1 <= counter(11 - 1 downto 0);
    trunc_ln3379_fu_880_p1 <= grp_fu_694_p2(26 - 1 downto 0);
    trunc_ln3380_fu_908_p1 <= grp_fu_797_p2(24 - 1 downto 0);
    ush_2_fu_618_p3 <= 
        sext_ln1512_2_fu_614_p1 when (isNeg_2_fu_600_p3(0) = '1') else 
        add_ln346_fu_594_p2;
    ush_3_fu_739_p3 <= 
        sext_ln1512_3_fu_735_p1 when (isNeg_3_fu_722_p3(0) = '1') else 
        add_ln346_1_fu_716_p2;
    ush_fu_991_p3 <= 
        sext_ln1512_fu_987_p1 when (isNeg_fu_973_p3(0) = '1') else 
        add_ln515_fu_967_p2;
    val_2_fu_668_p3 <= 
        zext_ln818_fu_654_p1 when (isNeg_2_fu_600_p3(0) = '1') else 
        tmp_16_fu_658_p4;
    val_3_fu_789_p3 <= 
        zext_ln818_2_fu_775_p1 when (isNeg_3_fu_722_p3(0) = '1') else 
        tmp_17_fu_779_p4;
    val_fu_1041_p3 <= 
        zext_ln818_3_fu_1027_p1 when (isNeg_fu_973_p3(0) = '1') else 
        tmp_28_fu_1031_p4;
    x_ratio_fu_901_p2 <= std_logic_vector(unsigned(select_ln3379_fu_894_p3) + unsigned(ap_const_lv27_1));
    xs_exp_V_2_fu_566_p4 <= data_V_2_fu_472_p1(30 downto 23);
    xs_exp_V_fu_935_p4 <= data_V_fu_932_p1(62 downto 52);
    y_ratio_fu_925_p2 <= std_logic_vector(unsigned(select_ln3380_fu_918_p3) + unsigned(ap_const_lv24_1));
    zext_ln1488_3_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_2_fu_626_p1),79));
    zext_ln1488_4_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_3_fu_747_p1),79));
    zext_ln1488_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1488_fu_999_p1),137));
    zext_ln15_2_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_2_fu_576_p4),79));
    zext_ln15_3_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_3_fu_700_p4),79));
    zext_ln15_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_949_p4),137));
    zext_ln346_1_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_3_reg_1177),9));
    zext_ln346_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_2_fu_566_p4),9));
    zext_ln515_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_V_fu_935_p4),12));
    zext_ln818_2_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_767_p3),32));
    zext_ln818_3_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1019_p3),32));
    zext_ln818_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_646_p3),32));
end behav;
