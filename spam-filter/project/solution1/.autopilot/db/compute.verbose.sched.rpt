

================================================================
== Vitis HLS Report for 'compute'
================================================================
* Date:           Tue Dec 17 15:07:14 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.541 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     3087|     3087|  30.870 us|  30.870 us|  3087|  3087|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%result_V_loc = alloca i64 1"   --->   Operation 8 'alloca' 'result_V_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%gradient_V = alloca i64 1" [sgd.cpp:226->sgd.cpp:282]   --->   Operation 9 'alloca' 'gradient_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [2/2] (0.00ns)   --->   "%call_ln0 = call void @compute_Pipeline_DOT_DOT_INNER, i32 %result_V_loc, i32 %theta_local_V, i16 %training_instance_V"   --->   Operation 10 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 1.00>
ST_2 : Operation 11 [1/2] (1.00ns)   --->   "%call_ln0 = call void @compute_Pipeline_DOT_DOT_INNER, i32 %result_V_loc, i32 %theta_local_V, i16 %training_instance_V"   --->   Operation 11 'call' 'call_ln0' <Predicate = true> <Delay = 1.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 3.05>
ST_3 : Operation 12 [1/1] (0.00ns)   --->   "%trunc_ln280_read = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %trunc_ln280"   --->   Operation 12 'read' 'trunc_ln280_read' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln274 = zext i13 %trunc_ln280_read" [sgd.cpp:274]   --->   Operation 13 'zext' 'zext_ln274' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 14 [1/1] (0.00ns)   --->   "%label_local_V_addr = getelementptr i8 %label_local_V, i64 0, i64 %zext_ln274" [sgd.cpp:278]   --->   Operation 14 'getelementptr' 'label_local_V_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 15 [2/2] (1.24ns)   --->   "%tmp_1 = load i13 %label_local_V_addr" [sgd.cpp:282]   --->   Operation 15 'load' 'tmp_1' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 4500> <RAM>
ST_3 : Operation 16 [1/1] (0.00ns)   --->   "%result_V_loc_load = load i32 %result_V_loc"   --->   Operation 16 'load' 'result_V_loc_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 17 [1/1] (0.85ns)   --->   "%icmp_ln1649 = icmp_sgt  i32 %result_V_loc_load, i32 2097152"   --->   Operation 17 'icmp' 'icmp_ln1649' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 18 [1/1] (0.85ns)   --->   "%icmp_ln1650 = icmp_slt  i32 %result_V_loc_load, i32 4292870144"   --->   Operation 18 'icmp' 'icmp_ln1650' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 19 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i11 @_ssdm_op_PartSelect.i11.i32.i32.i32, i32 %result_V_loc_load, i32 11, i32 21" [sgd.cpp:140]   --->   Operation 19 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%in_V = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i11.i11, i11 %trunc_ln1, i11 0"   --->   Operation 20 'bitconcatenate' 'in_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %result_V_loc_load, i32 22"   --->   Operation 21 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.82ns)   --->   "%in_V_1 = sub i22 0, i22 %in_V"   --->   Operation 22 'sub' 'in_V_1' <Predicate = true> <Delay = 0.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i11 @_ssdm_op_PartSelect.i11.i22.i32.i32, i22 %in_V_1, i32 11, i32 21"   --->   Operation 23 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.73ns)   --->   "%index_V = sub i11 0, i11 %trunc_ln"   --->   Operation 24 'sub' 'index_V' <Predicate = true> <Delay = 0.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 25 [1/1] (0.30ns)   --->   "%index_V_1 = select i1 %tmp, i11 %index_V, i11 %trunc_ln1"   --->   Operation 25 'select' 'index_V_1' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln541 = zext i11 %index_V_1"   --->   Operation 26 'zext' 'zext_ln541' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%lut_V_addr = getelementptr i10 %lut_V, i64 0, i64 %zext_ln541"   --->   Operation 27 'getelementptr' 'lut_V_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [2/2] (1.20ns)   --->   "%lut_V_load = load i11 %lut_V_addr"   --->   Operation 28 'load' 'lut_V_load' <Predicate = true> <Delay = 1.20> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 2048> <ROM>

State 4 <SV = 3> <Delay = 2.09>
ST_4 : Operation 29 [1/2] (1.24ns)   --->   "%tmp_1 = load i13 %label_local_V_addr" [sgd.cpp:282]   --->   Operation 29 'load' 'tmp_1' <Predicate = true> <Delay = 1.24> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.24> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 4500> <RAM>
ST_4 : Operation 30 [1/2] (1.20ns)   --->   "%lut_V_load = load i11 %lut_V_addr"   --->   Operation 30 'load' 'lut_V_load' <Predicate = true> <Delay = 1.20> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.20> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 10> <Depth = 2048> <ROM>
ST_4 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node scale_V)   --->   "%prob_V = bitconcatenate i19 @_ssdm_op_BitConcatenate.i19.i10.i9, i10 %lut_V_load, i9 0"   --->   Operation 31 'bitconcatenate' 'prob_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node scale_V)   --->   "%zext_ln234 = zext i19 %prob_V" [sgd.cpp:234->sgd.cpp:282]   --->   Operation 32 'zext' 'zext_ln234' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node and_ln1650)   --->   "%xor_ln1649 = xor i1 %icmp_ln1649, i1 1"   --->   Operation 33 'xor' 'xor_ln1649' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln1650 = and i1 %icmp_ln1650, i1 %xor_ln1649"   --->   Operation 34 'and' 'and_ln1650' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node scale_V)   --->   "%select_ln1650 = select i1 %and_ln1650, i20 0, i20 524288"   --->   Operation 35 'select' 'select_ln1650' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node scale_V)   --->   "%or_ln1650 = or i1 %and_ln1650, i1 %icmp_ln1649"   --->   Operation 36 'or' 'or_ln1650' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node scale_V)   --->   "%prob_V_1 = select i1 %or_ln1650, i20 %select_ln1650, i20 %zext_ln234"   --->   Operation 37 'select' 'prob_V_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node scale_V)   --->   "%zext_ln234_1 = zext i20 %prob_V_1" [sgd.cpp:234->sgd.cpp:282]   --->   Operation 38 'zext' 'zext_ln234_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node scale_V)   --->   "%shl_ln = bitconcatenate i27 @_ssdm_op_BitConcatenate.i27.i8.i19, i8 %tmp_1, i19 0"   --->   Operation 39 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node scale_V)   --->   "%zext_ln813 = zext i27 %shl_ln"   --->   Operation 40 'zext' 'zext_ln813' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.85ns) (out node of the LUT)   --->   "%scale_V = sub i28 %zext_ln234_1, i28 %zext_ln813"   --->   Operation 41 'sub' 'scale_V' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [2/2] (0.00ns)   --->   "%call_ln813 = call void @compute_Pipeline_GRAD_GRAD_INNER, i28 %scale_V, i32 %gradient_V, i16 %training_instance_V"   --->   Operation 42 'call' 'call_ln813' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 43 [1/2] (0.00ns)   --->   "%call_ln813 = call void @compute_Pipeline_GRAD_GRAD_INNER, i28 %scale_V, i32 %gradient_V, i16 %training_instance_V"   --->   Operation 43 'call' 'call_ln813' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 44 [2/2] (0.00ns)   --->   "%call_ln0 = call void @compute_Pipeline_UPDATE_UPDATE_INNER, i32 %gradient_V, i32 %theta_local_V"   --->   Operation 44 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 45 [1/2] (0.00ns)   --->   "%call_ln0 = call void @compute_Pipeline_UPDATE_UPDATE_INNER, i32 %gradient_V, i32 %theta_local_V"   --->   Operation 45 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 46 [1/1] (0.00ns)   --->   "%ret_ln282 = ret" [sgd.cpp:282]   --->   Operation 46 'ret' 'ret_ln282' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0ns
The critical path consists of the following:

 <State 2>: 1ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'compute_Pipeline_DOT_DOT_INNER' [12]  (1 ns)

 <State 3>: 3.06ns
The critical path consists of the following:
	'load' operation ('result_V_loc_load') on local variable 'result_V_loc' [13]  (0 ns)
	'sub' operation ('in.V') [19]  (0.821 ns)
	'sub' operation ('index.V') [21]  (0.735 ns)
	'select' operation ('index.V') [22]  (0.301 ns)
	'getelementptr' operation ('lut_V_addr') [24]  (0 ns)
	'load' operation ('lut_V_load') on array 'lut_V' [25]  (1.2 ns)

 <State 4>: 2.1ns
The critical path consists of the following:
	'load' operation ('tmp', sgd.cpp:282) on array 'label_local_V' [11]  (1.25 ns)
	'sub' operation ('scale.V') [36]  (0.85 ns)

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
