// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SgdLR_SgdLR_Pipeline_STREAM_OUT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        theta_address0,
        theta_ce0,
        theta_we0,
        theta_d0,
        theta_local_V_address0,
        theta_local_V_ce0,
        theta_local_V_q0,
        theta_local_V_address1,
        theta_local_V_ce1,
        theta_local_V_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] theta_address0;
output   theta_ce0;
output   theta_we0;
output  [511:0] theta_d0;
output  [9:0] theta_local_V_address0;
output   theta_local_V_ce0;
input  [31:0] theta_local_V_q0;
output  [9:0] theta_local_V_address1;
output   theta_local_V_ce1;
input  [31:0] theta_local_V_q1;

reg ap_idle;
reg theta_ce0;
reg theta_we0;
reg[9:0] theta_local_V_address0;
reg theta_local_V_ce0;
reg[9:0] theta_local_V_address1;
reg theta_local_V_ce1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln209_fu_234_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
reg   [6:0] i_1_reg_453;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln209_reg_458;
wire   [9:0] tmp_6_fu_250_p3;
reg   [9:0] tmp_6_reg_462;
reg   [31:0] theta_local_V_load_reg_490;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] theta_local_V_load_1_reg_495;
reg   [31:0] theta_local_V_load_2_reg_510;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] theta_local_V_load_3_reg_515;
reg   [31:0] theta_local_V_load_4_reg_530;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] theta_local_V_load_5_reg_535;
reg   [31:0] theta_local_V_load_6_reg_550;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] theta_local_V_load_7_reg_555;
reg   [31:0] theta_local_V_load_8_reg_570;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [31:0] theta_local_V_load_9_reg_575;
reg   [31:0] theta_local_V_load_10_reg_590;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] theta_local_V_load_11_reg_595;
reg   [31:0] theta_local_V_load_12_reg_610;
wire    ap_block_pp0_stage7_11001;
reg   [31:0] theta_local_V_load_13_reg_615;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln594_fu_258_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln594_1_fu_269_p1;
wire   [63:0] zext_ln594_2_fu_284_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln594_3_fu_294_p1;
wire   [63:0] zext_ln594_4_fu_304_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln594_5_fu_314_p1;
wire   [63:0] zext_ln594_6_fu_324_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln594_7_fu_334_p1;
wire   [63:0] zext_ln594_8_fu_344_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln594_9_fu_354_p1;
wire   [63:0] zext_ln594_10_fu_364_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln594_11_fu_374_p1;
wire   [63:0] zext_ln594_12_fu_384_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln594_13_fu_394_p1;
wire   [63:0] zext_ln594_14_fu_404_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln594_15_fu_414_p1;
wire   [63:0] i_4_cast29_fu_419_p1;
reg   [6:0] i_fu_72;
wire   [6:0] add_ln209_fu_240_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_1;
wire   [5:0] empty_119_fu_246_p1;
wire   [9:0] or_ln214_fu_263_p2;
wire   [9:0] or_ln214_1_fu_279_p2;
wire   [9:0] or_ln214_2_fu_289_p2;
wire   [9:0] or_ln214_3_fu_299_p2;
wire   [9:0] or_ln214_4_fu_309_p2;
wire   [9:0] or_ln214_5_fu_319_p2;
wire   [9:0] or_ln214_6_fu_329_p2;
wire   [9:0] or_ln214_7_fu_339_p2;
wire   [9:0] or_ln214_8_fu_349_p2;
wire   [9:0] or_ln214_9_fu_359_p2;
wire   [9:0] or_ln214_10_fu_369_p2;
wire   [9:0] or_ln214_11_fu_379_p2;
wire   [9:0] or_ln214_12_fu_389_p2;
wire   [9:0] or_ln214_13_fu_399_p2;
wire   [9:0] or_ln214_14_fu_409_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

SgdLR_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln209_fu_234_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_72 <= add_ln209_fu_240_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_72 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_453 <= ap_sig_allocacmp_i_1;
        icmp_ln209_reg_458 <= icmp_ln209_fu_234_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_reg_458 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        theta_local_V_load_10_reg_590 <= theta_local_V_q1;
        theta_local_V_load_11_reg_595 <= theta_local_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_reg_458 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        theta_local_V_load_12_reg_610 <= theta_local_V_q1;
        theta_local_V_load_13_reg_615 <= theta_local_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_reg_458 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        theta_local_V_load_1_reg_495 <= theta_local_V_q0;
        theta_local_V_load_reg_490 <= theta_local_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_reg_458 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        theta_local_V_load_2_reg_510 <= theta_local_V_q1;
        theta_local_V_load_3_reg_515 <= theta_local_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_reg_458 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        theta_local_V_load_4_reg_530 <= theta_local_V_q1;
        theta_local_V_load_5_reg_535 <= theta_local_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_reg_458 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        theta_local_V_load_6_reg_550 <= theta_local_V_q1;
        theta_local_V_load_7_reg_555 <= theta_local_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_reg_458 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        theta_local_V_load_8_reg_570 <= theta_local_V_q1;
        theta_local_V_load_9_reg_575 <= theta_local_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln209_fu_234_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_6_reg_462[9 : 4] <= tmp_6_fu_250_p3[9 : 4];
    end
end

always @ (*) begin
    if (((icmp_ln209_fu_234_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        theta_ce0 = 1'b1;
    end else begin
        theta_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            theta_local_V_address0 = zext_ln594_15_fu_414_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            theta_local_V_address0 = zext_ln594_13_fu_394_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            theta_local_V_address0 = zext_ln594_11_fu_374_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            theta_local_V_address0 = zext_ln594_9_fu_354_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            theta_local_V_address0 = zext_ln594_7_fu_334_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            theta_local_V_address0 = zext_ln594_5_fu_314_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            theta_local_V_address0 = zext_ln594_3_fu_294_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            theta_local_V_address0 = zext_ln594_1_fu_269_p1;
        end else begin
            theta_local_V_address0 = 'bx;
        end
    end else begin
        theta_local_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            theta_local_V_address1 = zext_ln594_14_fu_404_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            theta_local_V_address1 = zext_ln594_12_fu_384_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            theta_local_V_address1 = zext_ln594_10_fu_364_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            theta_local_V_address1 = zext_ln594_8_fu_344_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            theta_local_V_address1 = zext_ln594_6_fu_324_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            theta_local_V_address1 = zext_ln594_4_fu_304_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            theta_local_V_address1 = zext_ln594_2_fu_284_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            theta_local_V_address1 = zext_ln594_fu_258_p1;
        end else begin
            theta_local_V_address1 = 'bx;
        end
    end else begin
        theta_local_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        theta_local_V_ce0 = 1'b1;
    end else begin
        theta_local_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        theta_local_V_ce1 = 1'b1;
    end else begin
        theta_local_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        theta_we0 = 1'b1;
    end else begin
        theta_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln209_fu_240_p2 = (ap_sig_allocacmp_i_1 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_119_fu_246_p1 = ap_sig_allocacmp_i_1[5:0];

assign i_4_cast29_fu_419_p1 = i_1_reg_453;

assign icmp_ln209_fu_234_p2 = ((ap_sig_allocacmp_i_1 == 7'd64) ? 1'b1 : 1'b0);

assign or_ln214_10_fu_369_p2 = (tmp_6_reg_462 | 10'd11);

assign or_ln214_11_fu_379_p2 = (tmp_6_reg_462 | 10'd12);

assign or_ln214_12_fu_389_p2 = (tmp_6_reg_462 | 10'd13);

assign or_ln214_13_fu_399_p2 = (tmp_6_reg_462 | 10'd14);

assign or_ln214_14_fu_409_p2 = (tmp_6_reg_462 | 10'd15);

assign or_ln214_1_fu_279_p2 = (tmp_6_reg_462 | 10'd2);

assign or_ln214_2_fu_289_p2 = (tmp_6_reg_462 | 10'd3);

assign or_ln214_3_fu_299_p2 = (tmp_6_reg_462 | 10'd4);

assign or_ln214_4_fu_309_p2 = (tmp_6_reg_462 | 10'd5);

assign or_ln214_5_fu_319_p2 = (tmp_6_reg_462 | 10'd6);

assign or_ln214_6_fu_329_p2 = (tmp_6_reg_462 | 10'd7);

assign or_ln214_7_fu_339_p2 = (tmp_6_reg_462 | 10'd8);

assign or_ln214_8_fu_349_p2 = (tmp_6_reg_462 | 10'd9);

assign or_ln214_9_fu_359_p2 = (tmp_6_reg_462 | 10'd10);

assign or_ln214_fu_263_p2 = (tmp_6_fu_250_p3 | 10'd1);

assign theta_address0 = i_4_cast29_fu_419_p1;

assign theta_d0 = {{{{{{{{{{{{{{{{theta_local_V_q0}, {theta_local_V_q1}}, {theta_local_V_load_13_reg_615}}, {theta_local_V_load_12_reg_610}}, {theta_local_V_load_11_reg_595}}, {theta_local_V_load_10_reg_590}}, {theta_local_V_load_9_reg_575}}, {theta_local_V_load_8_reg_570}}, {theta_local_V_load_7_reg_555}}, {theta_local_V_load_6_reg_550}}, {theta_local_V_load_5_reg_535}}, {theta_local_V_load_4_reg_530}}, {theta_local_V_load_3_reg_515}}, {theta_local_V_load_2_reg_510}}, {theta_local_V_load_1_reg_495}}, {theta_local_V_load_reg_490}};

assign tmp_6_fu_250_p3 = {{empty_119_fu_246_p1}, {4'd0}};

assign zext_ln594_10_fu_364_p1 = or_ln214_9_fu_359_p2;

assign zext_ln594_11_fu_374_p1 = or_ln214_10_fu_369_p2;

assign zext_ln594_12_fu_384_p1 = or_ln214_11_fu_379_p2;

assign zext_ln594_13_fu_394_p1 = or_ln214_12_fu_389_p2;

assign zext_ln594_14_fu_404_p1 = or_ln214_13_fu_399_p2;

assign zext_ln594_15_fu_414_p1 = or_ln214_14_fu_409_p2;

assign zext_ln594_1_fu_269_p1 = or_ln214_fu_263_p2;

assign zext_ln594_2_fu_284_p1 = or_ln214_1_fu_279_p2;

assign zext_ln594_3_fu_294_p1 = or_ln214_2_fu_289_p2;

assign zext_ln594_4_fu_304_p1 = or_ln214_3_fu_299_p2;

assign zext_ln594_5_fu_314_p1 = or_ln214_4_fu_309_p2;

assign zext_ln594_6_fu_324_p1 = or_ln214_5_fu_319_p2;

assign zext_ln594_7_fu_334_p1 = or_ln214_6_fu_329_p2;

assign zext_ln594_8_fu_344_p1 = or_ln214_7_fu_339_p2;

assign zext_ln594_9_fu_354_p1 = or_ln214_8_fu_349_p2;

assign zext_ln594_fu_258_p1 = tmp_6_fu_250_p3;

always @ (posedge ap_clk) begin
    tmp_6_reg_462[3:0] <= 4'b0000;
end

endmodule //SgdLR_SgdLR_Pipeline_STREAM_OUT
