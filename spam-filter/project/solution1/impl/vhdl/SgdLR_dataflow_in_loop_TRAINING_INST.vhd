-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity SgdLR_dataflow_in_loop_TRAINING_INST is
port (
    trunc_ln280 : IN STD_LOGIC_VECTOR (12 downto 0);
    data_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    data_ce0 : OUT STD_LOGIC;
    data_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
    data_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    data_we0 : OUT STD_LOGIC;
    data_address1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    data_ce1 : OUT STD_LOGIC;
    data_d1 : OUT STD_LOGIC_VECTOR (511 downto 0);
    data_q1 : IN STD_LOGIC_VECTOR (511 downto 0);
    data_we1 : OUT STD_LOGIC;
    theta_local_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    theta_local_V_ce0 : OUT STD_LOGIC;
    theta_local_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    theta_local_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    theta_local_V_we0 : OUT STD_LOGIC;
    theta_local_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    theta_local_V_ce1 : OUT STD_LOGIC;
    theta_local_V_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    theta_local_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    theta_local_V_we1 : OUT STD_LOGIC;
    label_local_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    label_local_V_ce0 : OUT STD_LOGIC;
    label_local_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    label_local_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    label_local_V_we0 : OUT STD_LOGIC;
    label_local_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    label_local_V_ce1 : OUT STD_LOGIC;
    label_local_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    label_local_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    label_local_V_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    trunc_ln280_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of SgdLR_dataflow_in_loop_TRAINING_INST is 
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal READ_TRAINING_DATA_proc_U0_ap_start : STD_LOGIC;
    signal READ_TRAINING_DATA_proc_U0_ap_done : STD_LOGIC;
    signal READ_TRAINING_DATA_proc_U0_ap_continue : STD_LOGIC;
    signal READ_TRAINING_DATA_proc_U0_ap_idle : STD_LOGIC;
    signal READ_TRAINING_DATA_proc_U0_ap_ready : STD_LOGIC;
    signal READ_TRAINING_DATA_proc_U0_data_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal READ_TRAINING_DATA_proc_U0_data_ce0 : STD_LOGIC;
    signal READ_TRAINING_DATA_proc_U0_training_instance_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal READ_TRAINING_DATA_proc_U0_training_instance_V_ce0 : STD_LOGIC;
    signal READ_TRAINING_DATA_proc_U0_training_instance_V_we0 : STD_LOGIC;
    signal READ_TRAINING_DATA_proc_U0_training_instance_V_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal compute_U0_ap_start : STD_LOGIC;
    signal compute_U0_ap_done : STD_LOGIC;
    signal compute_U0_ap_continue : STD_LOGIC;
    signal compute_U0_ap_idle : STD_LOGIC;
    signal compute_U0_ap_ready : STD_LOGIC;
    signal compute_U0_label_local_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal compute_U0_label_local_V_ce0 : STD_LOGIC;
    signal compute_U0_theta_local_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal compute_U0_theta_local_V_ce0 : STD_LOGIC;
    signal compute_U0_theta_local_V_we0 : STD_LOGIC;
    signal compute_U0_theta_local_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal compute_U0_theta_local_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal compute_U0_theta_local_V_ce1 : STD_LOGIC;
    signal compute_U0_training_instance_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal compute_U0_training_instance_V_ce0 : STD_LOGIC;
    signal training_instance_V_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal training_instance_V_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal training_instance_V_i_full_n : STD_LOGIC;
    signal training_instance_V_t_empty_n : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_READ_TRAINING_DATA_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_READ_TRAINING_DATA_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_compute_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_compute_U0_ap_ready : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component SgdLR_READ_TRAINING_DATA_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        trunc_ln280 : IN STD_LOGIC_VECTOR (12 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        training_instance_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        training_instance_V_ce0 : OUT STD_LOGIC;
        training_instance_V_we0 : OUT STD_LOGIC;
        training_instance_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component SgdLR_compute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        label_local_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        label_local_V_ce0 : OUT STD_LOGIC;
        label_local_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        trunc_ln280 : IN STD_LOGIC_VECTOR (12 downto 0);
        theta_local_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        theta_local_V_ce0 : OUT STD_LOGIC;
        theta_local_V_we0 : OUT STD_LOGIC;
        theta_local_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        theta_local_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        theta_local_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        theta_local_V_ce1 : OUT STD_LOGIC;
        theta_local_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        training_instance_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        training_instance_V_ce0 : OUT STD_LOGIC;
        training_instance_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component SgdLR_dataflow_in_loop_TRAINING_INST_training_instance_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    READ_TRAINING_DATA_proc_U0 : component SgdLR_READ_TRAINING_DATA_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => READ_TRAINING_DATA_proc_U0_ap_start,
        ap_done => READ_TRAINING_DATA_proc_U0_ap_done,
        ap_continue => READ_TRAINING_DATA_proc_U0_ap_continue,
        ap_idle => READ_TRAINING_DATA_proc_U0_ap_idle,
        ap_ready => READ_TRAINING_DATA_proc_U0_ap_ready,
        trunc_ln280 => trunc_ln280,
        data_address0 => READ_TRAINING_DATA_proc_U0_data_address0,
        data_ce0 => READ_TRAINING_DATA_proc_U0_data_ce0,
        data_q0 => data_q0,
        training_instance_V_address0 => READ_TRAINING_DATA_proc_U0_training_instance_V_address0,
        training_instance_V_ce0 => READ_TRAINING_DATA_proc_U0_training_instance_V_ce0,
        training_instance_V_we0 => READ_TRAINING_DATA_proc_U0_training_instance_V_we0,
        training_instance_V_d0 => READ_TRAINING_DATA_proc_U0_training_instance_V_d0);

    compute_U0 : component SgdLR_compute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => compute_U0_ap_start,
        ap_done => compute_U0_ap_done,
        ap_continue => compute_U0_ap_continue,
        ap_idle => compute_U0_ap_idle,
        ap_ready => compute_U0_ap_ready,
        label_local_V_address0 => compute_U0_label_local_V_address0,
        label_local_V_ce0 => compute_U0_label_local_V_ce0,
        label_local_V_q0 => label_local_V_q0,
        trunc_ln280 => trunc_ln280,
        theta_local_V_address0 => compute_U0_theta_local_V_address0,
        theta_local_V_ce0 => compute_U0_theta_local_V_ce0,
        theta_local_V_we0 => compute_U0_theta_local_V_we0,
        theta_local_V_d0 => compute_U0_theta_local_V_d0,
        theta_local_V_q0 => theta_local_V_q0,
        theta_local_V_address1 => compute_U0_theta_local_V_address1,
        theta_local_V_ce1 => compute_U0_theta_local_V_ce1,
        theta_local_V_q1 => theta_local_V_q1,
        training_instance_V_address0 => compute_U0_training_instance_V_address0,
        training_instance_V_ce0 => compute_U0_training_instance_V_ce0,
        training_instance_V_q0 => training_instance_V_t_q0);

    training_instance_V_U : component SgdLR_dataflow_in_loop_TRAINING_INST_training_instance_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => READ_TRAINING_DATA_proc_U0_training_instance_V_address0,
        i_ce0 => READ_TRAINING_DATA_proc_U0_training_instance_V_ce0,
        i_we0 => READ_TRAINING_DATA_proc_U0_training_instance_V_we0,
        i_d0 => READ_TRAINING_DATA_proc_U0_training_instance_V_d0,
        i_q0 => training_instance_V_i_q0,
        t_address0 => compute_U0_training_instance_V_address0,
        t_ce0 => compute_U0_training_instance_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv16_0,
        t_q0 => training_instance_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => training_instance_V_i_full_n,
        i_write => READ_TRAINING_DATA_proc_U0_ap_done,
        t_empty_n => training_instance_V_t_empty_n,
        t_read => compute_U0_ap_ready);





    ap_sync_reg_READ_TRAINING_DATA_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_READ_TRAINING_DATA_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_READ_TRAINING_DATA_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_READ_TRAINING_DATA_proc_U0_ap_ready <= ap_sync_READ_TRAINING_DATA_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_compute_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_compute_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_compute_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_compute_U0_ap_ready <= ap_sync_compute_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    READ_TRAINING_DATA_proc_U0_ap_continue <= training_instance_V_i_full_n;
    READ_TRAINING_DATA_proc_U0_ap_start <= ((ap_sync_reg_READ_TRAINING_DATA_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    ap_done <= compute_U0_ap_done;
    ap_idle <= ((training_instance_V_t_empty_n xor ap_const_logic_1) and compute_U0_ap_idle and READ_TRAINING_DATA_proc_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_READ_TRAINING_DATA_proc_U0_ap_ready <= (ap_sync_reg_READ_TRAINING_DATA_proc_U0_ap_ready or READ_TRAINING_DATA_proc_U0_ap_ready);
    ap_sync_compute_U0_ap_ready <= (compute_U0_ap_ready or ap_sync_reg_compute_U0_ap_ready);
    ap_sync_ready <= (ap_sync_compute_U0_ap_ready and ap_sync_READ_TRAINING_DATA_proc_U0_ap_ready);
    compute_U0_ap_continue <= ap_continue;
    compute_U0_ap_start <= (training_instance_V_t_empty_n and (ap_sync_reg_compute_U0_ap_ready xor ap_const_logic_1) and ap_start);
    data_address0 <= READ_TRAINING_DATA_proc_U0_data_address0;
    data_address1 <= ap_const_lv18_0;
    data_ce0 <= READ_TRAINING_DATA_proc_U0_data_ce0;
    data_ce1 <= ap_const_logic_0;
    data_d0 <= ap_const_lv512_lc_1;
    data_d1 <= ap_const_lv512_lc_1;
    data_we0 <= ap_const_logic_0;
    data_we1 <= ap_const_logic_0;
    label_local_V_address0 <= compute_U0_label_local_V_address0;
    label_local_V_address1 <= ap_const_lv13_0;
    label_local_V_ce0 <= compute_U0_label_local_V_ce0;
    label_local_V_ce1 <= ap_const_logic_0;
    label_local_V_d0 <= ap_const_lv8_0;
    label_local_V_d1 <= ap_const_lv8_0;
    label_local_V_we0 <= ap_const_logic_0;
    label_local_V_we1 <= ap_const_logic_0;
    theta_local_V_address0 <= compute_U0_theta_local_V_address0;
    theta_local_V_address1 <= compute_U0_theta_local_V_address1;
    theta_local_V_ce0 <= compute_U0_theta_local_V_ce0;
    theta_local_V_ce1 <= compute_U0_theta_local_V_ce1;
    theta_local_V_d0 <= compute_U0_theta_local_V_d0;
    theta_local_V_d1 <= ap_const_lv32_0;
    theta_local_V_we0 <= compute_U0_theta_local_V_we0;
    theta_local_V_we1 <= ap_const_logic_0;
end behav;
