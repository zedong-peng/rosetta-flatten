

================================================================
== Vitis HLS Report for 'rasterization2'
================================================================
* Date:           Tue Dec 17 15:06:52 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.574 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-------+---------+
    |  Latency (cycles) |  Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max   | min |  max  |   Type  |
    +---------+---------+-----------+----------+-----+-------+---------+
    |        1|    65560|  10.000 ns|  0.656 ms|    1|  65560|       no|
    +---------+---------+-----------+----------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 3 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.87>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%triangle_2d_same_z_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %triangle_2d_same_z"   --->   Operation 4 'read' 'triangle_2d_same_z_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%triangle_2d_same_y2_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %triangle_2d_same_y2"   --->   Operation 5 'read' 'triangle_2d_same_y2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%triangle_2d_same_x2_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %triangle_2d_same_x2"   --->   Operation 6 'read' 'triangle_2d_same_x2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%triangle_2d_same_y1_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %triangle_2d_same_y1"   --->   Operation 7 'read' 'triangle_2d_same_y1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%triangle_2d_same_x1_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %triangle_2d_same_x1"   --->   Operation 8 'read' 'triangle_2d_same_x1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%triangle_2d_same_y0_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %triangle_2d_same_y0"   --->   Operation 9 'read' 'triangle_2d_same_y0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%triangle_2d_same_x0_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %triangle_2d_same_x0"   --->   Operation 10 'read' 'triangle_2d_same_x0_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %p_read4"   --->   Operation 11 'read' 'p_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_read_4 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read3"   --->   Operation 12 'read' 'p_read_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_read_5 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read2"   --->   Operation 13 'read' 'p_read_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_read_6 = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %p_read1"   --->   Operation 14 'read' 'p_read_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%flag_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %flag"   --->   Operation 15 'read' 'flag_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i_V_loc = alloca i64 1"   --->   Operation 16 'alloca' 'i_V_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.34ns)   --->   "%icmp_ln184 = icmp_eq  i2 %flag_read, i2 0" [rendering.cpp:184]   --->   Operation 17 'icmp' 'icmp_ln184' <Predicate = true> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.38ns)   --->   "%br_ln184 = br i1 %icmp_ln184, void %return, void %RAST2" [rendering.cpp:184]   --->   Operation 18 'br' 'br_ln184' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%triangle_2d_same_y1_cast = zext i8 %triangle_2d_same_y1_read"   --->   Operation 19 'zext' 'triangle_2d_same_y1_cast' <Predicate = (icmp_ln184)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%triangle_2d_same_y0_cast = zext i8 %triangle_2d_same_y0_read"   --->   Operation 20 'zext' 'triangle_2d_same_y0_cast' <Predicate = (icmp_ln184)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.70ns)   --->   "%ret_V_27 = sub i9 %triangle_2d_same_y1_cast, i9 %triangle_2d_same_y0_cast"   --->   Operation 21 'sub' 'ret_V_27' <Predicate = (icmp_ln184)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%triangle_2d_same_x1_cast = zext i8 %triangle_2d_same_x1_read"   --->   Operation 22 'zext' 'triangle_2d_same_x1_cast' <Predicate = (icmp_ln184)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%triangle_2d_same_x0_cast = zext i8 %triangle_2d_same_x0_read"   --->   Operation 23 'zext' 'triangle_2d_same_x0_cast' <Predicate = (icmp_ln184)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.70ns)   --->   "%ret_V_30 = sub i9 %triangle_2d_same_x1_cast, i9 %triangle_2d_same_x0_cast"   --->   Operation 24 'sub' 'ret_V_30' <Predicate = (icmp_ln184)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%triangle_2d_same_y2_cast = zext i8 %triangle_2d_same_y2_read"   --->   Operation 25 'zext' 'triangle_2d_same_y2_cast' <Predicate = (icmp_ln184)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.70ns)   --->   "%ret_V_33 = sub i9 %triangle_2d_same_y2_cast, i9 %triangle_2d_same_y1_cast"   --->   Operation 26 'sub' 'ret_V_33' <Predicate = (icmp_ln184)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%triangle_2d_same_x2_cast = zext i8 %triangle_2d_same_x2_read"   --->   Operation 27 'zext' 'triangle_2d_same_x2_cast' <Predicate = (icmp_ln184)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.70ns)   --->   "%ret_V_36 = sub i9 %triangle_2d_same_x2_cast, i9 %triangle_2d_same_x1_cast"   --->   Operation 28 'sub' 'ret_V_36' <Predicate = (icmp_ln184)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.70ns)   --->   "%ret_V_39 = sub i9 %triangle_2d_same_y0_cast, i9 %triangle_2d_same_y2_cast"   --->   Operation 29 'sub' 'ret_V_39' <Predicate = (icmp_ln184)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.70ns)   --->   "%ret_V_42 = sub i9 %triangle_2d_same_x0_cast, i9 %triangle_2d_same_x2_cast"   --->   Operation 30 'sub' 'ret_V_42' <Predicate = (icmp_ln184)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [2/2] (1.16ns)   --->   "%call_ln0 = call void @rasterization2_Pipeline_RAST2, i16 %p_read, i8 %p_read_4, i8 %p_read_6, i8 %p_read_5, i8 %triangle_2d_same_x0_read, i9 %ret_V_27, i8 %triangle_2d_same_y0_read, i9 %ret_V_30, i8 %triangle_2d_same_x1_read, i9 %ret_V_33, i8 %triangle_2d_same_y1_read, i9 %ret_V_36, i8 %triangle_2d_same_x2_read, i9 %ret_V_39, i8 %triangle_2d_same_y2_read, i9 %ret_V_42, i8 %fragment2_x, i8 %fragment2_y, i8 %fragment2_z, i8 %triangle_2d_same_z_read, i6 %fragment2_color, i16 %i_V_loc"   --->   Operation 31 'call' 'call_ln0' <Predicate = (icmp_ln184)> <Delay = 1.16> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 32 [1/2] (0.00ns)   --->   "%call_ln0 = call void @rasterization2_Pipeline_RAST2, i16 %p_read, i8 %p_read_4, i8 %p_read_6, i8 %p_read_5, i8 %triangle_2d_same_x0_read, i9 %ret_V_27, i8 %triangle_2d_same_y0_read, i9 %ret_V_30, i8 %triangle_2d_same_x1_read, i9 %ret_V_33, i8 %triangle_2d_same_y1_read, i9 %ret_V_36, i8 %triangle_2d_same_x2_read, i9 %ret_V_39, i8 %triangle_2d_same_y2_read, i9 %ret_V_42, i8 %fragment2_x, i8 %fragment2_y, i8 %fragment2_z, i8 %triangle_2d_same_z_read, i6 %fragment2_color, i16 %i_V_loc"   --->   Operation 32 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 0.38>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%i_V_loc_load = load i16 %i_V_loc"   --->   Operation 33 'load' 'i_V_loc_load' <Predicate = (icmp_ln184)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.38ns)   --->   "%br_ln0 = br void %return"   --->   Operation 34 'br' 'br_ln0' <Predicate = (icmp_ln184)> <Delay = 0.38>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%agg_result_0 = phi i16 %i_V_loc_load, void %RAST2, i16 0, void %entry"   --->   Operation 35 'phi' 'agg_result_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%ret_ln208 = ret i16 %agg_result_0" [rendering.cpp:208]   --->   Operation 36 'ret' 'ret_ln208' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.87ns
The critical path consists of the following:
	wire read operation ('triangle_2d_same_y2_read') on port 'triangle_2d_same_y2' [18]  (0 ns)
	'sub' operation ('ret_V_39') [43]  (0.705 ns)
	'call' operation ('call_ln0') to 'rasterization2_Pipeline_RAST2' [45]  (1.17 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0.387ns
The critical path consists of the following:
	'load' operation ('i_V_loc_load') on local variable 'i_V_loc' [46]  (0 ns)
	multiplexor before 'phi' operation ('agg_result_0') with incoming values : ('i_V_loc_load') [49]  (0.387 ns)
	'phi' operation ('agg_result_0') with incoming values : ('i_V_loc_load') [49]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
