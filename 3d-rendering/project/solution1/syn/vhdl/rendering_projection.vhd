-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rendering_projection is
port (
    ap_ready : OUT STD_LOGIC;
    triangle_2d_x0_V_write : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_y0_V_write : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_3d_z0 : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_x1_V_write : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_y1_V_write : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_3d_z1 : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_x2_V_write : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_y2_V_write : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_3d_z2 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of rendering_projection is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv17_156 : STD_LOGIC_VECTOR (16 downto 0) := "00000000101010110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal mul_ln1513_fu_88_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1513_fu_88_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1513_fu_88_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_94_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1513_1_fu_112_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1513_1_fu_112_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1513_1_fu_112_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_fu_118_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1513_2_fu_136_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1513_2_fu_136_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1513_2_fu_136_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_fu_142_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1513_1_fu_104_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1513_5_fu_152_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_fu_156_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1513_3_fu_128_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_1_fu_162_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1513_1_fu_112_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1513_2_fu_136_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1513_fu_88_p00 : STD_LOGIC_VECTOR (16 downto 0);

    component rendering_mul_8ns_10ns_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    mul_8ns_10ns_17_1_1_U1 : component rendering_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln1513_fu_88_p0,
        din1 => mul_ln1513_fu_88_p1,
        dout => mul_ln1513_fu_88_p2);

    mul_8ns_10ns_17_1_1_U2 : component rendering_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln1513_1_fu_112_p0,
        din1 => mul_ln1513_1_fu_112_p1,
        dout => mul_ln1513_1_fu_112_p2);

    mul_8ns_10ns_17_1_1_U3 : component rendering_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln1513_2_fu_136_p0,
        din1 => mul_ln1513_2_fu_136_p1,
        dout => mul_ln1513_2_fu_136_p2);




    add_ln186_1_fu_162_p2 <= std_logic_vector(unsigned(add_ln186_fu_156_p2) + unsigned(zext_ln1513_3_fu_128_p1));
    add_ln186_fu_156_p2 <= std_logic_vector(unsigned(zext_ln1513_1_fu_104_p1) + unsigned(zext_ln1513_5_fu_152_p1));
    ap_ready <= ap_const_logic_1;
    ap_return_0 <= triangle_2d_x0_V_write;
    ap_return_1 <= triangle_2d_y0_V_write;
    ap_return_2 <= triangle_2d_x1_V_write;
    ap_return_3 <= triangle_2d_y1_V_write;
    ap_return_4 <= triangle_2d_x2_V_write;
    ap_return_5 <= triangle_2d_y2_V_write;
    ap_return_6 <= add_ln186_1_fu_162_p2;
    mul_ln1513_1_fu_112_p0 <= mul_ln1513_1_fu_112_p00(8 - 1 downto 0);
    mul_ln1513_1_fu_112_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_3d_z1),17));
    mul_ln1513_1_fu_112_p1 <= ap_const_lv17_156(10 - 1 downto 0);
    mul_ln1513_2_fu_136_p0 <= mul_ln1513_2_fu_136_p00(8 - 1 downto 0);
    mul_ln1513_2_fu_136_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_3d_z2),17));
    mul_ln1513_2_fu_136_p1 <= ap_const_lv17_156(10 - 1 downto 0);
    mul_ln1513_fu_88_p0 <= mul_ln1513_fu_88_p00(8 - 1 downto 0);
    mul_ln1513_fu_88_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_3d_z0),17));
    mul_ln1513_fu_88_p1 <= ap_const_lv17_156(10 - 1 downto 0);
    tmp_2_fu_118_p4 <= mul_ln1513_1_fu_112_p2(16 downto 10);
    tmp_3_fu_142_p4 <= mul_ln1513_2_fu_136_p2(16 downto 10);
    tmp_fu_94_p4 <= mul_ln1513_fu_88_p2(16 downto 10);
    zext_ln1513_1_fu_104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_94_p4),8));
    zext_ln1513_3_fu_128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_118_p4),8));
    zext_ln1513_5_fu_152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_142_p4),8));
end behav;
