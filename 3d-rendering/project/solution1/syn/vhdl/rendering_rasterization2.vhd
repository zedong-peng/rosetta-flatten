-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rendering_rasterization2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    flag : IN STD_LOGIC_VECTOR (1 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
    triangle_2d_same_x0 : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_y0 : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_x1 : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_y1 : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_x2 : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_y2 : IN STD_LOGIC_VECTOR (7 downto 0);
    triangle_2d_same_z : IN STD_LOGIC_VECTOR (7 downto 0);
    fragment2_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fragment2_x_ce0 : OUT STD_LOGIC;
    fragment2_x_we0 : OUT STD_LOGIC;
    fragment2_x_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    fragment2_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fragment2_y_ce0 : OUT STD_LOGIC;
    fragment2_y_we0 : OUT STD_LOGIC;
    fragment2_y_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    fragment2_z_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fragment2_z_ce0 : OUT STD_LOGIC;
    fragment2_z_we0 : OUT STD_LOGIC;
    fragment2_z_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    fragment2_color_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fragment2_color_ce0 : OUT STD_LOGIC;
    fragment2_color_we0 : OUT STD_LOGIC;
    fragment2_color_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of rendering_rasterization2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln184_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln184_reg_311 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_27_fu_188_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_27_reg_315 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_30_fu_203_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_30_reg_320 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_33_fu_214_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_33_reg_325 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_36_fu_225_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_36_reg_330 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_39_fu_232_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_39_reg_335 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_42_fu_239_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_42_reg_340 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_ap_start : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_ap_done : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_ap_idle : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_ap_ready : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_ce0 : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_we0 : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_ce0 : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_we0 : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_ce0 : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_we0 : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_ce0 : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_we0 : STD_LOGIC;
    signal grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_i_V_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_rasterization2_Pipeline_RAST2_fu_133_i_V_out_ap_vld : STD_LOGIC;
    signal ap_phi_mux_agg_result_0_phi_fu_126_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal agg_result_0_reg_122 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_rasterization2_Pipeline_RAST2_fu_133_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal triangle_2d_same_y1_cast_fu_180_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal triangle_2d_same_y0_cast_fu_184_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal triangle_2d_same_x1_cast_fu_195_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal triangle_2d_same_x0_cast_fu_199_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal triangle_2d_same_y2_cast_fu_210_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal triangle_2d_same_x2_cast_fu_221_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component rendering_rasterization2_Pipeline_RAST2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3_cast : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        triangle_2d_same_x0_cast : IN STD_LOGIC_VECTOR (7 downto 0);
        rhs : IN STD_LOGIC_VECTOR (8 downto 0);
        triangle_2d_same_y0_cast : IN STD_LOGIC_VECTOR (7 downto 0);
        rhs_1 : IN STD_LOGIC_VECTOR (8 downto 0);
        triangle_2d_same_x1_cast : IN STD_LOGIC_VECTOR (7 downto 0);
        rhs_V : IN STD_LOGIC_VECTOR (8 downto 0);
        triangle_2d_same_y1_cast : IN STD_LOGIC_VECTOR (7 downto 0);
        rhs_V_1 : IN STD_LOGIC_VECTOR (8 downto 0);
        triangle_2d_same_x2_cast : IN STD_LOGIC_VECTOR (7 downto 0);
        rhs_V_3 : IN STD_LOGIC_VECTOR (8 downto 0);
        triangle_2d_same_y2_cast : IN STD_LOGIC_VECTOR (7 downto 0);
        rhs_V_4 : IN STD_LOGIC_VECTOR (8 downto 0);
        fragment2_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fragment2_x_ce0 : OUT STD_LOGIC;
        fragment2_x_we0 : OUT STD_LOGIC;
        fragment2_x_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fragment2_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fragment2_y_ce0 : OUT STD_LOGIC;
        fragment2_y_we0 : OUT STD_LOGIC;
        fragment2_y_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fragment2_z_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fragment2_z_ce0 : OUT STD_LOGIC;
        fragment2_z_we0 : OUT STD_LOGIC;
        fragment2_z_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        triangle_2d_same_z : IN STD_LOGIC_VECTOR (7 downto 0);
        fragment2_color_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fragment2_color_ce0 : OUT STD_LOGIC;
        fragment2_color_we0 : OUT STD_LOGIC;
        fragment2_color_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        i_V_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_V_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_rasterization2_Pipeline_RAST2_fu_133 : component rendering_rasterization2_Pipeline_RAST2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rasterization2_Pipeline_RAST2_fu_133_ap_start,
        ap_done => grp_rasterization2_Pipeline_RAST2_fu_133_ap_done,
        ap_idle => grp_rasterization2_Pipeline_RAST2_fu_133_ap_idle,
        ap_ready => grp_rasterization2_Pipeline_RAST2_fu_133_ap_ready,
        p_read4 => p_read4,
        p_read3_cast => p_read3,
        p_read1 => p_read1,
        p_read2 => p_read2,
        triangle_2d_same_x0_cast => triangle_2d_same_x0,
        rhs => ret_V_27_reg_315,
        triangle_2d_same_y0_cast => triangle_2d_same_y0,
        rhs_1 => ret_V_30_reg_320,
        triangle_2d_same_x1_cast => triangle_2d_same_x1,
        rhs_V => ret_V_33_reg_325,
        triangle_2d_same_y1_cast => triangle_2d_same_y1,
        rhs_V_1 => ret_V_36_reg_330,
        triangle_2d_same_x2_cast => triangle_2d_same_x2,
        rhs_V_3 => ret_V_39_reg_335,
        triangle_2d_same_y2_cast => triangle_2d_same_y2,
        rhs_V_4 => ret_V_42_reg_340,
        fragment2_x_address0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_address0,
        fragment2_x_ce0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_ce0,
        fragment2_x_we0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_we0,
        fragment2_x_d0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_d0,
        fragment2_y_address0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_address0,
        fragment2_y_ce0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_ce0,
        fragment2_y_we0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_we0,
        fragment2_y_d0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_d0,
        fragment2_z_address0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_address0,
        fragment2_z_ce0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_ce0,
        fragment2_z_we0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_we0,
        fragment2_z_d0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_d0,
        triangle_2d_same_z => triangle_2d_same_z,
        fragment2_color_address0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_address0,
        fragment2_color_ce0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_ce0,
        fragment2_color_we0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_we0,
        fragment2_color_d0 => grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_d0,
        i_V_out => grp_rasterization2_Pipeline_RAST2_fu_133_i_V_out,
        i_V_out_ap_vld => grp_rasterization2_Pipeline_RAST2_fu_133_i_V_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv16_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_return_preg <= ap_phi_mux_agg_result_0_phi_fu_126_p4;
                end if; 
            end if;
        end if;
    end process;


    grp_rasterization2_Pipeline_RAST2_fu_133_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rasterization2_Pipeline_RAST2_fu_133_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (icmp_ln184_fu_174_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_rasterization2_Pipeline_RAST2_fu_133_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rasterization2_Pipeline_RAST2_fu_133_ap_ready = ap_const_logic_1)) then 
                    grp_rasterization2_Pipeline_RAST2_fu_133_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    agg_result_0_reg_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (icmp_ln184_fu_174_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                agg_result_0_reg_122 <= ap_const_lv16_0;
            elsif (((icmp_ln184_reg_311 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                agg_result_0_reg_122 <= grp_rasterization2_Pipeline_RAST2_fu_133_i_V_out;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln184_reg_311 <= icmp_ln184_fu_174_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln184_fu_174_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                ret_V_27_reg_315 <= ret_V_27_fu_188_p2;
                ret_V_30_reg_320 <= ret_V_30_fu_203_p2;
                ret_V_33_reg_325 <= ret_V_33_fu_214_p2;
                ret_V_36_reg_330 <= ret_V_36_fu_225_p2;
                ret_V_39_reg_335 <= ret_V_39_fu_232_p2;
                ret_V_42_reg_340 <= ret_V_42_fu_239_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln184_fu_174_p2, grp_rasterization2_Pipeline_RAST2_fu_133_ap_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (icmp_ln184_fu_174_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_start = ap_const_logic_1) and (icmp_ln184_fu_174_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_rasterization2_Pipeline_RAST2_fu_133_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_rasterization2_Pipeline_RAST2_fu_133_ap_done)
    begin
        if ((grp_rasterization2_Pipeline_RAST2_fu_133_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_agg_result_0_phi_fu_126_p4_assign_proc : process(icmp_ln184_reg_311, grp_rasterization2_Pipeline_RAST2_fu_133_i_V_out, agg_result_0_reg_122, ap_CS_fsm_state3)
    begin
        if (((icmp_ln184_reg_311 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_phi_mux_agg_result_0_phi_fu_126_p4 <= grp_rasterization2_Pipeline_RAST2_fu_133_i_V_out;
        else 
            ap_phi_mux_agg_result_0_phi_fu_126_p4 <= agg_result_0_reg_122;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_agg_result_0_phi_fu_126_p4, ap_CS_fsm_state3, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_return <= ap_phi_mux_agg_result_0_phi_fu_126_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    fragment2_color_address0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_address0;
    fragment2_color_ce0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_ce0;
    fragment2_color_d0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_d0;
    fragment2_color_we0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_color_we0;
    fragment2_x_address0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_address0;
    fragment2_x_ce0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_ce0;
    fragment2_x_d0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_d0;
    fragment2_x_we0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_x_we0;
    fragment2_y_address0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_address0;
    fragment2_y_ce0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_ce0;
    fragment2_y_d0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_d0;
    fragment2_y_we0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_y_we0;
    fragment2_z_address0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_address0;
    fragment2_z_ce0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_ce0;
    fragment2_z_d0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_d0;
    fragment2_z_we0 <= grp_rasterization2_Pipeline_RAST2_fu_133_fragment2_z_we0;
    grp_rasterization2_Pipeline_RAST2_fu_133_ap_start <= grp_rasterization2_Pipeline_RAST2_fu_133_ap_start_reg;
    icmp_ln184_fu_174_p2 <= "1" when (flag = ap_const_lv2_0) else "0";
    ret_V_27_fu_188_p2 <= std_logic_vector(unsigned(triangle_2d_same_y1_cast_fu_180_p1) - unsigned(triangle_2d_same_y0_cast_fu_184_p1));
    ret_V_30_fu_203_p2 <= std_logic_vector(unsigned(triangle_2d_same_x1_cast_fu_195_p1) - unsigned(triangle_2d_same_x0_cast_fu_199_p1));
    ret_V_33_fu_214_p2 <= std_logic_vector(unsigned(triangle_2d_same_y2_cast_fu_210_p1) - unsigned(triangle_2d_same_y1_cast_fu_180_p1));
    ret_V_36_fu_225_p2 <= std_logic_vector(unsigned(triangle_2d_same_x2_cast_fu_221_p1) - unsigned(triangle_2d_same_x1_cast_fu_195_p1));
    ret_V_39_fu_232_p2 <= std_logic_vector(unsigned(triangle_2d_same_y0_cast_fu_184_p1) - unsigned(triangle_2d_same_y2_cast_fu_210_p1));
    ret_V_42_fu_239_p2 <= std_logic_vector(unsigned(triangle_2d_same_x0_cast_fu_199_p1) - unsigned(triangle_2d_same_x2_cast_fu_221_p1));
    triangle_2d_same_x0_cast_fu_199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_same_x0),9));
    triangle_2d_same_x1_cast_fu_195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_same_x1),9));
    triangle_2d_same_x2_cast_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_same_x2),9));
    triangle_2d_same_y0_cast_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_same_y0),9));
    triangle_2d_same_y1_cast_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_same_y1),9));
    triangle_2d_same_y2_cast_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(triangle_2d_same_y2),9));
end behav;
