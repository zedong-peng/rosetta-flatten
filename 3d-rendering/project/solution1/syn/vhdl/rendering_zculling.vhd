-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rendering_zculling is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    counter : IN STD_LOGIC_VECTOR (11 downto 0);
    fragments_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fragments_x_ce0 : OUT STD_LOGIC;
    fragments_x_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    fragments_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fragments_y_ce0 : OUT STD_LOGIC;
    fragments_y_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    fragments_z_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fragments_z_ce0 : OUT STD_LOGIC;
    fragments_z_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    fragments_color_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    fragments_color_ce0 : OUT STD_LOGIC;
    fragments_color_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
    size : IN STD_LOGIC_VECTOR (15 downto 0);
    pixels_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    pixels_x_ce0 : OUT STD_LOGIC;
    pixels_x_we0 : OUT STD_LOGIC;
    pixels_x_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixels_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    pixels_y_ce0 : OUT STD_LOGIC;
    pixels_y_we0 : OUT STD_LOGIC;
    pixels_y_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixels_color_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    pixels_color_ce0 : OUT STD_LOGIC;
    pixels_color_we0 : OUT STD_LOGIC;
    pixels_color_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of rendering_zculling is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal z_buffer_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal z_buffer_V_ce0 : STD_LOGIC;
    signal z_buffer_V_we0 : STD_LOGIC;
    signal z_buffer_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal z_buffer_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1019_fu_76_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_96 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_start : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_done : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_idle : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_ready : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_ce0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_we0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_ap_start : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_ap_done : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_ap_idle : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_ap_ready : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_fragments_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_fragments_y_ce0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_fragments_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_fragments_x_ce0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_fragments_z_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_fragments_z_ce0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_ce0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_we0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_ce0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_we0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_fragments_color_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_fragments_color_ce0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_ce0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_we0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_agg_result_0_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_agg_result_0_out_ap_vld : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_ce0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_we0 : STD_LOGIC;
    signal grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_zculling_Pipeline_ZCULLING_fu_54_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component rendering_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        z_buffer_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        z_buffer_V_ce0 : OUT STD_LOGIC;
        z_buffer_V_we0 : OUT STD_LOGIC;
        z_buffer_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component rendering_zculling_Pipeline_ZCULLING IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        size : IN STD_LOGIC_VECTOR (15 downto 0);
        fragments_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fragments_y_ce0 : OUT STD_LOGIC;
        fragments_y_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        fragments_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fragments_x_ce0 : OUT STD_LOGIC;
        fragments_x_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        fragments_z_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fragments_z_ce0 : OUT STD_LOGIC;
        fragments_z_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        pixels_x_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        pixels_x_ce0 : OUT STD_LOGIC;
        pixels_x_we0 : OUT STD_LOGIC;
        pixels_x_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pixels_y_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        pixels_y_ce0 : OUT STD_LOGIC;
        pixels_y_we0 : OUT STD_LOGIC;
        pixels_y_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fragments_color_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        fragments_color_ce0 : OUT STD_LOGIC;
        fragments_color_q0 : IN STD_LOGIC_VECTOR (5 downto 0);
        pixels_color_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        pixels_color_ce0 : OUT STD_LOGIC;
        pixels_color_we0 : OUT STD_LOGIC;
        pixels_color_d0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        agg_result_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        agg_result_0_out_ap_vld : OUT STD_LOGIC;
        z_buffer_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        z_buffer_V_ce0 : OUT STD_LOGIC;
        z_buffer_V_we0 : OUT STD_LOGIC;
        z_buffer_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        z_buffer_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component rendering_zculling_z_buffer_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    z_buffer_V_U : component rendering_zculling_z_buffer_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z_buffer_V_address0,
        ce0 => z_buffer_V_ce0,
        we0 => z_buffer_V_we0,
        d0 => z_buffer_V_d0,
        q0 => z_buffer_V_q0);

    grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48 : component rendering_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_start,
        ap_done => grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_done,
        ap_idle => grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_idle,
        ap_ready => grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_ready,
        z_buffer_V_address0 => grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_address0,
        z_buffer_V_ce0 => grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_ce0,
        z_buffer_V_we0 => grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_we0,
        z_buffer_V_d0 => grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_d0);

    grp_zculling_Pipeline_ZCULLING_fu_54 : component rendering_zculling_Pipeline_ZCULLING
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_zculling_Pipeline_ZCULLING_fu_54_ap_start,
        ap_done => grp_zculling_Pipeline_ZCULLING_fu_54_ap_done,
        ap_idle => grp_zculling_Pipeline_ZCULLING_fu_54_ap_idle,
        ap_ready => grp_zculling_Pipeline_ZCULLING_fu_54_ap_ready,
        size => size,
        fragments_y_address0 => grp_zculling_Pipeline_ZCULLING_fu_54_fragments_y_address0,
        fragments_y_ce0 => grp_zculling_Pipeline_ZCULLING_fu_54_fragments_y_ce0,
        fragments_y_q0 => fragments_y_q0,
        fragments_x_address0 => grp_zculling_Pipeline_ZCULLING_fu_54_fragments_x_address0,
        fragments_x_ce0 => grp_zculling_Pipeline_ZCULLING_fu_54_fragments_x_ce0,
        fragments_x_q0 => fragments_x_q0,
        fragments_z_address0 => grp_zculling_Pipeline_ZCULLING_fu_54_fragments_z_address0,
        fragments_z_ce0 => grp_zculling_Pipeline_ZCULLING_fu_54_fragments_z_ce0,
        fragments_z_q0 => fragments_z_q0,
        pixels_x_address0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_address0,
        pixels_x_ce0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_ce0,
        pixels_x_we0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_we0,
        pixels_x_d0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_d0,
        pixels_y_address0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_address0,
        pixels_y_ce0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_ce0,
        pixels_y_we0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_we0,
        pixels_y_d0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_d0,
        fragments_color_address0 => grp_zculling_Pipeline_ZCULLING_fu_54_fragments_color_address0,
        fragments_color_ce0 => grp_zculling_Pipeline_ZCULLING_fu_54_fragments_color_ce0,
        fragments_color_q0 => fragments_color_q0,
        pixels_color_address0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_address0,
        pixels_color_ce0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_ce0,
        pixels_color_we0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_we0,
        pixels_color_d0 => grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_d0,
        agg_result_0_out => grp_zculling_Pipeline_ZCULLING_fu_54_agg_result_0_out,
        agg_result_0_out_ap_vld => grp_zculling_Pipeline_ZCULLING_fu_54_agg_result_0_out_ap_vld,
        z_buffer_V_address0 => grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_address0,
        z_buffer_V_ce0 => grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_ce0,
        z_buffer_V_we0 => grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_we0,
        z_buffer_V_d0 => grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_d0,
        z_buffer_V_q0 => z_buffer_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1019_fu_76_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_ready = ap_const_logic_1)) then 
                    grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_zculling_Pipeline_ZCULLING_fu_54_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_zculling_Pipeline_ZCULLING_fu_54_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_zculling_Pipeline_ZCULLING_fu_54_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_zculling_Pipeline_ZCULLING_fu_54_ap_ready = ap_const_logic_1)) then 
                    grp_zculling_Pipeline_ZCULLING_fu_54_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln1019_reg_96 <= icmp_ln1019_fu_76_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_zculling_Pipeline_ZCULLING_fu_54_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_zculling_Pipeline_ZCULLING_fu_54_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_zculling_Pipeline_ZCULLING_fu_54_ap_done)
    begin
        if ((grp_zculling_Pipeline_ZCULLING_fu_54_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_block_state2_on_subcall_done_assign_proc : process(icmp_ln1019_reg_96, grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_done = ap_const_logic_0) and (icmp_ln1019_reg_96 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= grp_zculling_Pipeline_ZCULLING_fu_54_agg_result_0_out;
    fragments_color_address0 <= grp_zculling_Pipeline_ZCULLING_fu_54_fragments_color_address0;
    fragments_color_ce0 <= grp_zculling_Pipeline_ZCULLING_fu_54_fragments_color_ce0;
    fragments_x_address0 <= grp_zculling_Pipeline_ZCULLING_fu_54_fragments_x_address0;
    fragments_x_ce0 <= grp_zculling_Pipeline_ZCULLING_fu_54_fragments_x_ce0;
    fragments_y_address0 <= grp_zculling_Pipeline_ZCULLING_fu_54_fragments_y_address0;
    fragments_y_ce0 <= grp_zculling_Pipeline_ZCULLING_fu_54_fragments_y_ce0;
    fragments_z_address0 <= grp_zculling_Pipeline_ZCULLING_fu_54_fragments_z_address0;
    fragments_z_ce0 <= grp_zculling_Pipeline_ZCULLING_fu_54_fragments_z_ce0;
    grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_start <= grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_ap_start_reg;
    grp_zculling_Pipeline_ZCULLING_fu_54_ap_start <= grp_zculling_Pipeline_ZCULLING_fu_54_ap_start_reg;
    icmp_ln1019_fu_76_p2 <= "1" when (counter = ap_const_lv12_0) else "0";
    pixels_color_address0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_address0;
    pixels_color_ce0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_ce0;
    pixels_color_d0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_d0;
    pixels_color_we0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_color_we0;
    pixels_x_address0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_address0;
    pixels_x_ce0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_ce0;
    pixels_x_d0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_d0;
    pixels_x_we0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_x_we0;
    pixels_y_address0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_address0;
    pixels_y_ce0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_ce0;
    pixels_y_d0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_d0;
    pixels_y_we0 <= grp_zculling_Pipeline_ZCULLING_fu_54_pixels_y_we0;

    z_buffer_V_address0_assign_proc : process(icmp_ln1019_reg_96, grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_address0, grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z_buffer_V_address0 <= grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_address0;
        elsif (((icmp_ln1019_reg_96 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            z_buffer_V_address0 <= grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_address0;
        else 
            z_buffer_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    z_buffer_V_ce0_assign_proc : process(icmp_ln1019_reg_96, grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_ce0, grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z_buffer_V_ce0 <= grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_ce0;
        elsif (((icmp_ln1019_reg_96 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            z_buffer_V_ce0 <= grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_ce0;
        else 
            z_buffer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z_buffer_V_d0_assign_proc : process(icmp_ln1019_reg_96, grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_d0, grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z_buffer_V_d0 <= grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_d0;
        elsif (((icmp_ln1019_reg_96 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            z_buffer_V_d0 <= grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_d0;
        else 
            z_buffer_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    z_buffer_V_we0_assign_proc : process(icmp_ln1019_reg_96, grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_we0, grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            z_buffer_V_we0 <= grp_zculling_Pipeline_ZCULLING_fu_54_z_buffer_V_we0;
        elsif (((icmp_ln1019_reg_96 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            z_buffer_V_we0 <= grp_zculling_Pipeline_ZCULLING_INIT_ROW_ZCULLING_INIT_COL_fu_48_z_buffer_V_we0;
        else 
            z_buffer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
