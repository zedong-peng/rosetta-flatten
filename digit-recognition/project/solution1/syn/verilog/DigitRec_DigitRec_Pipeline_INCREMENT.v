// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module DigitRec_DigitRec_Pipeline_INCREMENT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_reload,
        p_reload32,
        div_i32_reload,
        vote_list_9_out,
        vote_list_9_out_ap_vld,
        vote_list_8_out,
        vote_list_8_out_ap_vld,
        vote_list_7_out,
        vote_list_7_out_ap_vld,
        vote_list_6_out,
        vote_list_6_out_ap_vld,
        vote_list_5_out,
        vote_list_5_out_ap_vld,
        vote_list_4_out,
        vote_list_4_out_ap_vld,
        vote_list_3_out,
        vote_list_3_out_ap_vld,
        vote_list_2_out,
        vote_list_2_out_ap_vld,
        vote_list_1_out,
        vote_list_1_out_ap_vld,
        vote_list_out,
        vote_list_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_reload;
input  [31:0] p_reload32;
input  [31:0] div_i32_reload;
output  [31:0] vote_list_9_out;
output   vote_list_9_out_ap_vld;
output  [31:0] vote_list_8_out;
output   vote_list_8_out_ap_vld;
output  [31:0] vote_list_7_out;
output   vote_list_7_out_ap_vld;
output  [31:0] vote_list_6_out;
output   vote_list_6_out_ap_vld;
output  [31:0] vote_list_5_out;
output   vote_list_5_out_ap_vld;
output  [31:0] vote_list_4_out;
output   vote_list_4_out_ap_vld;
output  [31:0] vote_list_3_out;
output   vote_list_3_out_ap_vld;
output  [31:0] vote_list_2_out;
output   vote_list_2_out_ap_vld;
output  [31:0] vote_list_1_out;
output   vote_list_1_out_ap_vld;
output  [31:0] vote_list_out;
output   vote_list_out_ap_vld;

reg ap_idle;
reg vote_list_9_out_ap_vld;
reg vote_list_8_out_ap_vld;
reg vote_list_7_out_ap_vld;
reg vote_list_6_out_ap_vld;
reg vote_list_5_out_ap_vld;
reg vote_list_4_out_ap_vld;
reg vote_list_3_out_ap_vld;
reg vote_list_2_out_ap_vld;
reg vote_list_1_out_ap_vld;
reg vote_list_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln160_fu_266_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] i_fu_76;
wire   [1:0] add_ln160_fu_272_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [31:0] vote_list_fu_80;
wire   [31:0] vote_list_10_fu_347_p2;
wire   [3:0] trunc_ln163_fu_317_p1;
reg   [31:0] vote_list_1_fu_84;
reg   [31:0] vote_list_2_fu_88;
reg   [31:0] vote_list_3_fu_92;
reg   [31:0] vote_list_4_fu_96;
reg   [31:0] vote_list_5_fu_100;
reg   [31:0] vote_list_6_fu_104;
reg   [31:0] vote_list_7_fu_108;
reg   [31:0] vote_list_8_fu_112;
reg   [31:0] vote_list_9_fu_116;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] tmp_8_fu_308_p5;
wire   [3:0] tmp_9_fu_321_p11;
wire   [31:0] tmp_9_fu_321_p12;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_294;
reg    ap_condition_297;
reg    ap_condition_300;
reg    ap_condition_303;
reg    ap_condition_306;
reg    ap_condition_309;
reg    ap_condition_312;
reg    ap_condition_315;
reg    ap_condition_326;
reg    ap_condition_329;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

DigitRec_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_32_32_1_1_U256(
    .din0(p_reload),
    .din1(p_reload32),
    .din2(div_i32_reload),
    .din3(i_fu_76),
    .dout(tmp_8_fu_308_p5)
);

DigitRec_mux_104_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_104_32_1_1_U257(
    .din0(vote_list_fu_80),
    .din1(vote_list_1_fu_84),
    .din2(vote_list_2_fu_88),
    .din3(vote_list_3_fu_92),
    .din4(vote_list_4_fu_96),
    .din5(vote_list_5_fu_100),
    .din6(vote_list_6_fu_104),
    .din7(vote_list_7_fu_108),
    .din8(vote_list_8_fu_112),
    .din9(vote_list_9_fu_116),
    .din10(tmp_9_fu_321_p11),
    .dout(tmp_9_fu_321_p12)
);

DigitRec_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_76 <= 2'd0;
        end else if (((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_76 <= add_ln160_fu_272_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_1_fu_84 <= 32'd0;
        end else if ((1'b1 == ap_condition_294)) begin
            vote_list_1_fu_84 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_2_fu_88 <= 32'd0;
        end else if ((1'b1 == ap_condition_297)) begin
            vote_list_2_fu_88 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_3_fu_92 <= 32'd0;
        end else if ((1'b1 == ap_condition_300)) begin
            vote_list_3_fu_92 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_4_fu_96 <= 32'd0;
        end else if ((1'b1 == ap_condition_303)) begin
            vote_list_4_fu_96 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_5_fu_100 <= 32'd0;
        end else if ((1'b1 == ap_condition_306)) begin
            vote_list_5_fu_100 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_6_fu_104 <= 32'd0;
        end else if ((1'b1 == ap_condition_309)) begin
            vote_list_6_fu_104 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_7_fu_108 <= 32'd0;
        end else if ((1'b1 == ap_condition_312)) begin
            vote_list_7_fu_108 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_8_fu_112 <= 32'd0;
        end else if ((1'b1 == ap_condition_315)) begin
            vote_list_8_fu_112 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_9_fu_116 <= 32'd0;
        end else if ((1'b1 == ap_condition_326)) begin
            vote_list_9_fu_116 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            vote_list_fu_80 <= 32'd0;
        end else if ((1'b1 == ap_condition_329)) begin
            vote_list_fu_80 <= vote_list_10_fu_347_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_1_out_ap_vld = 1'b1;
    end else begin
        vote_list_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_2_out_ap_vld = 1'b1;
    end else begin
        vote_list_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_3_out_ap_vld = 1'b1;
    end else begin
        vote_list_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_4_out_ap_vld = 1'b1;
    end else begin
        vote_list_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_5_out_ap_vld = 1'b1;
    end else begin
        vote_list_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_6_out_ap_vld = 1'b1;
    end else begin
        vote_list_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_7_out_ap_vld = 1'b1;
    end else begin
        vote_list_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_8_out_ap_vld = 1'b1;
    end else begin
        vote_list_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_9_out_ap_vld = 1'b1;
    end else begin
        vote_list_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln160_fu_266_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vote_list_out_ap_vld = 1'b1;
    end else begin
        vote_list_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln160_fu_272_p2 = (i_fu_76 + 2'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_294 = ((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln163_fu_317_p1 == 4'd1));
end

always @ (*) begin
    ap_condition_297 = ((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln163_fu_317_p1 == 4'd2));
end

always @ (*) begin
    ap_condition_300 = ((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln163_fu_317_p1 == 4'd3));
end

always @ (*) begin
    ap_condition_303 = ((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln163_fu_317_p1 == 4'd4));
end

always @ (*) begin
    ap_condition_306 = ((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln163_fu_317_p1 == 4'd5));
end

always @ (*) begin
    ap_condition_309 = ((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln163_fu_317_p1 == 4'd6));
end

always @ (*) begin
    ap_condition_312 = ((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln163_fu_317_p1 == 4'd7));
end

always @ (*) begin
    ap_condition_315 = ((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln163_fu_317_p1 == 4'd8));
end

always @ (*) begin
    ap_condition_326 = (~(trunc_ln163_fu_317_p1 == 4'd8) & ~(trunc_ln163_fu_317_p1 == 4'd7) & ~(trunc_ln163_fu_317_p1 == 4'd6) & ~(trunc_ln163_fu_317_p1 == 4'd5) & ~(trunc_ln163_fu_317_p1 == 4'd4) & ~(trunc_ln163_fu_317_p1 == 4'd3) & ~(trunc_ln163_fu_317_p1 == 4'd2) & ~(trunc_ln163_fu_317_p1 == 4'd1) & ~(trunc_ln163_fu_317_p1 == 4'd0) & (icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_329 = ((icmp_ln160_fu_266_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln163_fu_317_p1 == 4'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln160_fu_266_p2 = ((i_fu_76 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_9_fu_321_p11 = tmp_8_fu_308_p5[3:0];

assign trunc_ln163_fu_317_p1 = tmp_8_fu_308_p5[3:0];

assign vote_list_10_fu_347_p2 = (tmp_9_fu_321_p12 + 32'd1);

assign vote_list_1_out = vote_list_1_fu_84;

assign vote_list_2_out = vote_list_2_fu_88;

assign vote_list_3_out = vote_list_3_fu_92;

assign vote_list_4_out = vote_list_4_fu_96;

assign vote_list_5_out = vote_list_5_fu_100;

assign vote_list_6_out = vote_list_6_fu_104;

assign vote_list_7_out = vote_list_7_fu_108;

assign vote_list_8_out = vote_list_8_fu_112;

assign vote_list_9_out = vote_list_9_fu_116;

assign vote_list_out = vote_list_fu_80;

endmodule //DigitRec_DigitRec_Pipeline_INCREMENT
