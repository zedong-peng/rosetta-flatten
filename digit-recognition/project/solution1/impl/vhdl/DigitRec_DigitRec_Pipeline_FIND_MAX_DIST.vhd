-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity DigitRec_DigitRec_Pipeline_FIND_MAX_DIST is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sub_ln78 : IN STD_LOGIC_VECTOR (6 downto 0);
    knn_set : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_8 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_9 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_10 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_11 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_12 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_13 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_14 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_15 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_16 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_17 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_18 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_19 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_20 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_21 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_22 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_23 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_24 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_25 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_26 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_27 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_28 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_29 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_30 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_31 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_32 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_33 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_34 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_35 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_36 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_37 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_38 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_39 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_40 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_41 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_42 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_43 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_44 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_45 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_46 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_47 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_48 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_49 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_50 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_51 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_52 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_53 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_54 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_55 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_56 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_57 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_58 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_59 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_60 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_61 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_62 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_63 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_64 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_65 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_66 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_67 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_68 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_69 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_70 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_71 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_72 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_73 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_74 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_75 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_76 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_77 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_78 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_79 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_80 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_81 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_82 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_83 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_84 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_85 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_86 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_87 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_88 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_89 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_90 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_91 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_92 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_93 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_94 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_95 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_96 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_97 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_98 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_99 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_100 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_101 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_102 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_103 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_104 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_105 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_106 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_107 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_108 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_109 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_110 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_111 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_112 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_113 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_114 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_115 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_116 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_117 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_118 : IN STD_LOGIC_VECTOR (31 downto 0);
    knn_set_119 : IN STD_LOGIC_VECTOR (31 downto 0);
    max_dist_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_dist_out_ap_vld : OUT STD_LOGIC;
    max_dist_id_out : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_dist_id_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of DigitRec_DigitRec_Pipeline_FIND_MAX_DIST is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln76_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal max_dist_id_fu_282 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_dist_id_3_fu_1220_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal max_dist_fu_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_dist_1_fu_1228_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_fu_290 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln76_fu_1066_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln78_fu_1075_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_1084_p121 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_1084_p122 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln78_fu_1210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln78_1_fu_1216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component DigitRec_mux_1207_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        din65_WIDTH : INTEGER;
        din66_WIDTH : INTEGER;
        din67_WIDTH : INTEGER;
        din68_WIDTH : INTEGER;
        din69_WIDTH : INTEGER;
        din70_WIDTH : INTEGER;
        din71_WIDTH : INTEGER;
        din72_WIDTH : INTEGER;
        din73_WIDTH : INTEGER;
        din74_WIDTH : INTEGER;
        din75_WIDTH : INTEGER;
        din76_WIDTH : INTEGER;
        din77_WIDTH : INTEGER;
        din78_WIDTH : INTEGER;
        din79_WIDTH : INTEGER;
        din80_WIDTH : INTEGER;
        din81_WIDTH : INTEGER;
        din82_WIDTH : INTEGER;
        din83_WIDTH : INTEGER;
        din84_WIDTH : INTEGER;
        din85_WIDTH : INTEGER;
        din86_WIDTH : INTEGER;
        din87_WIDTH : INTEGER;
        din88_WIDTH : INTEGER;
        din89_WIDTH : INTEGER;
        din90_WIDTH : INTEGER;
        din91_WIDTH : INTEGER;
        din92_WIDTH : INTEGER;
        din93_WIDTH : INTEGER;
        din94_WIDTH : INTEGER;
        din95_WIDTH : INTEGER;
        din96_WIDTH : INTEGER;
        din97_WIDTH : INTEGER;
        din98_WIDTH : INTEGER;
        din99_WIDTH : INTEGER;
        din100_WIDTH : INTEGER;
        din101_WIDTH : INTEGER;
        din102_WIDTH : INTEGER;
        din103_WIDTH : INTEGER;
        din104_WIDTH : INTEGER;
        din105_WIDTH : INTEGER;
        din106_WIDTH : INTEGER;
        din107_WIDTH : INTEGER;
        din108_WIDTH : INTEGER;
        din109_WIDTH : INTEGER;
        din110_WIDTH : INTEGER;
        din111_WIDTH : INTEGER;
        din112_WIDTH : INTEGER;
        din113_WIDTH : INTEGER;
        din114_WIDTH : INTEGER;
        din115_WIDTH : INTEGER;
        din116_WIDTH : INTEGER;
        din117_WIDTH : INTEGER;
        din118_WIDTH : INTEGER;
        din119_WIDTH : INTEGER;
        din120_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (31 downto 0);
        din62 : IN STD_LOGIC_VECTOR (31 downto 0);
        din63 : IN STD_LOGIC_VECTOR (31 downto 0);
        din64 : IN STD_LOGIC_VECTOR (31 downto 0);
        din65 : IN STD_LOGIC_VECTOR (31 downto 0);
        din66 : IN STD_LOGIC_VECTOR (31 downto 0);
        din67 : IN STD_LOGIC_VECTOR (31 downto 0);
        din68 : IN STD_LOGIC_VECTOR (31 downto 0);
        din69 : IN STD_LOGIC_VECTOR (31 downto 0);
        din70 : IN STD_LOGIC_VECTOR (31 downto 0);
        din71 : IN STD_LOGIC_VECTOR (31 downto 0);
        din72 : IN STD_LOGIC_VECTOR (31 downto 0);
        din73 : IN STD_LOGIC_VECTOR (31 downto 0);
        din74 : IN STD_LOGIC_VECTOR (31 downto 0);
        din75 : IN STD_LOGIC_VECTOR (31 downto 0);
        din76 : IN STD_LOGIC_VECTOR (31 downto 0);
        din77 : IN STD_LOGIC_VECTOR (31 downto 0);
        din78 : IN STD_LOGIC_VECTOR (31 downto 0);
        din79 : IN STD_LOGIC_VECTOR (31 downto 0);
        din80 : IN STD_LOGIC_VECTOR (31 downto 0);
        din81 : IN STD_LOGIC_VECTOR (31 downto 0);
        din82 : IN STD_LOGIC_VECTOR (31 downto 0);
        din83 : IN STD_LOGIC_VECTOR (31 downto 0);
        din84 : IN STD_LOGIC_VECTOR (31 downto 0);
        din85 : IN STD_LOGIC_VECTOR (31 downto 0);
        din86 : IN STD_LOGIC_VECTOR (31 downto 0);
        din87 : IN STD_LOGIC_VECTOR (31 downto 0);
        din88 : IN STD_LOGIC_VECTOR (31 downto 0);
        din89 : IN STD_LOGIC_VECTOR (31 downto 0);
        din90 : IN STD_LOGIC_VECTOR (31 downto 0);
        din91 : IN STD_LOGIC_VECTOR (31 downto 0);
        din92 : IN STD_LOGIC_VECTOR (31 downto 0);
        din93 : IN STD_LOGIC_VECTOR (31 downto 0);
        din94 : IN STD_LOGIC_VECTOR (31 downto 0);
        din95 : IN STD_LOGIC_VECTOR (31 downto 0);
        din96 : IN STD_LOGIC_VECTOR (31 downto 0);
        din97 : IN STD_LOGIC_VECTOR (31 downto 0);
        din98 : IN STD_LOGIC_VECTOR (31 downto 0);
        din99 : IN STD_LOGIC_VECTOR (31 downto 0);
        din100 : IN STD_LOGIC_VECTOR (31 downto 0);
        din101 : IN STD_LOGIC_VECTOR (31 downto 0);
        din102 : IN STD_LOGIC_VECTOR (31 downto 0);
        din103 : IN STD_LOGIC_VECTOR (31 downto 0);
        din104 : IN STD_LOGIC_VECTOR (31 downto 0);
        din105 : IN STD_LOGIC_VECTOR (31 downto 0);
        din106 : IN STD_LOGIC_VECTOR (31 downto 0);
        din107 : IN STD_LOGIC_VECTOR (31 downto 0);
        din108 : IN STD_LOGIC_VECTOR (31 downto 0);
        din109 : IN STD_LOGIC_VECTOR (31 downto 0);
        din110 : IN STD_LOGIC_VECTOR (31 downto 0);
        din111 : IN STD_LOGIC_VECTOR (31 downto 0);
        din112 : IN STD_LOGIC_VECTOR (31 downto 0);
        din113 : IN STD_LOGIC_VECTOR (31 downto 0);
        din114 : IN STD_LOGIC_VECTOR (31 downto 0);
        din115 : IN STD_LOGIC_VECTOR (31 downto 0);
        din116 : IN STD_LOGIC_VECTOR (31 downto 0);
        din117 : IN STD_LOGIC_VECTOR (31 downto 0);
        din118 : IN STD_LOGIC_VECTOR (31 downto 0);
        din119 : IN STD_LOGIC_VECTOR (31 downto 0);
        din120 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component DigitRec_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_1207_32_1_1_U7 : component DigitRec_mux_1207_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 32,
        din62_WIDTH => 32,
        din63_WIDTH => 32,
        din64_WIDTH => 32,
        din65_WIDTH => 32,
        din66_WIDTH => 32,
        din67_WIDTH => 32,
        din68_WIDTH => 32,
        din69_WIDTH => 32,
        din70_WIDTH => 32,
        din71_WIDTH => 32,
        din72_WIDTH => 32,
        din73_WIDTH => 32,
        din74_WIDTH => 32,
        din75_WIDTH => 32,
        din76_WIDTH => 32,
        din77_WIDTH => 32,
        din78_WIDTH => 32,
        din79_WIDTH => 32,
        din80_WIDTH => 32,
        din81_WIDTH => 32,
        din82_WIDTH => 32,
        din83_WIDTH => 32,
        din84_WIDTH => 32,
        din85_WIDTH => 32,
        din86_WIDTH => 32,
        din87_WIDTH => 32,
        din88_WIDTH => 32,
        din89_WIDTH => 32,
        din90_WIDTH => 32,
        din91_WIDTH => 32,
        din92_WIDTH => 32,
        din93_WIDTH => 32,
        din94_WIDTH => 32,
        din95_WIDTH => 32,
        din96_WIDTH => 32,
        din97_WIDTH => 32,
        din98_WIDTH => 32,
        din99_WIDTH => 32,
        din100_WIDTH => 32,
        din101_WIDTH => 32,
        din102_WIDTH => 32,
        din103_WIDTH => 32,
        din104_WIDTH => 32,
        din105_WIDTH => 32,
        din106_WIDTH => 32,
        din107_WIDTH => 32,
        din108_WIDTH => 32,
        din109_WIDTH => 32,
        din110_WIDTH => 32,
        din111_WIDTH => 32,
        din112_WIDTH => 32,
        din113_WIDTH => 32,
        din114_WIDTH => 32,
        din115_WIDTH => 32,
        din116_WIDTH => 32,
        din117_WIDTH => 32,
        din118_WIDTH => 32,
        din119_WIDTH => 32,
        din120_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        din0 => knn_set,
        din1 => knn_set_1,
        din2 => knn_set_2,
        din3 => knn_set_3,
        din4 => knn_set_4,
        din5 => knn_set_5,
        din6 => knn_set_6,
        din7 => knn_set_7,
        din8 => knn_set_8,
        din9 => knn_set_9,
        din10 => knn_set_10,
        din11 => knn_set_11,
        din12 => knn_set_12,
        din13 => knn_set_13,
        din14 => knn_set_14,
        din15 => knn_set_15,
        din16 => knn_set_16,
        din17 => knn_set_17,
        din18 => knn_set_18,
        din19 => knn_set_19,
        din20 => knn_set_20,
        din21 => knn_set_21,
        din22 => knn_set_22,
        din23 => knn_set_23,
        din24 => knn_set_24,
        din25 => knn_set_25,
        din26 => knn_set_26,
        din27 => knn_set_27,
        din28 => knn_set_28,
        din29 => knn_set_29,
        din30 => knn_set_30,
        din31 => knn_set_31,
        din32 => knn_set_32,
        din33 => knn_set_33,
        din34 => knn_set_34,
        din35 => knn_set_35,
        din36 => knn_set_36,
        din37 => knn_set_37,
        din38 => knn_set_38,
        din39 => knn_set_39,
        din40 => knn_set_40,
        din41 => knn_set_41,
        din42 => knn_set_42,
        din43 => knn_set_43,
        din44 => knn_set_44,
        din45 => knn_set_45,
        din46 => knn_set_46,
        din47 => knn_set_47,
        din48 => knn_set_48,
        din49 => knn_set_49,
        din50 => knn_set_50,
        din51 => knn_set_51,
        din52 => knn_set_52,
        din53 => knn_set_53,
        din54 => knn_set_54,
        din55 => knn_set_55,
        din56 => knn_set_56,
        din57 => knn_set_57,
        din58 => knn_set_58,
        din59 => knn_set_59,
        din60 => knn_set_60,
        din61 => knn_set_61,
        din62 => knn_set_62,
        din63 => knn_set_63,
        din64 => knn_set_64,
        din65 => knn_set_65,
        din66 => knn_set_66,
        din67 => knn_set_67,
        din68 => knn_set_68,
        din69 => knn_set_69,
        din70 => knn_set_70,
        din71 => knn_set_71,
        din72 => knn_set_72,
        din73 => knn_set_73,
        din74 => knn_set_74,
        din75 => knn_set_75,
        din76 => knn_set_76,
        din77 => knn_set_77,
        din78 => knn_set_78,
        din79 => knn_set_79,
        din80 => knn_set_80,
        din81 => knn_set_81,
        din82 => knn_set_82,
        din83 => knn_set_83,
        din84 => knn_set_84,
        din85 => knn_set_85,
        din86 => knn_set_86,
        din87 => knn_set_87,
        din88 => knn_set_88,
        din89 => knn_set_89,
        din90 => knn_set_90,
        din91 => knn_set_91,
        din92 => knn_set_92,
        din93 => knn_set_93,
        din94 => knn_set_94,
        din95 => knn_set_95,
        din96 => knn_set_96,
        din97 => knn_set_97,
        din98 => knn_set_98,
        din99 => knn_set_99,
        din100 => knn_set_100,
        din101 => knn_set_101,
        din102 => knn_set_102,
        din103 => knn_set_103,
        din104 => knn_set_104,
        din105 => knn_set_105,
        din106 => knn_set_106,
        din107 => knn_set_107,
        din108 => knn_set_108,
        din109 => knn_set_109,
        din110 => knn_set_110,
        din111 => knn_set_111,
        din112 => knn_set_112,
        din113 => knn_set_113,
        din114 => knn_set_114,
        din115 => knn_set_115,
        din116 => knn_set_116,
        din117 => knn_set_117,
        din118 => knn_set_118,
        din119 => knn_set_119,
        din120 => tmp_s_fu_1084_p121,
        dout => tmp_s_fu_1084_p122);

    flow_control_loop_pipe_sequential_init_U : component DigitRec_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    k_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_290 <= ap_const_lv2_0;
                elsif (((icmp_ln76_fu_1060_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_fu_290 <= add_ln76_fu_1066_p2;
                end if;
            end if; 
        end if;
    end process;

    max_dist_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    max_dist_fu_286 <= ap_const_lv32_0;
                elsif (((icmp_ln76_fu_1060_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    max_dist_fu_286 <= max_dist_1_fu_1228_p3;
                end if;
            end if; 
        end if;
    end process;

    max_dist_id_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    max_dist_id_fu_282 <= ap_const_lv32_4;
                elsif (((icmp_ln76_fu_1060_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    max_dist_id_fu_282 <= max_dist_id_3_fu_1220_p3;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln76_fu_1066_p2 <= std_logic_vector(unsigned(k_fu_290) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln76_fu_1060_p2)
    begin
        if (((icmp_ln76_fu_1060_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln76_fu_1060_p2 <= "1" when (k_fu_290 = ap_const_lv2_3) else "0";
    icmp_ln78_fu_1210_p2 <= "1" when (signed(max_dist_fu_286) < signed(tmp_s_fu_1084_p122)) else "0";
    max_dist_1_fu_1228_p3 <= 
        tmp_s_fu_1084_p122 when (icmp_ln78_fu_1210_p2(0) = '1') else 
        max_dist_fu_286;
    max_dist_id_3_fu_1220_p3 <= 
        zext_ln78_1_fu_1216_p1 when (icmp_ln78_fu_1210_p2(0) = '1') else 
        max_dist_id_fu_282;
    max_dist_id_out <= max_dist_id_fu_282(7 - 1 downto 0);

    max_dist_id_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln76_fu_1060_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln76_fu_1060_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            max_dist_id_out_ap_vld <= ap_const_logic_1;
        else 
            max_dist_id_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    max_dist_out <= max_dist_fu_286;

    max_dist_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln76_fu_1060_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln76_fu_1060_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            max_dist_out_ap_vld <= ap_const_logic_1;
        else 
            max_dist_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_1084_p121 <= std_logic_vector(unsigned(zext_ln78_fu_1075_p1) + unsigned(sub_ln78));
    zext_ln78_1_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_fu_290),32));
    zext_ln78_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_fu_290),7));
end behav;
