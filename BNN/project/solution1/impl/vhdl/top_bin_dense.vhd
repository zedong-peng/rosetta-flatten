-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_bin_dense is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer_type : IN STD_LOGIC_VECTOR (1 downto 0);
    d_i_idx : IN STD_LOGIC_VECTOR (0 downto 0);
    d_o_idx : IN STD_LOGIC_VECTOR (0 downto 0);
    o_index : IN STD_LOGIC_VECTOR (15 downto 0);
    n_inputs : IN STD_LOGIC_VECTOR (15 downto 0);
    n_outputs : IN STD_LOGIC_VECTOR (15 downto 0);
    dmem_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    dmem_V_ce0 : OUT STD_LOGIC;
    dmem_V_we0 : OUT STD_LOGIC;
    dmem_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dmem_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dmem_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    dmem_V_ce1 : OUT STD_LOGIC;
    dmem_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    wt_mem_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    wt_mem_V_ce0 : OUT STD_LOGIC;
    wt_mem_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    wt_mem_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    wt_mem_V_ce1 : OUT STD_LOGIC;
    wt_mem_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    kh_mem_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    kh_mem_V_ce0 : OUT STD_LOGIC;
    kh_mem_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kh_mem_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    kh_mem_V_ce1 : OUT STD_LOGIC;
    kh_mem_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of top_bin_dense is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv16_C000 : STD_LOGIC_VECTOR (15 downto 0) := "1100000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal lhs_fu_240_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_reg_785 : STD_LOGIC_VECTOR (16 downto 0);
    signal dmem_V_addr_4_reg_790 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln617_fu_257_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln617_reg_795 : STD_LOGIC_VECTOR (19 downto 0);
    signal cmp_i_i508_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i508_reg_800 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1495_fu_267_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1495_reg_806 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1495_1_fu_271_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1495_1_reg_811 : STD_LOGIC_VECTOR (6 downto 0);
    signal phi_mul_load_reg_816 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal o_V_1_reg_821 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_offset_V_fu_347_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal o_offset_V_reg_834 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln608_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dmem_V_addr_reg_839 : STD_LOGIC_VECTOR (11 downto 0);
    signal o_word_V_3_reg_847 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal prediction_V_fu_404_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal prediction_V_reg_853 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal kh_off_V_fu_421_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal kh_off_V_reg_863 : STD_LOGIC_VECTOR (1 downto 0);
    signal kh_off_V_1_fu_424_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal kh_off_V_1_reg_870 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1649_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1649_reg_881 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln1019_fu_607_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln1019_reg_896 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_start : STD_LOGIC;
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done : STD_LOGIC;
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_idle : STD_LOGIC;
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_ready : STD_LOGIC;
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_sum_V_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_sum_V_out_ap_vld : STD_LOGIC;
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_ce0 : STD_LOGIC;
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_ce1 : STD_LOGIC;
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_ce0 : STD_LOGIC;
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_ce1 : STD_LOGIC;
    signal grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln694_fu_252_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln612_fu_371_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_fu_416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln541_1_fu_436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_fu_124 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln608_fu_301_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal best_out_V_fu_128 : STD_LOGIC_VECTOR (15 downto 0);
    signal best_out_V_2_fu_691_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ret_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal prediction_V_1_fu_699_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1019_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_fu_136 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_V_fu_311_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln345_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal o_word_V_1_fu_614_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_244_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln186_fu_321_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1027_fu_317_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1495_3_fu_334_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1495_2_fu_325_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_fu_329_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal o_addr_V_fu_339_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln_fu_352_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_35_fu_362_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_1_fu_391_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_s_fu_407_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_1_fu_427_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln653_2_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nc_V_11_fu_473_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal nc_V_10_fu_463_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln653_1_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln653_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nc_V_9_fu_459_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal nc_V_fu_449_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln653_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln653_fu_512_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln653_1_fu_526_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal nc_V_12_fu_534_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln552_fu_542_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln804_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ki_V_1_fu_487_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ki_V_fu_483_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln838_fu_567_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_fu_571_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal ki_V_2_fu_560_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_587_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_117_fu_597_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_551_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_2_fu_621_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_716_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal out_V_fu_635_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal best_out_V_1_fu_656_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1_fu_648_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln837_2_fu_644_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln1649_1_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1649_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1649_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1649_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln818_fu_665_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_bin_dense_Pipeline_LOOP_DENSE_I IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        n_inputs : IN STD_LOGIC_VECTOR (15 downto 0);
        phi_mul : IN STD_LOGIC_VECTOR (19 downto 0);
        d_i_idx : IN STD_LOGIC_VECTOR (0 downto 0);
        sum_V_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        sum_V_out_ap_vld : OUT STD_LOGIC;
        dmem_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        dmem_V_ce0 : OUT STD_LOGIC;
        dmem_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dmem_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        dmem_V_ce1 : OUT STD_LOGIC;
        dmem_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        wt_mem_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        wt_mem_V_ce0 : OUT STD_LOGIC;
        wt_mem_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wt_mem_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        wt_mem_V_ce1 : OUT STD_LOGIC;
        wt_mem_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_mac_muladd_20s_16s_28s_34_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (27 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;



begin
    grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225 : component top_bin_dense_Pipeline_LOOP_DENSE_I
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_start,
        ap_done => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done,
        ap_idle => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_idle,
        ap_ready => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_ready,
        n_inputs => n_inputs,
        phi_mul => phi_mul_load_reg_816,
        d_i_idx => d_i_idx,
        sum_V_out => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_sum_V_out,
        sum_V_out_ap_vld => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_sum_V_out_ap_vld,
        dmem_V_address0 => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_address0,
        dmem_V_ce0 => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_ce0,
        dmem_V_q0 => dmem_V_q0,
        dmem_V_address1 => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_address1,
        dmem_V_ce1 => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_ce1,
        dmem_V_q1 => dmem_V_q1,
        wt_mem_V_address0 => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_address0,
        wt_mem_V_ce0 => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_ce0,
        wt_mem_V_q0 => wt_mem_V_q0,
        wt_mem_V_address1 => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_address1,
        wt_mem_V_ce1 => grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_ce1,
        wt_mem_V_q1 => wt_mem_V_q1);

    mac_muladd_20s_16s_28s_34_4_1_U396 : component top_mac_muladd_20s_16s_28s_34_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 20,
        din1_WIDTH => 16,
        din2_WIDTH => 28,
        dout_WIDTH => 34)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => r_V_fu_571_p3,
        din1 => ki_V_2_fu_560_p3,
        din2 => rhs_2_fu_621_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_716_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_ready = ap_const_logic_1)) then 
                    grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    best_out_V_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                best_out_V_fu_128 <= ap_const_lv16_C000;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                best_out_V_fu_128 <= best_out_V_2_fu_691_p3;
            end if; 
        end if;
    end process;

    phi_mul_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul_fu_124 <= ap_const_lv20_0;
            elsif (((icmp_ln608_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul_fu_124 <= add_ln608_fu_301_p2;
            end if; 
        end if;
    end process;

    ret_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                ret_fu_132 <= ap_const_lv8_FF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                ret_fu_132 <= prediction_V_1_fu_699_p3;
            end if; 
        end if;
    end process;

    rhs_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                rhs_fu_136 <= ap_const_lv16_0;
            elsif (((icmp_ln608_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                rhs_fu_136 <= o_V_fu_311_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cmp_i_i508_reg_800 <= cmp_i_i508_fu_261_p2;
                    dmem_V_addr_4_reg_790(11) <= zext_ln694_fu_252_p1(12 - 1 downto 0)(11);
                    lhs_reg_785(15 downto 0) <= lhs_fu_240_p1(15 downto 0);
                trunc_ln1495_1_reg_811 <= trunc_ln1495_1_fu_271_p1;
                trunc_ln1495_reg_806 <= trunc_ln1495_fu_267_p1;
                    zext_ln617_reg_795(15 downto 0) <= zext_ln617_fu_257_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln608_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                dmem_V_addr_reg_839 <= zext_ln612_fu_371_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln1649_reg_881 <= icmp_ln1649_fu_441_p2;
                kh_off_V_1_reg_870 <= kh_off_V_1_fu_424_p1;
                prediction_V_reg_853 <= prediction_V_fu_404_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp_i_i508_reg_800 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                kh_off_V_reg_863 <= kh_off_V_fu_421_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                o_V_1_reg_821 <= rhs_fu_136;
                phi_mul_load_reg_816 <= phi_mul_fu_124;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln608_fu_306_p2 = ap_const_lv1_0) and (cmp_i_i508_reg_800 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                o_offset_V_reg_834 <= o_offset_V_fu_347_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                o_word_V_3_reg_847 <= dmem_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                select_ln1019_reg_896 <= select_ln1019_fu_607_p3;
            end if;
        end if;
    end process;
    lhs_reg_785(16) <= '0';
    dmem_V_addr_4_reg_790(10 downto 0) <= "00000000000";
    zext_ln617_reg_795(19 downto 16) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln608_fu_306_p2, ap_CS_fsm_state5, grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln608_fu_306_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln1495_3_fu_334_p2 <= std_logic_vector(unsigned(trunc_ln1027_fu_317_p1) + unsigned(trunc_ln1495_1_reg_811));
    add_ln608_fu_301_p2 <= std_logic_vector(unsigned(phi_mul_fu_124) + unsigned(zext_ln617_reg_795));
    and_ln1649_fu_681_p2 <= (xor_ln1649_fu_675_p2 and icmp_ln1649_reg_881);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done)
    begin
        if ((grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln608_fu_306_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((icmp_ln608_fu_306_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln608_fu_306_p2)
    begin
        if (((icmp_ln608_fu_306_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    best_out_V_1_fu_656_p4 <= grp_fu_716_p3(33 downto 20);
    best_out_V_2_fu_691_p3 <= 
        best_out_V_fu_128 when (or_ln1649_fu_686_p2(0) = '1') else 
        sext_ln818_fu_665_p1;
    cmp_i_i508_fu_261_p2 <= "1" when (layer_type = ap_const_lv2_2) else "0";

    dmem_V_address0_assign_proc : process(dmem_V_addr_4_reg_790, ap_CS_fsm_state2, icmp_ln608_fu_306_p2, dmem_V_addr_reg_839, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_address0, zext_ln612_fu_371_p1, icmp_ln1019_fu_386_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dmem_V_address0 <= dmem_V_addr_reg_839;
        elsif (((icmp_ln608_fu_306_p2 = ap_const_lv1_1) and (icmp_ln1019_fu_386_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dmem_V_address0 <= dmem_V_addr_4_reg_790;
        elsif (((icmp_ln608_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dmem_V_address0 <= zext_ln612_fu_371_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dmem_V_address0 <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_address0;
        else 
            dmem_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    dmem_V_address1 <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_address1;

    dmem_V_ce0_assign_proc : process(ap_CS_fsm_state2, icmp_ln608_fu_306_p2, ap_CS_fsm_state5, ap_CS_fsm_state6, grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_ce0, icmp_ln1019_fu_386_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln608_fu_306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln608_fu_306_p2 = ap_const_lv1_1) and (icmp_ln1019_fu_386_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            dmem_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dmem_V_ce0 <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_ce0;
        else 
            dmem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_V_ce1_assign_proc : process(ap_CS_fsm_state5, grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dmem_V_ce1 <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_dmem_V_ce1;
        else 
            dmem_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_V_d0_assign_proc : process(ap_CS_fsm_state2, icmp_ln608_fu_306_p2, ap_CS_fsm_state6, icmp_ln1019_fu_386_p2, zext_ln345_fu_399_p1, o_word_V_1_fu_614_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dmem_V_d0 <= o_word_V_1_fu_614_p3;
        elsif (((icmp_ln608_fu_306_p2 = ap_const_lv1_1) and (icmp_ln1019_fu_386_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dmem_V_d0 <= zext_ln345_fu_399_p1;
        else 
            dmem_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dmem_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln608_fu_306_p2, ap_CS_fsm_state6, icmp_ln1019_fu_386_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln608_fu_306_p2 = ap_const_lv1_1) and (icmp_ln1019_fu_386_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            dmem_V_we0 <= ap_const_logic_1;
        else 
            dmem_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_start <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_start_reg;
    icmp_ln1019_fu_386_p2 <= "1" when (layer_type = ap_const_lv2_3) else "0";
    icmp_ln1649_1_fu_669_p2 <= "1" when (signed(shl_ln1_fu_648_p3) < signed(sext_ln837_2_fu_644_p1)) else "0";
    icmp_ln1649_fu_441_p2 <= "0" when (o_V_1_reg_821 = ap_const_lv16_0) else "1";
    icmp_ln608_fu_306_p2 <= "1" when (rhs_fu_136 = n_outputs) else "0";
    icmp_ln653_1_fu_502_p2 <= "1" when (kh_off_V_reg_863 = ap_const_lv2_1) else "0";
    icmp_ln653_2_fu_507_p2 <= "1" when (kh_off_V_reg_863 = ap_const_lv2_2) else "0";
    icmp_ln653_fu_497_p2 <= "1" when (kh_off_V_reg_863 = ap_const_lv2_0) else "0";
    icmp_ln804_fu_545_p2 <= "1" when (signed(grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_sum_V_out) < signed(nc_V_12_fu_534_p3)) else "0";
    kh_mem_V_address0 <= zext_ln541_1_fu_436_p1(6 - 1 downto 0);
    kh_mem_V_address1 <= zext_ln541_fu_416_p1(6 - 1 downto 0);

    kh_mem_V_ce0_assign_proc : process(ap_CS_fsm_state5, grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done = ap_const_logic_1))) then 
            kh_mem_V_ce0 <= ap_const_logic_1;
        else 
            kh_mem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kh_mem_V_ce1_assign_proc : process(ap_CS_fsm_state5, grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_ap_done = ap_const_logic_1))) then 
            kh_mem_V_ce1 <= ap_const_logic_1;
        else 
            kh_mem_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    kh_off_V_1_fu_424_p1 <= o_V_1_reg_821(1 - 1 downto 0);
    kh_off_V_fu_421_p1 <= o_V_1_reg_821(2 - 1 downto 0);
    ki_V_1_fu_487_p4 <= kh_mem_V_q0(47 downto 32);
    ki_V_2_fu_560_p3 <= 
        ki_V_1_fu_487_p4 when (kh_off_V_1_reg_870(0) = '1') else 
        ki_V_fu_483_p1;
    ki_V_fu_483_p1 <= kh_mem_V_q0(16 - 1 downto 0);
    lhs_fu_240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_index),17));
    lshr_ln_fu_352_p4 <= ret_V_fu_329_p2(16 downto 7);
    nc_V_10_fu_463_p4 <= kh_mem_V_q1(31 downto 16);
    nc_V_11_fu_473_p4 <= kh_mem_V_q1(47 downto 32);
    nc_V_12_fu_534_p3 <= 
        select_ln653_fu_512_p3 when (or_ln653_fu_520_p2(0) = '1') else 
        select_ln653_1_fu_526_p3;
    nc_V_9_fu_459_p1 <= kh_mem_V_q1(16 - 1 downto 0);
    nc_V_fu_449_p4 <= kh_mem_V_q1(63 downto 48);
    o_V_fu_311_p2 <= std_logic_vector(unsigned(rhs_fu_136) + unsigned(ap_const_lv16_1));
    o_addr_V_fu_339_p3 <= add_ln1495_3_fu_334_p2(6 downto 6);
    o_offset_V_fu_347_p2 <= std_logic_vector(unsigned(trunc_ln1495_2_fu_325_p1) + unsigned(trunc_ln1495_reg_806));
    o_word_V_1_fu_614_p3 <= 
        p_Result_s_fu_551_p4 when (cmp_i_i508_reg_800(0) = '1') else 
        o_word_V_3_reg_847;
    or_ln1649_fu_686_p2 <= (cmp_i_i508_reg_800 or and_ln1649_fu_681_p2);
    or_ln653_fu_520_p2 <= (icmp_ln653_2_fu_507_p2 or icmp_ln653_1_fu_502_p2);
    out_V_fu_635_p4 <= grp_fu_716_p3(33 downto 14);
    p_Result_1_fu_391_p3 <= (ap_const_lv1_0 & ret_fu_132);
    
    p_Result_s_fu_551_p4_proc : process(o_word_V_3_reg_847, zext_ln552_fu_542_p1, icmp_ln804_fu_545_p2)
    begin
        p_Result_s_fu_551_p4 <= o_word_V_3_reg_847;
        if to_integer(unsigned(zext_ln552_fu_542_p1)) >= o_word_V_3_reg_847'low and to_integer(unsigned(zext_ln552_fu_542_p1)) <= o_word_V_3_reg_847'high then
            p_Result_s_fu_551_p4(to_integer(unsigned(zext_ln552_fu_542_p1))) <= icmp_ln804_fu_545_p2(0);
        end if;
    end process;

    prediction_V_1_fu_699_p3 <= 
        ret_fu_132 when (or_ln1649_fu_686_p2(0) = '1') else 
        prediction_V_reg_853;
    prediction_V_fu_404_p1 <= o_V_1_reg_821(8 - 1 downto 0);
    r_V_fu_571_p3 <= (trunc_ln838_fu_567_p1 & ap_const_lv10_0);
    ret_V_1_fu_427_p4 <= o_V_1_reg_821(6 downto 1);
    ret_V_fu_329_p2 <= std_logic_vector(unsigned(zext_ln186_fu_321_p1) + unsigned(lhs_reg_785));
    ret_V_s_fu_407_p4 <= o_V_1_reg_821(7 downto 2);
    rhs_2_fu_621_p3 <= (select_ln1019_reg_896 & ap_const_lv12_0);
    select_ln1019_fu_607_p3 <= 
        tmp_s_fu_587_p4 when (kh_off_V_1_reg_870(0) = '1') else 
        tmp_117_fu_597_p4;
    select_ln653_1_fu_526_p3 <= 
        nc_V_9_fu_459_p1 when (icmp_ln653_fu_497_p2(0) = '1') else 
        nc_V_fu_449_p4;
    select_ln653_fu_512_p3 <= 
        nc_V_11_fu_473_p4 when (icmp_ln653_2_fu_507_p2(0) = '1') else 
        nc_V_10_fu_463_p4;
        sext_ln818_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(best_out_V_1_fu_656_p4),16));

        sext_ln837_2_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_V_fu_635_p4),22));

    shl_ln1_fu_648_p3 <= (best_out_V_fu_128 & ap_const_lv6_0);
    tmp_117_fu_597_p4 <= kh_mem_V_q0(31 downto 16);
    tmp_35_fu_362_p4 <= ((d_o_idx & o_addr_V_fu_339_p3) & lshr_ln_fu_352_p4);
    tmp_fu_244_p3 <= (d_o_idx & ap_const_lv11_0);
    tmp_s_fu_587_p4 <= kh_mem_V_q0(63 downto 48);
    trunc_ln1027_fu_317_p1 <= rhs_fu_136(7 - 1 downto 0);
    trunc_ln1495_1_fu_271_p1 <= o_index(7 - 1 downto 0);
    trunc_ln1495_2_fu_325_p1 <= rhs_fu_136(6 - 1 downto 0);
    trunc_ln1495_fu_267_p1 <= o_index(6 - 1 downto 0);
    trunc_ln838_fu_567_p1 <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_sum_V_out(10 - 1 downto 0);
    wt_mem_V_address0 <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_address0;
    wt_mem_V_address1 <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_address1;
    wt_mem_V_ce0 <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_ce0;
    wt_mem_V_ce1 <= grp_bin_dense_Pipeline_LOOP_DENSE_I_fu_225_wt_mem_V_ce1;
    xor_ln1649_fu_675_p2 <= (icmp_ln1649_1_fu_669_p2 xor ap_const_lv1_1);
    zext_ln186_fu_321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_fu_136),17));
    zext_ln345_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_391_p3),64));
    zext_ln541_1_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_1_fu_427_p4),64));
    zext_ln541_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_s_fu_407_p4),64));
    zext_ln552_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_offset_V_reg_834),32));
    zext_ln612_fu_371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_362_p4),64));
    zext_ln617_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_inputs),20));
    zext_ln694_fu_252_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_244_p3),64));
end behav;
