// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_process_word_Pipeline_VITIS_LOOP_82_1_VITIS_LOOP_83_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln125,
        line_buffer_m_0_address0,
        line_buffer_m_0_ce0,
        line_buffer_m_0_q0,
        line_buffer_m_0_address1,
        line_buffer_m_0_ce1,
        line_buffer_m_0_q1,
        line_buffer_m_1_address0,
        line_buffer_m_1_ce0,
        line_buffer_m_1_q0,
        line_buffer_m_1_address1,
        line_buffer_m_1_ce1,
        line_buffer_m_1_q1,
        line_buffer_m_2_address0,
        line_buffer_m_2_ce0,
        line_buffer_m_2_q0,
        line_buffer_m_2_address1,
        line_buffer_m_2_ce1,
        line_buffer_m_2_q1,
        select_ln186,
        select_ln186_1,
        select_ln186_2,
        select_ln186_3,
        select_ln186_4,
        select_ln186_5,
        select_ln186_6,
        select_ln186_7,
        select_ln186_8,
        word_buffer_m_offset,
        conv_out_buffer_m_address0,
        conv_out_buffer_m_ce0,
        conv_out_buffer_m_we0,
        conv_out_buffer_m_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] zext_ln125;
output  [7:0] line_buffer_m_0_address0;
output   line_buffer_m_0_ce0;
input  [1:0] line_buffer_m_0_q0;
output  [7:0] line_buffer_m_0_address1;
output   line_buffer_m_0_ce1;
input  [1:0] line_buffer_m_0_q1;
output  [7:0] line_buffer_m_1_address0;
output   line_buffer_m_1_ce0;
input  [1:0] line_buffer_m_1_q0;
output  [7:0] line_buffer_m_1_address1;
output   line_buffer_m_1_ce1;
input  [1:0] line_buffer_m_1_q1;
output  [7:0] line_buffer_m_2_address0;
output   line_buffer_m_2_ce0;
input  [1:0] line_buffer_m_2_q0;
output  [7:0] line_buffer_m_2_address1;
output   line_buffer_m_2_ce1;
input  [1:0] line_buffer_m_2_q1;
input  [0:0] select_ln186;
input  [0:0] select_ln186_1;
input  [0:0] select_ln186_2;
input  [0:0] select_ln186_3;
input  [0:0] select_ln186_4;
input  [0:0] select_ln186_5;
input  [0:0] select_ln186_6;
input  [0:0] select_ln186_7;
input  [0:0] select_ln186_8;
input  [0:0] word_buffer_m_offset;
output  [6:0] conv_out_buffer_m_address0;
output   conv_out_buffer_m_ce0;
output   conv_out_buffer_m_we0;
output  [4:0] conv_out_buffer_m_d0;

reg ap_idle;
reg[7:0] line_buffer_m_0_address0;
reg line_buffer_m_0_ce0;
reg line_buffer_m_0_ce1;
reg[7:0] line_buffer_m_1_address0;
reg line_buffer_m_1_ce0;
reg line_buffer_m_1_ce1;
reg[7:0] line_buffer_m_2_address0;
reg line_buffer_m_2_ce0;
reg line_buffer_m_2_ce1;
reg conv_out_buffer_m_ce0;
reg conv_out_buffer_m_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_298_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1027_reg_956;
wire   [7:0] add_ln65_4_fu_442_p2;
reg   [7:0] add_ln65_4_reg_990;
wire   [5:0] ret_V_fu_452_p2;
reg   [5:0] ret_V_reg_995;
wire    ap_block_pp0_stage1_11001;
wire   [1:0] tmp_9_fu_576_p4;
reg   [1:0] tmp_9_reg_1015;
reg   [1:0] line_buffer_m_1_load_1_reg_1020;
reg   [1:0] line_buffer_m_2_load_reg_1027;
reg   [1:0] line_buffer_m_2_load_1_reg_1034;
wire   [2:0] add_ln840_10_fu_586_p2;
reg   [2:0] add_ln840_10_reg_1041;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln65_3_fu_402_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln65_5_fu_425_p1;
wire   [63:0] zext_ln65_7_fu_547_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln84_fu_880_p1;
reg   [3:0] rhs_fu_86;
wire   [3:0] cc_V_fu_409_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_rhs_load;
reg   [3:0] bank_V_fu_90;
wire   [3:0] select_ln1027_1_fu_336_p3;
reg   [3:0] ap_sig_allocacmp_bank_V_load;
reg   [6:0] indvar_flatten_fu_94;
wire   [6:0] add_ln1027_fu_304_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [0:0] icmp_ln83_fu_322_p2;
wire   [3:0] add_ln840_fu_316_p2;
wire   [4:0] zext_ln125_cast_fu_276_p1;
wire   [4:0] zext_ln65_fu_344_p1;
wire   [4:0] add_ln65_fu_348_p2;
wire   [5:0] tmp_fu_362_p3;
wire   [7:0] p_shl6_fu_354_p3;
wire   [7:0] zext_ln65_1_fu_370_p1;
wire   [2:0] trunc_ln1027_fu_380_p1;
wire   [3:0] select_ln1027_fu_328_p3;
wire   [7:0] add_ln65_1_fu_374_p2;
wire   [7:0] zext_ln65_2_fu_392_p1;
wire   [7:0] add_ln65_2_fu_396_p2;
wire   [7:0] zext_ln65_4_fu_415_p1;
wire   [7:0] add_ln65_3_fu_419_p2;
wire   [3:0] add_ln1495_1_fu_432_p2;
wire   [7:0] zext_ln65_6_fu_438_p1;
wire   [5:0] lhs_3_mid2_fu_384_p3;
wire   [5:0] zext_ln1495_fu_448_p1;
wire   [0:0] trunc_ln779_fu_473_p1;
wire   [0:0] and_ln1497_fu_477_p2;
wire   [0:0] tmp_2_fu_482_p3;
wire   [0:0] xor_ln829_fu_490_p2;
wire   [1:0] tmp_3_fu_496_p4;
wire   [0:0] trunc_ln779_1_fu_510_p1;
wire   [0:0] and_ln1497_1_fu_514_p2;
wire   [0:0] tmp_4_fu_519_p3;
wire   [0:0] xor_ln829_1_fu_527_p2;
wire   [1:0] tmp_5_fu_533_p4;
wire   [0:0] trunc_ln779_3_fu_553_p1;
wire   [0:0] and_ln1497_3_fu_557_p2;
wire   [0:0] tmp_8_fu_562_p3;
wire   [0:0] xor_ln829_3_fu_570_p2;
wire  signed [2:0] sext_ln1495_1_fu_543_p1;
wire  signed [2:0] sext_ln1495_fu_506_p1;
wire   [0:0] trunc_ln779_2_fu_592_p1;
wire   [0:0] and_ln1497_2_fu_596_p2;
wire   [0:0] tmp_6_fu_601_p3;
wire   [0:0] xor_ln829_2_fu_609_p2;
wire   [1:0] tmp_7_fu_615_p4;
wire   [0:0] trunc_ln779_4_fu_632_p1;
wire   [0:0] and_ln1497_4_fu_635_p2;
wire   [0:0] tmp_10_fu_640_p3;
wire   [0:0] xor_ln829_4_fu_647_p2;
wire   [1:0] tmp_11_fu_653_p4;
wire   [0:0] trunc_ln779_5_fu_666_p1;
wire   [0:0] and_ln1497_5_fu_670_p2;
wire   [0:0] tmp_12_fu_675_p3;
wire   [0:0] xor_ln829_5_fu_683_p2;
wire   [1:0] tmp_13_fu_689_p4;
wire   [0:0] trunc_ln779_6_fu_703_p1;
wire   [0:0] and_ln1497_6_fu_706_p2;
wire   [0:0] tmp_14_fu_711_p3;
wire   [0:0] xor_ln829_6_fu_718_p2;
wire   [1:0] tmp_15_fu_724_p4;
wire   [0:0] trunc_ln779_7_fu_737_p1;
wire   [0:0] and_ln1497_7_fu_740_p2;
wire   [0:0] tmp_17_fu_745_p3;
wire   [0:0] xor_ln829_7_fu_752_p2;
wire   [1:0] tmp_18_fu_758_p4;
wire   [0:0] trunc_ln779_8_fu_771_p1;
wire   [0:0] and_ln1497_8_fu_775_p2;
wire   [0:0] tmp_19_fu_780_p3;
wire   [0:0] xor_ln829_8_fu_788_p2;
wire   [1:0] tmp_20_fu_794_p4;
wire  signed [2:0] sext_ln65_fu_625_p1;
wire  signed [2:0] sext_ln65_1_fu_629_p1;
wire   [2:0] add_ln840_11_fu_811_p2;
wire  signed [3:0] sext_ln840_2_fu_817_p1;
wire  signed [3:0] sext_ln840_1_fu_808_p1;
wire   [3:0] add_ln840_12_fu_821_p2;
wire  signed [2:0] sext_ln65_2_fu_662_p1;
wire  signed [2:0] sext_ln65_3_fu_699_p1;
wire   [2:0] add_ln840_13_fu_831_p2;
wire  signed [2:0] sext_ln65_5_fu_767_p1;
wire  signed [2:0] sext_ln840_fu_804_p1;
wire   [2:0] add_ln840_14_fu_841_p2;
wire  signed [3:0] sext_ln840_5_fu_847_p1;
wire  signed [3:0] sext_ln65_4_fu_733_p1;
wire   [3:0] add_ln840_15_fu_851_p2;
wire  signed [4:0] sext_ln840_6_fu_857_p1;
wire  signed [4:0] sext_ln840_4_fu_837_p1;
wire   [4:0] add_ln840_16_fu_861_p2;
wire  signed [4:0] sext_ln840_3_fu_827_p1;
wire   [6:0] tmp_s_fu_874_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_298_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            bank_V_fu_90 <= select_ln1027_1_fu_336_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            bank_V_fu_90 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_298_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_94 <= add_ln1027_fu_304_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_94 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_298_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            rhs_fu_86 <= cc_V_fu_409_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            rhs_fu_86 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_fu_298_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln65_4_reg_990 <= add_ln65_4_fu_442_p2;
        ret_V_reg_995 <= ret_V_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_956 == 1'd0))) begin
        add_ln840_10_reg_1041 <= add_ln840_10_fu_586_p2;
        tmp_9_reg_1015 <= tmp_9_fu_576_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1027_reg_956 <= icmp_ln1027_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_956 == 1'd0))) begin
        line_buffer_m_1_load_1_reg_1020 <= line_buffer_m_1_q0;
        line_buffer_m_2_load_1_reg_1034 <= line_buffer_m_2_q0;
        line_buffer_m_2_load_reg_1027 <= line_buffer_m_2_q1;
    end
end

always @ (*) begin
    if (((icmp_ln1027_fu_298_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_bank_V_load = 4'd0;
    end else begin
        ap_sig_allocacmp_bank_V_load = bank_V_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_rhs_load = 4'd0;
    end else begin
        ap_sig_allocacmp_rhs_load = rhs_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_buffer_m_ce0 = 1'b1;
    end else begin
        conv_out_buffer_m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_buffer_m_we0 = 1'b1;
    end else begin
        conv_out_buffer_m_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_0_address0 = zext_ln65_7_fu_547_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_0_address0 = zext_ln65_5_fu_425_p1;
        end else begin
            line_buffer_m_0_address0 = 'bx;
        end
    end else begin
        line_buffer_m_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buffer_m_0_ce0 = 1'b1;
    end else begin
        line_buffer_m_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_m_0_ce1 = 1'b1;
    end else begin
        line_buffer_m_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_1_address0 = zext_ln65_7_fu_547_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_1_address0 = zext_ln65_5_fu_425_p1;
        end else begin
            line_buffer_m_1_address0 = 'bx;
        end
    end else begin
        line_buffer_m_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buffer_m_1_ce0 = 1'b1;
    end else begin
        line_buffer_m_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_m_1_ce1 = 1'b1;
    end else begin
        line_buffer_m_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_2_address0 = zext_ln65_7_fu_547_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_2_address0 = zext_ln65_5_fu_425_p1;
        end else begin
            line_buffer_m_2_address0 = 'bx;
        end
    end else begin
        line_buffer_m_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buffer_m_2_ce0 = 1'b1;
    end else begin
        line_buffer_m_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_m_2_ce1 = 1'b1;
    end else begin
        line_buffer_m_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1027_fu_304_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln1495_1_fu_432_p2 = (select_ln1027_fu_328_p3 + 4'd2);

assign add_ln65_1_fu_374_p2 = (p_shl6_fu_354_p3 + zext_ln65_1_fu_370_p1);

assign add_ln65_2_fu_396_p2 = (add_ln65_1_fu_374_p2 + zext_ln65_2_fu_392_p1);

assign add_ln65_3_fu_419_p2 = (add_ln65_1_fu_374_p2 + zext_ln65_4_fu_415_p1);

assign add_ln65_4_fu_442_p2 = (add_ln65_1_fu_374_p2 + zext_ln65_6_fu_438_p1);

assign add_ln65_fu_348_p2 = (zext_ln125_cast_fu_276_p1 + zext_ln65_fu_344_p1);

assign add_ln840_10_fu_586_p2 = ($signed(sext_ln1495_1_fu_543_p1) + $signed(sext_ln1495_fu_506_p1));

assign add_ln840_11_fu_811_p2 = ($signed(sext_ln65_fu_625_p1) + $signed(sext_ln65_1_fu_629_p1));

assign add_ln840_12_fu_821_p2 = ($signed(sext_ln840_2_fu_817_p1) + $signed(sext_ln840_1_fu_808_p1));

assign add_ln840_13_fu_831_p2 = ($signed(sext_ln65_2_fu_662_p1) + $signed(sext_ln65_3_fu_699_p1));

assign add_ln840_14_fu_841_p2 = ($signed(sext_ln65_5_fu_767_p1) + $signed(sext_ln840_fu_804_p1));

assign add_ln840_15_fu_851_p2 = ($signed(sext_ln840_5_fu_847_p1) + $signed(sext_ln65_4_fu_733_p1));

assign add_ln840_16_fu_861_p2 = ($signed(sext_ln840_6_fu_857_p1) + $signed(sext_ln840_4_fu_837_p1));

assign add_ln840_fu_316_p2 = (ap_sig_allocacmp_bank_V_load + 4'd1);

assign and_ln1497_1_fu_514_p2 = (trunc_ln779_1_fu_510_p1 & select_ln186_1);

assign and_ln1497_2_fu_596_p2 = (trunc_ln779_2_fu_592_p1 & select_ln186_2);

assign and_ln1497_3_fu_557_p2 = (trunc_ln779_3_fu_553_p1 & select_ln186_3);

assign and_ln1497_4_fu_635_p2 = (trunc_ln779_4_fu_632_p1 & select_ln186_4);

assign and_ln1497_5_fu_670_p2 = (trunc_ln779_5_fu_666_p1 & select_ln186_5);

assign and_ln1497_6_fu_706_p2 = (trunc_ln779_6_fu_703_p1 & select_ln186_6);

assign and_ln1497_7_fu_740_p2 = (trunc_ln779_7_fu_737_p1 & select_ln186_7);

assign and_ln1497_8_fu_775_p2 = (trunc_ln779_8_fu_771_p1 & select_ln186_8);

assign and_ln1497_fu_477_p2 = (trunc_ln779_fu_473_p1 & select_ln186);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign cc_V_fu_409_p2 = (select_ln1027_fu_328_p3 + 4'd1);

assign conv_out_buffer_m_address0 = zext_ln84_fu_880_p1;

assign conv_out_buffer_m_d0 = ($signed(add_ln840_16_fu_861_p2) + $signed(sext_ln840_3_fu_827_p1));

assign icmp_ln1027_fu_298_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_322_p2 = ((ap_sig_allocacmp_rhs_load == 4'd8) ? 1'b1 : 1'b0);

assign lhs_3_mid2_fu_384_p3 = {{trunc_ln1027_fu_380_p1}, {3'd0}};

assign line_buffer_m_0_address1 = zext_ln65_3_fu_402_p1;

assign line_buffer_m_1_address1 = zext_ln65_3_fu_402_p1;

assign line_buffer_m_2_address1 = zext_ln65_3_fu_402_p1;

assign p_shl6_fu_354_p3 = {{add_ln65_fu_348_p2}, {3'd0}};

assign ret_V_fu_452_p2 = (lhs_3_mid2_fu_384_p3 + zext_ln1495_fu_448_p1);

assign select_ln1027_1_fu_336_p3 = ((icmp_ln83_fu_322_p2[0:0] == 1'b1) ? add_ln840_fu_316_p2 : ap_sig_allocacmp_bank_V_load);

assign select_ln1027_fu_328_p3 = ((icmp_ln83_fu_322_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_rhs_load);

assign sext_ln1495_1_fu_543_p1 = $signed(tmp_5_fu_533_p4);

assign sext_ln1495_fu_506_p1 = $signed(tmp_3_fu_496_p4);

assign sext_ln65_1_fu_629_p1 = $signed(tmp_9_reg_1015);

assign sext_ln65_2_fu_662_p1 = $signed(tmp_11_fu_653_p4);

assign sext_ln65_3_fu_699_p1 = $signed(tmp_13_fu_689_p4);

assign sext_ln65_4_fu_733_p1 = $signed(tmp_15_fu_724_p4);

assign sext_ln65_5_fu_767_p1 = $signed(tmp_18_fu_758_p4);

assign sext_ln65_fu_625_p1 = $signed(tmp_7_fu_615_p4);

assign sext_ln840_1_fu_808_p1 = $signed(add_ln840_10_reg_1041);

assign sext_ln840_2_fu_817_p1 = $signed(add_ln840_11_fu_811_p2);

assign sext_ln840_3_fu_827_p1 = $signed(add_ln840_12_fu_821_p2);

assign sext_ln840_4_fu_837_p1 = $signed(add_ln840_13_fu_831_p2);

assign sext_ln840_5_fu_847_p1 = $signed(add_ln840_14_fu_841_p2);

assign sext_ln840_6_fu_857_p1 = $signed(add_ln840_15_fu_851_p2);

assign sext_ln840_fu_804_p1 = $signed(tmp_20_fu_794_p4);

assign tmp_10_fu_640_p3 = line_buffer_m_1_load_1_reg_1020[32'd1];

assign tmp_11_fu_653_p4 = {|(xor_ln829_4_fu_647_p2), line_buffer_m_1_load_1_reg_1020[1 - 1:0]};

assign tmp_12_fu_675_p3 = line_buffer_m_1_q0[32'd1];

assign tmp_13_fu_689_p4 = {|(xor_ln829_5_fu_683_p2), line_buffer_m_1_q0[1 - 1:0]};

assign tmp_14_fu_711_p3 = line_buffer_m_2_load_reg_1027[32'd1];

assign tmp_15_fu_724_p4 = {|(xor_ln829_6_fu_718_p2), line_buffer_m_2_load_reg_1027[1 - 1:0]};

assign tmp_17_fu_745_p3 = line_buffer_m_2_load_1_reg_1034[32'd1];

assign tmp_18_fu_758_p4 = {|(xor_ln829_7_fu_752_p2), line_buffer_m_2_load_1_reg_1034[1 - 1:0]};

assign tmp_19_fu_780_p3 = line_buffer_m_2_q0[32'd1];

assign tmp_20_fu_794_p4 = {|(xor_ln829_8_fu_788_p2), line_buffer_m_2_q0[1 - 1:0]};

assign tmp_2_fu_482_p3 = line_buffer_m_0_q1[32'd1];

assign tmp_3_fu_496_p4 = {|(xor_ln829_fu_490_p2), line_buffer_m_0_q1[1 - 1:0]};

assign tmp_4_fu_519_p3 = line_buffer_m_0_q0[32'd1];

assign tmp_5_fu_533_p4 = {|(xor_ln829_1_fu_527_p2), line_buffer_m_0_q0[1 - 1:0]};

assign tmp_6_fu_601_p3 = line_buffer_m_0_q0[32'd1];

assign tmp_7_fu_615_p4 = {|(xor_ln829_2_fu_609_p2), line_buffer_m_0_q0[1 - 1:0]};

assign tmp_8_fu_562_p3 = line_buffer_m_1_q1[32'd1];

assign tmp_9_fu_576_p4 = {|(xor_ln829_3_fu_570_p2), line_buffer_m_1_q1[1 - 1:0]};

assign tmp_fu_362_p3 = {{add_ln65_fu_348_p2}, {1'd0}};

assign tmp_s_fu_874_p3 = {{word_buffer_m_offset}, {ret_V_reg_995}};

assign trunc_ln1027_fu_380_p1 = select_ln1027_1_fu_336_p3[2:0];

assign trunc_ln779_1_fu_510_p1 = line_buffer_m_0_q0[0:0];

assign trunc_ln779_2_fu_592_p1 = line_buffer_m_0_q0[0:0];

assign trunc_ln779_3_fu_553_p1 = line_buffer_m_1_q1[0:0];

assign trunc_ln779_4_fu_632_p1 = line_buffer_m_1_load_1_reg_1020[0:0];

assign trunc_ln779_5_fu_666_p1 = line_buffer_m_1_q0[0:0];

assign trunc_ln779_6_fu_703_p1 = line_buffer_m_2_load_reg_1027[0:0];

assign trunc_ln779_7_fu_737_p1 = line_buffer_m_2_load_1_reg_1034[0:0];

assign trunc_ln779_8_fu_771_p1 = line_buffer_m_2_q0[0:0];

assign trunc_ln779_fu_473_p1 = line_buffer_m_0_q1[0:0];

assign xor_ln829_1_fu_527_p2 = (tmp_4_fu_519_p3 ^ and_ln1497_1_fu_514_p2);

assign xor_ln829_2_fu_609_p2 = (tmp_6_fu_601_p3 ^ and_ln1497_2_fu_596_p2);

assign xor_ln829_3_fu_570_p2 = (tmp_8_fu_562_p3 ^ and_ln1497_3_fu_557_p2);

assign xor_ln829_4_fu_647_p2 = (tmp_10_fu_640_p3 ^ and_ln1497_4_fu_635_p2);

assign xor_ln829_5_fu_683_p2 = (tmp_12_fu_675_p3 ^ and_ln1497_5_fu_670_p2);

assign xor_ln829_6_fu_718_p2 = (tmp_14_fu_711_p3 ^ and_ln1497_6_fu_706_p2);

assign xor_ln829_7_fu_752_p2 = (tmp_17_fu_745_p3 ^ and_ln1497_7_fu_740_p2);

assign xor_ln829_8_fu_788_p2 = (tmp_19_fu_780_p3 ^ and_ln1497_8_fu_775_p2);

assign xor_ln829_fu_490_p2 = (tmp_2_fu_482_p3 ^ and_ln1497_fu_477_p2);

assign zext_ln125_cast_fu_276_p1 = zext_ln125;

assign zext_ln1495_fu_448_p1 = select_ln1027_fu_328_p3;

assign zext_ln65_1_fu_370_p1 = tmp_fu_362_p3;

assign zext_ln65_2_fu_392_p1 = select_ln1027_fu_328_p3;

assign zext_ln65_3_fu_402_p1 = add_ln65_2_fu_396_p2;

assign zext_ln65_4_fu_415_p1 = cc_V_fu_409_p2;

assign zext_ln65_5_fu_425_p1 = add_ln65_3_fu_419_p2;

assign zext_ln65_6_fu_438_p1 = add_ln1495_1_fu_432_p2;

assign zext_ln65_7_fu_547_p1 = add_ln65_4_reg_990;

assign zext_ln65_fu_344_p1 = select_ln1027_1_fu_336_p3;

assign zext_ln84_fu_880_p1 = tmp_s_fu_874_p3;

endmodule //top_process_word_Pipeline_VITIS_LOOP_82_1_VITIS_LOOP_83_2
