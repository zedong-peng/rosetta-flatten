// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_bin_conv_Pipeline_LOOP_LOAD_WTS (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_params_V_2_2_1_1,
        conv_params_V_2_2_0_1,
        conv_params_V_2_1_1_1,
        conv_params_V_2_1_0_1,
        conv_params_V_2_0_1_1,
        conv_params_V_2_0_0_1,
        conv_params_V_1_2_1_1,
        conv_params_V_1_2_0_1,
        conv_params_V_1_1_1_1,
        conv_params_V_1_1_0_1,
        conv_params_V_1_0_1_1,
        conv_params_V_1_0_0_1,
        conv_params_V_0_2_1_1,
        conv_params_V_0_2_0_1,
        conv_params_V_0_1_1_1,
        conv_params_V_0_1_0_1,
        conv_params_V_0_0_1_1,
        conv_params_V_0_0_0_1,
        wt_word_buffer_V_1_2_reload,
        wt_word_buffer_V_0_2_reload,
        conv_params_V_2_2_1_2_out,
        conv_params_V_2_2_1_2_out_ap_vld,
        conv_params_V_2_2_0_2_out,
        conv_params_V_2_2_0_2_out_ap_vld,
        conv_params_V_2_1_1_2_out,
        conv_params_V_2_1_1_2_out_ap_vld,
        conv_params_V_2_1_0_2_out,
        conv_params_V_2_1_0_2_out_ap_vld,
        conv_params_V_2_0_1_2_out,
        conv_params_V_2_0_1_2_out_ap_vld,
        conv_params_V_2_0_0_2_out,
        conv_params_V_2_0_0_2_out_ap_vld,
        conv_params_V_1_2_1_2_out,
        conv_params_V_1_2_1_2_out_ap_vld,
        conv_params_V_1_2_0_2_out,
        conv_params_V_1_2_0_2_out_ap_vld,
        conv_params_V_1_1_1_2_out,
        conv_params_V_1_1_1_2_out_ap_vld,
        conv_params_V_1_1_0_2_out,
        conv_params_V_1_1_0_2_out_ap_vld,
        conv_params_V_1_0_1_2_out,
        conv_params_V_1_0_1_2_out_ap_vld,
        conv_params_V_1_0_0_2_out,
        conv_params_V_1_0_0_2_out_ap_vld,
        conv_params_V_0_2_1_2_out,
        conv_params_V_0_2_1_2_out_ap_vld,
        conv_params_V_0_2_0_2_out,
        conv_params_V_0_2_0_2_out_ap_vld,
        conv_params_V_0_1_1_2_out,
        conv_params_V_0_1_1_2_out_ap_vld,
        conv_params_V_0_1_0_2_out,
        conv_params_V_0_1_0_2_out_ap_vld,
        conv_params_V_0_0_1_2_out,
        conv_params_V_0_0_1_2_out_ap_vld,
        conv_params_V_0_0_0_2_out,
        conv_params_V_0_0_0_2_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] conv_params_V_2_2_1_1;
input  [0:0] conv_params_V_2_2_0_1;
input  [0:0] conv_params_V_2_1_1_1;
input  [0:0] conv_params_V_2_1_0_1;
input  [0:0] conv_params_V_2_0_1_1;
input  [0:0] conv_params_V_2_0_0_1;
input  [0:0] conv_params_V_1_2_1_1;
input  [0:0] conv_params_V_1_2_0_1;
input  [0:0] conv_params_V_1_1_1_1;
input  [0:0] conv_params_V_1_1_0_1;
input  [0:0] conv_params_V_1_0_1_1;
input  [0:0] conv_params_V_1_0_0_1;
input  [0:0] conv_params_V_0_2_1_1;
input  [0:0] conv_params_V_0_2_0_1;
input  [0:0] conv_params_V_0_1_1_1;
input  [0:0] conv_params_V_0_1_0_1;
input  [0:0] conv_params_V_0_0_1_1;
input  [0:0] conv_params_V_0_0_0_1;
input  [8:0] wt_word_buffer_V_1_2_reload;
input  [8:0] wt_word_buffer_V_0_2_reload;
output  [0:0] conv_params_V_2_2_1_2_out;
output   conv_params_V_2_2_1_2_out_ap_vld;
output  [0:0] conv_params_V_2_2_0_2_out;
output   conv_params_V_2_2_0_2_out_ap_vld;
output  [0:0] conv_params_V_2_1_1_2_out;
output   conv_params_V_2_1_1_2_out_ap_vld;
output  [0:0] conv_params_V_2_1_0_2_out;
output   conv_params_V_2_1_0_2_out_ap_vld;
output  [0:0] conv_params_V_2_0_1_2_out;
output   conv_params_V_2_0_1_2_out_ap_vld;
output  [0:0] conv_params_V_2_0_0_2_out;
output   conv_params_V_2_0_0_2_out_ap_vld;
output  [0:0] conv_params_V_1_2_1_2_out;
output   conv_params_V_1_2_1_2_out_ap_vld;
output  [0:0] conv_params_V_1_2_0_2_out;
output   conv_params_V_1_2_0_2_out_ap_vld;
output  [0:0] conv_params_V_1_1_1_2_out;
output   conv_params_V_1_1_1_2_out_ap_vld;
output  [0:0] conv_params_V_1_1_0_2_out;
output   conv_params_V_1_1_0_2_out_ap_vld;
output  [0:0] conv_params_V_1_0_1_2_out;
output   conv_params_V_1_0_1_2_out_ap_vld;
output  [0:0] conv_params_V_1_0_0_2_out;
output   conv_params_V_1_0_0_2_out_ap_vld;
output  [0:0] conv_params_V_0_2_1_2_out;
output   conv_params_V_0_2_1_2_out_ap_vld;
output  [0:0] conv_params_V_0_2_0_2_out;
output   conv_params_V_0_2_0_2_out_ap_vld;
output  [0:0] conv_params_V_0_1_1_2_out;
output   conv_params_V_0_1_1_2_out_ap_vld;
output  [0:0] conv_params_V_0_1_0_2_out;
output   conv_params_V_0_1_0_2_out_ap_vld;
output  [0:0] conv_params_V_0_0_1_2_out;
output   conv_params_V_0_0_1_2_out_ap_vld;
output  [0:0] conv_params_V_0_0_0_2_out;
output   conv_params_V_0_0_0_2_out_ap_vld;

reg ap_idle;
reg conv_params_V_2_2_1_2_out_ap_vld;
reg conv_params_V_2_2_0_2_out_ap_vld;
reg conv_params_V_2_1_1_2_out_ap_vld;
reg conv_params_V_2_1_0_2_out_ap_vld;
reg conv_params_V_2_0_1_2_out_ap_vld;
reg conv_params_V_2_0_0_2_out_ap_vld;
reg conv_params_V_1_2_1_2_out_ap_vld;
reg conv_params_V_1_2_0_2_out_ap_vld;
reg conv_params_V_1_1_1_2_out_ap_vld;
reg conv_params_V_1_1_0_2_out_ap_vld;
reg conv_params_V_1_0_1_2_out_ap_vld;
reg conv_params_V_1_0_0_2_out_ap_vld;
reg conv_params_V_0_2_1_2_out_ap_vld;
reg conv_params_V_0_2_0_2_out_ap_vld;
reg conv_params_V_0_1_1_2_out_ap_vld;
reg conv_params_V_0_1_0_2_out_ap_vld;
reg conv_params_V_0_0_1_2_out_ap_vld;
reg conv_params_V_0_0_0_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln1027_fu_432_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] conv_params_V_2_2_1_2_reg_244;
reg   [0:0] conv_params_V_2_2_0_2_reg_254;
reg   [0:0] conv_params_V_2_1_1_2_reg_264;
reg   [0:0] conv_params_V_2_1_0_2_reg_274;
reg   [0:0] conv_params_V_2_0_1_2_reg_284;
reg   [0:0] conv_params_V_2_0_0_2_reg_294;
reg   [0:0] conv_params_V_1_2_1_2_reg_304;
reg   [0:0] conv_params_V_1_2_0_2_reg_314;
reg   [0:0] conv_params_V_1_1_1_2_reg_324;
reg   [0:0] conv_params_V_1_1_0_2_reg_334;
reg   [0:0] conv_params_V_1_0_1_2_reg_344;
reg   [0:0] conv_params_V_1_0_0_2_reg_354;
reg   [0:0] conv_params_V_0_2_1_2_reg_364;
reg   [0:0] conv_params_V_0_2_0_2_reg_374;
reg   [0:0] conv_params_V_0_1_1_2_reg_384;
reg   [0:0] conv_params_V_0_1_0_2_reg_394;
reg   [0:0] conv_params_V_0_0_1_2_reg_404;
reg   [0:0] conv_params_V_0_0_0_2_reg_414;
wire   [0:0] conv_params_V_0_0_1_fu_468_p3;
wire   [0:0] conv_params_V_0_0_1_4_fu_476_p3;
wire   [0:0] conv_params_V_0_1_1_fu_492_p3;
wire   [0:0] conv_params_V_0_1_1_4_fu_500_p3;
wire   [0:0] conv_params_V_0_2_1_fu_516_p3;
wire   [0:0] conv_params_V_0_2_1_4_fu_524_p3;
wire   [0:0] conv_params_V_1_0_1_fu_540_p3;
wire   [0:0] conv_params_V_1_0_1_4_fu_548_p3;
wire   [0:0] conv_params_V_1_1_1_fu_564_p3;
wire   [0:0] conv_params_V_1_1_1_4_fu_572_p3;
wire   [0:0] conv_params_V_1_2_1_fu_588_p3;
wire   [0:0] conv_params_V_1_2_1_4_fu_596_p3;
wire   [0:0] conv_params_V_2_0_1_fu_612_p3;
wire   [0:0] conv_params_V_2_0_1_4_fu_620_p3;
wire   [0:0] conv_params_V_2_1_1_fu_636_p3;
wire   [0:0] conv_params_V_2_1_1_4_fu_644_p3;
wire   [0:0] conv_params_V_2_2_1_fu_660_p3;
wire   [0:0] conv_params_V_2_2_1_4_fu_668_p3;
reg   [0:0] ap_phi_mux_conv_params_V_2_2_1_2_phi_fu_247_p4;
wire    ap_loop_init;
reg   [0:0] ap_phi_mux_conv_params_V_2_2_0_2_phi_fu_257_p4;
reg   [0:0] ap_phi_mux_conv_params_V_2_1_1_2_phi_fu_267_p4;
reg   [0:0] ap_phi_mux_conv_params_V_2_1_0_2_phi_fu_277_p4;
reg   [0:0] ap_phi_mux_conv_params_V_2_0_1_2_phi_fu_287_p4;
reg   [0:0] ap_phi_mux_conv_params_V_2_0_0_2_phi_fu_297_p4;
reg   [0:0] ap_phi_mux_conv_params_V_1_2_1_2_phi_fu_307_p4;
reg   [0:0] ap_phi_mux_conv_params_V_1_2_0_2_phi_fu_317_p4;
reg   [0:0] ap_phi_mux_conv_params_V_1_1_1_2_phi_fu_327_p4;
reg   [0:0] ap_phi_mux_conv_params_V_1_1_0_2_phi_fu_337_p4;
reg   [0:0] ap_phi_mux_conv_params_V_1_0_1_2_phi_fu_347_p4;
reg   [0:0] ap_phi_mux_conv_params_V_1_0_0_2_phi_fu_357_p4;
reg   [0:0] ap_phi_mux_conv_params_V_0_2_1_2_phi_fu_367_p4;
reg   [0:0] ap_phi_mux_conv_params_V_0_2_0_2_phi_fu_377_p4;
reg   [0:0] ap_phi_mux_conv_params_V_0_1_1_2_phi_fu_387_p4;
reg   [0:0] ap_phi_mux_conv_params_V_0_1_0_2_phi_fu_397_p4;
reg   [0:0] ap_phi_mux_conv_params_V_0_0_1_2_phi_fu_407_p4;
reg   [0:0] ap_phi_mux_conv_params_V_0_0_0_2_phi_fu_417_p4;
reg   [1:0] m_V_2_fu_120;
wire   [1:0] add_ln840_fu_438_p2;
reg   [1:0] ap_sig_allocacmp_m_V;
wire   [0:0] empty_fu_444_p1;
wire   [8:0] p_Val2_s_fu_448_p3;
wire   [63:0] zext_ln779_fu_456_p1;
wire   [0:0] conv_params_V_0_0_1_5_fu_460_p3;
wire   [0:0] conv_params_V_0_1_1_5_fu_484_p3;
wire   [0:0] conv_params_V_0_2_1_5_fu_508_p3;
wire   [0:0] conv_params_V_1_0_1_5_fu_532_p3;
wire   [0:0] conv_params_V_1_1_1_5_fu_556_p3;
wire   [0:0] conv_params_V_1_2_1_5_fu_580_p3;
wire   [0:0] conv_params_V_2_0_1_5_fu_604_p3;
wire   [0:0] conv_params_V_2_1_1_5_fu_628_p3;
wire   [0:0] conv_params_V_2_2_1_5_fu_652_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln1027_fu_432_p2 == 1'd0)) begin
            m_V_2_fu_120 <= add_ln840_fu_438_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            m_V_2_fu_120 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_0_0_0_2_reg_414 <= conv_params_V_0_0_1_4_fu_476_p3;
        conv_params_V_0_0_1_2_reg_404 <= conv_params_V_0_0_1_fu_468_p3;
        conv_params_V_0_1_0_2_reg_394 <= conv_params_V_0_1_1_4_fu_500_p3;
        conv_params_V_0_1_1_2_reg_384 <= conv_params_V_0_1_1_fu_492_p3;
        conv_params_V_0_2_0_2_reg_374 <= conv_params_V_0_2_1_4_fu_524_p3;
        conv_params_V_0_2_1_2_reg_364 <= conv_params_V_0_2_1_fu_516_p3;
        conv_params_V_1_0_0_2_reg_354 <= conv_params_V_1_0_1_4_fu_548_p3;
        conv_params_V_1_0_1_2_reg_344 <= conv_params_V_1_0_1_fu_540_p3;
        conv_params_V_1_1_0_2_reg_334 <= conv_params_V_1_1_1_4_fu_572_p3;
        conv_params_V_1_1_1_2_reg_324 <= conv_params_V_1_1_1_fu_564_p3;
        conv_params_V_1_2_0_2_reg_314 <= conv_params_V_1_2_1_4_fu_596_p3;
        conv_params_V_1_2_1_2_reg_304 <= conv_params_V_1_2_1_fu_588_p3;
        conv_params_V_2_0_0_2_reg_294 <= conv_params_V_2_0_1_4_fu_620_p3;
        conv_params_V_2_0_1_2_reg_284 <= conv_params_V_2_0_1_fu_612_p3;
        conv_params_V_2_1_0_2_reg_274 <= conv_params_V_2_1_1_4_fu_644_p3;
        conv_params_V_2_1_1_2_reg_264 <= conv_params_V_2_1_1_fu_636_p3;
        conv_params_V_2_2_0_2_reg_254 <= conv_params_V_2_2_1_4_fu_668_p3;
        conv_params_V_2_2_1_2_reg_244 <= conv_params_V_2_2_1_fu_660_p3;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_0_0_0_2_phi_fu_417_p4 = conv_params_V_0_0_0_1;
    end else begin
        ap_phi_mux_conv_params_V_0_0_0_2_phi_fu_417_p4 = conv_params_V_0_0_0_2_reg_414;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_0_0_1_2_phi_fu_407_p4 = conv_params_V_0_0_1_1;
    end else begin
        ap_phi_mux_conv_params_V_0_0_1_2_phi_fu_407_p4 = conv_params_V_0_0_1_2_reg_404;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_0_1_0_2_phi_fu_397_p4 = conv_params_V_0_1_0_1;
    end else begin
        ap_phi_mux_conv_params_V_0_1_0_2_phi_fu_397_p4 = conv_params_V_0_1_0_2_reg_394;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_0_1_1_2_phi_fu_387_p4 = conv_params_V_0_1_1_1;
    end else begin
        ap_phi_mux_conv_params_V_0_1_1_2_phi_fu_387_p4 = conv_params_V_0_1_1_2_reg_384;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_0_2_0_2_phi_fu_377_p4 = conv_params_V_0_2_0_1;
    end else begin
        ap_phi_mux_conv_params_V_0_2_0_2_phi_fu_377_p4 = conv_params_V_0_2_0_2_reg_374;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_0_2_1_2_phi_fu_367_p4 = conv_params_V_0_2_1_1;
    end else begin
        ap_phi_mux_conv_params_V_0_2_1_2_phi_fu_367_p4 = conv_params_V_0_2_1_2_reg_364;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_1_0_0_2_phi_fu_357_p4 = conv_params_V_1_0_0_1;
    end else begin
        ap_phi_mux_conv_params_V_1_0_0_2_phi_fu_357_p4 = conv_params_V_1_0_0_2_reg_354;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_1_0_1_2_phi_fu_347_p4 = conv_params_V_1_0_1_1;
    end else begin
        ap_phi_mux_conv_params_V_1_0_1_2_phi_fu_347_p4 = conv_params_V_1_0_1_2_reg_344;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_1_1_0_2_phi_fu_337_p4 = conv_params_V_1_1_0_1;
    end else begin
        ap_phi_mux_conv_params_V_1_1_0_2_phi_fu_337_p4 = conv_params_V_1_1_0_2_reg_334;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_1_1_1_2_phi_fu_327_p4 = conv_params_V_1_1_1_1;
    end else begin
        ap_phi_mux_conv_params_V_1_1_1_2_phi_fu_327_p4 = conv_params_V_1_1_1_2_reg_324;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_1_2_0_2_phi_fu_317_p4 = conv_params_V_1_2_0_1;
    end else begin
        ap_phi_mux_conv_params_V_1_2_0_2_phi_fu_317_p4 = conv_params_V_1_2_0_2_reg_314;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_1_2_1_2_phi_fu_307_p4 = conv_params_V_1_2_1_1;
    end else begin
        ap_phi_mux_conv_params_V_1_2_1_2_phi_fu_307_p4 = conv_params_V_1_2_1_2_reg_304;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_2_0_0_2_phi_fu_297_p4 = conv_params_V_2_0_0_1;
    end else begin
        ap_phi_mux_conv_params_V_2_0_0_2_phi_fu_297_p4 = conv_params_V_2_0_0_2_reg_294;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_2_0_1_2_phi_fu_287_p4 = conv_params_V_2_0_1_1;
    end else begin
        ap_phi_mux_conv_params_V_2_0_1_2_phi_fu_287_p4 = conv_params_V_2_0_1_2_reg_284;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_2_1_0_2_phi_fu_277_p4 = conv_params_V_2_1_0_1;
    end else begin
        ap_phi_mux_conv_params_V_2_1_0_2_phi_fu_277_p4 = conv_params_V_2_1_0_2_reg_274;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_2_1_1_2_phi_fu_267_p4 = conv_params_V_2_1_1_1;
    end else begin
        ap_phi_mux_conv_params_V_2_1_1_2_phi_fu_267_p4 = conv_params_V_2_1_1_2_reg_264;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_2_2_0_2_phi_fu_257_p4 = conv_params_V_2_2_0_1;
    end else begin
        ap_phi_mux_conv_params_V_2_2_0_2_phi_fu_257_p4 = conv_params_V_2_2_0_2_reg_254;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_phi_mux_conv_params_V_2_2_1_2_phi_fu_247_p4 = conv_params_V_2_2_1_1;
    end else begin
        ap_phi_mux_conv_params_V_2_2_1_2_phi_fu_247_p4 = conv_params_V_2_2_1_2_reg_244;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_m_V = 2'd0;
    end else begin
        ap_sig_allocacmp_m_V = m_V_2_fu_120;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_0_0_0_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_0_0_0_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_0_0_1_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_0_0_1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_0_1_0_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_0_1_0_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_0_1_1_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_0_1_1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_0_2_0_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_0_2_0_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_0_2_1_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_0_2_1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_1_0_0_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_1_0_0_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_1_0_1_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_1_0_1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_1_1_0_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_1_1_0_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_1_1_1_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_1_1_1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_1_2_0_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_1_2_0_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_1_2_1_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_1_2_1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_2_0_0_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_2_0_0_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_2_0_1_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_2_0_1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_2_1_0_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_2_1_0_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_2_1_1_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_2_1_1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_2_2_0_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_2_2_0_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln1027_fu_432_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        conv_params_V_2_2_1_2_out_ap_vld = 1'b1;
    end else begin
        conv_params_V_2_2_1_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln840_fu_438_p2 = (ap_sig_allocacmp_m_V + 2'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign conv_params_V_0_0_0_2_out = ap_phi_mux_conv_params_V_0_0_0_2_phi_fu_417_p4;

assign conv_params_V_0_0_1_2_out = ap_phi_mux_conv_params_V_0_0_1_2_phi_fu_407_p4;

assign conv_params_V_0_0_1_4_fu_476_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? ap_phi_mux_conv_params_V_0_0_0_2_phi_fu_417_p4 : conv_params_V_0_0_1_5_fu_460_p3);

assign conv_params_V_0_0_1_5_fu_460_p3 = zext_ln779_fu_456_p1[32'd0];

assign conv_params_V_0_0_1_fu_468_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? conv_params_V_0_0_1_5_fu_460_p3 : ap_phi_mux_conv_params_V_0_0_1_2_phi_fu_407_p4);

assign conv_params_V_0_1_0_2_out = ap_phi_mux_conv_params_V_0_1_0_2_phi_fu_397_p4;

assign conv_params_V_0_1_1_2_out = ap_phi_mux_conv_params_V_0_1_1_2_phi_fu_387_p4;

assign conv_params_V_0_1_1_4_fu_500_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? ap_phi_mux_conv_params_V_0_1_0_2_phi_fu_397_p4 : conv_params_V_0_1_1_5_fu_484_p3);

assign conv_params_V_0_1_1_5_fu_484_p3 = zext_ln779_fu_456_p1[32'd1];

assign conv_params_V_0_1_1_fu_492_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? conv_params_V_0_1_1_5_fu_484_p3 : ap_phi_mux_conv_params_V_0_1_1_2_phi_fu_387_p4);

assign conv_params_V_0_2_0_2_out = ap_phi_mux_conv_params_V_0_2_0_2_phi_fu_377_p4;

assign conv_params_V_0_2_1_2_out = ap_phi_mux_conv_params_V_0_2_1_2_phi_fu_367_p4;

assign conv_params_V_0_2_1_4_fu_524_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? ap_phi_mux_conv_params_V_0_2_0_2_phi_fu_377_p4 : conv_params_V_0_2_1_5_fu_508_p3);

assign conv_params_V_0_2_1_5_fu_508_p3 = zext_ln779_fu_456_p1[32'd2];

assign conv_params_V_0_2_1_fu_516_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? conv_params_V_0_2_1_5_fu_508_p3 : ap_phi_mux_conv_params_V_0_2_1_2_phi_fu_367_p4);

assign conv_params_V_1_0_0_2_out = ap_phi_mux_conv_params_V_1_0_0_2_phi_fu_357_p4;

assign conv_params_V_1_0_1_2_out = ap_phi_mux_conv_params_V_1_0_1_2_phi_fu_347_p4;

assign conv_params_V_1_0_1_4_fu_548_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? ap_phi_mux_conv_params_V_1_0_0_2_phi_fu_357_p4 : conv_params_V_1_0_1_5_fu_532_p3);

assign conv_params_V_1_0_1_5_fu_532_p3 = zext_ln779_fu_456_p1[32'd3];

assign conv_params_V_1_0_1_fu_540_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? conv_params_V_1_0_1_5_fu_532_p3 : ap_phi_mux_conv_params_V_1_0_1_2_phi_fu_347_p4);

assign conv_params_V_1_1_0_2_out = ap_phi_mux_conv_params_V_1_1_0_2_phi_fu_337_p4;

assign conv_params_V_1_1_1_2_out = ap_phi_mux_conv_params_V_1_1_1_2_phi_fu_327_p4;

assign conv_params_V_1_1_1_4_fu_572_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? ap_phi_mux_conv_params_V_1_1_0_2_phi_fu_337_p4 : conv_params_V_1_1_1_5_fu_556_p3);

assign conv_params_V_1_1_1_5_fu_556_p3 = zext_ln779_fu_456_p1[32'd4];

assign conv_params_V_1_1_1_fu_564_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? conv_params_V_1_1_1_5_fu_556_p3 : ap_phi_mux_conv_params_V_1_1_1_2_phi_fu_327_p4);

assign conv_params_V_1_2_0_2_out = ap_phi_mux_conv_params_V_1_2_0_2_phi_fu_317_p4;

assign conv_params_V_1_2_1_2_out = ap_phi_mux_conv_params_V_1_2_1_2_phi_fu_307_p4;

assign conv_params_V_1_2_1_4_fu_596_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? ap_phi_mux_conv_params_V_1_2_0_2_phi_fu_317_p4 : conv_params_V_1_2_1_5_fu_580_p3);

assign conv_params_V_1_2_1_5_fu_580_p3 = zext_ln779_fu_456_p1[32'd5];

assign conv_params_V_1_2_1_fu_588_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? conv_params_V_1_2_1_5_fu_580_p3 : ap_phi_mux_conv_params_V_1_2_1_2_phi_fu_307_p4);

assign conv_params_V_2_0_0_2_out = ap_phi_mux_conv_params_V_2_0_0_2_phi_fu_297_p4;

assign conv_params_V_2_0_1_2_out = ap_phi_mux_conv_params_V_2_0_1_2_phi_fu_287_p4;

assign conv_params_V_2_0_1_4_fu_620_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? ap_phi_mux_conv_params_V_2_0_0_2_phi_fu_297_p4 : conv_params_V_2_0_1_5_fu_604_p3);

assign conv_params_V_2_0_1_5_fu_604_p3 = zext_ln779_fu_456_p1[32'd6];

assign conv_params_V_2_0_1_fu_612_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? conv_params_V_2_0_1_5_fu_604_p3 : ap_phi_mux_conv_params_V_2_0_1_2_phi_fu_287_p4);

assign conv_params_V_2_1_0_2_out = ap_phi_mux_conv_params_V_2_1_0_2_phi_fu_277_p4;

assign conv_params_V_2_1_1_2_out = ap_phi_mux_conv_params_V_2_1_1_2_phi_fu_267_p4;

assign conv_params_V_2_1_1_4_fu_644_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? ap_phi_mux_conv_params_V_2_1_0_2_phi_fu_277_p4 : conv_params_V_2_1_1_5_fu_628_p3);

assign conv_params_V_2_1_1_5_fu_628_p3 = zext_ln779_fu_456_p1[32'd7];

assign conv_params_V_2_1_1_fu_636_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? conv_params_V_2_1_1_5_fu_628_p3 : ap_phi_mux_conv_params_V_2_1_1_2_phi_fu_267_p4);

assign conv_params_V_2_2_0_2_out = ap_phi_mux_conv_params_V_2_2_0_2_phi_fu_257_p4;

assign conv_params_V_2_2_1_2_out = ap_phi_mux_conv_params_V_2_2_1_2_phi_fu_247_p4;

assign conv_params_V_2_2_1_4_fu_668_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? ap_phi_mux_conv_params_V_2_2_0_2_phi_fu_257_p4 : conv_params_V_2_2_1_5_fu_652_p3);

assign conv_params_V_2_2_1_5_fu_652_p3 = zext_ln779_fu_456_p1[32'd8];

assign conv_params_V_2_2_1_fu_660_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? conv_params_V_2_2_1_5_fu_652_p3 : ap_phi_mux_conv_params_V_2_2_1_2_phi_fu_247_p4);

assign empty_fu_444_p1 = ap_sig_allocacmp_m_V[0:0];

assign icmp_ln1027_fu_432_p2 = ((ap_sig_allocacmp_m_V == 2'd2) ? 1'b1 : 1'b0);

assign p_Val2_s_fu_448_p3 = ((empty_fu_444_p1[0:0] == 1'b1) ? wt_word_buffer_V_1_2_reload : wt_word_buffer_V_0_2_reload);

assign zext_ln779_fu_456_p1 = p_Val2_s_fu_448_p3;

endmodule //top_bin_conv_Pipeline_LOOP_LOAD_WTS
