// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_bin_conv_Pipeline_VITIS_LOOP_338_8_VITIS_LOOP_339_9_VITIS_LOOP_340_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        word_buffer_V_address0,
        word_buffer_V_ce0,
        word_buffer_V_q0,
        old_word_buffer_V_address0,
        old_word_buffer_V_ce0,
        old_word_buffer_V_we0,
        old_word_buffer_V_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] word_buffer_V_address0;
output   word_buffer_V_ce0;
input  [1:0] word_buffer_V_q0;
output  [7:0] old_word_buffer_V_address0;
output   old_word_buffer_V_ce0;
output   old_word_buffer_V_we0;
output  [1:0] old_word_buffer_V_d0;

reg ap_idle;
reg word_buffer_V_ce0;
reg old_word_buffer_V_ce0;
reg old_word_buffer_V_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_133_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] zext_ln341_3_fu_293_p1;
reg   [63:0] zext_ln341_3_reg_381;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage0;
reg   [3:0] cc_V_fu_58;
wire   [3:0] add_ln840_33_fu_298_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_cc_V_load;
reg   [3:0] bank_V_fu_62;
wire   [3:0] select_ln1027_5_fu_235_p3;
reg   [3:0] ap_sig_allocacmp_bank_V_load;
reg   [7:0] indvar_flatten_fu_66;
wire   [7:0] select_ln1027_6_fu_310_p3;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [1:0] m_V_fu_70;
wire   [1:0] select_ln1027_3_fu_177_p3;
reg   [1:0] ap_sig_allocacmp_m_V_load;
reg   [7:0] indvar_flatten13_fu_74;
wire   [7:0] add_ln1027_1_fu_139_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten13_load;
wire   [0:0] icmp_ln1027_3_fu_163_p2;
wire   [1:0] add_ln840_fu_157_p2;
wire   [4:0] tmp_s_fu_185_p3;
wire   [0:0] icmp_ln1027_4_fu_203_p2;
wire   [0:0] xor_ln1027_fu_197_p2;
wire   [3:0] select_ln1027_fu_169_p3;
wire   [0:0] and_ln1027_fu_209_p2;
wire   [0:0] or_ln1027_fu_221_p2;
wire   [3:0] add_ln840_32_fu_215_p2;
wire   [5:0] zext_ln1027_fu_193_p1;
wire   [5:0] zext_ln341_fu_243_p1;
wire   [5:0] add_ln341_fu_247_p2;
wire   [4:0] trunc_ln341_fu_253_p1;
wire   [6:0] tmp_fu_265_p3;
wire   [7:0] p_shl_fu_257_p3;
wire   [7:0] zext_ln341_1_fu_273_p1;
wire   [3:0] select_ln1027_4_fu_227_p3;
wire   [7:0] add_ln341_1_fu_277_p2;
wire   [7:0] zext_ln341_2_fu_283_p1;
wire   [7:0] add_ln341_2_fu_287_p2;
wire   [7:0] add_ln1027_fu_304_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_133_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            bank_V_fu_62 <= select_ln1027_5_fu_235_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            bank_V_fu_62 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_133_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            cc_V_fu_58 <= add_ln840_33_fu_298_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            cc_V_fu_58 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_133_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten13_fu_74 <= add_ln1027_1_fu_139_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten13_fu_74 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_133_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_66 <= select_ln1027_6_fu_310_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_66 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1027_fu_133_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            m_V_fu_70 <= select_ln1027_3_fu_177_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            m_V_fu_70 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_fu_133_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln341_3_reg_381[7 : 0] <= zext_ln341_3_fu_293_p1[7 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln1027_fu_133_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_bank_V_load = 4'd0;
    end else begin
        ap_sig_allocacmp_bank_V_load = bank_V_fu_62;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_cc_V_load = 4'd0;
    end else begin
        ap_sig_allocacmp_cc_V_load = cc_V_fu_58;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten13_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten13_load = indvar_flatten13_fu_74;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_66;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_m_V_load = 2'd0;
    end else begin
        ap_sig_allocacmp_m_V_load = m_V_fu_70;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        old_word_buffer_V_ce0 = 1'b1;
    end else begin
        old_word_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        old_word_buffer_V_we0 = 1'b1;
    end else begin
        old_word_buffer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        word_buffer_V_ce0 = 1'b1;
    end else begin
        word_buffer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1027_1_fu_139_p2 = (ap_sig_allocacmp_indvar_flatten13_load + 8'd1);

assign add_ln1027_fu_304_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln341_1_fu_277_p2 = (p_shl_fu_257_p3 + zext_ln341_1_fu_273_p1);

assign add_ln341_2_fu_287_p2 = (add_ln341_1_fu_277_p2 + zext_ln341_2_fu_283_p1);

assign add_ln341_fu_247_p2 = (zext_ln1027_fu_193_p1 + zext_ln341_fu_243_p1);

assign add_ln840_32_fu_215_p2 = (select_ln1027_fu_169_p3 + 4'd1);

assign add_ln840_33_fu_298_p2 = (select_ln1027_4_fu_227_p3 + 4'd1);

assign add_ln840_fu_157_p2 = (ap_sig_allocacmp_m_V_load + 2'd1);

assign and_ln1027_fu_209_p2 = (xor_ln1027_fu_197_p2 & icmp_ln1027_4_fu_203_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln1027_3_fu_163_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd80) ? 1'b1 : 1'b0);

assign icmp_ln1027_4_fu_203_p2 = ((ap_sig_allocacmp_cc_V_load == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_133_p2 = ((ap_sig_allocacmp_indvar_flatten13_load == 8'd160) ? 1'b1 : 1'b0);

assign old_word_buffer_V_address0 = zext_ln341_3_reg_381;

assign old_word_buffer_V_d0 = word_buffer_V_q0;

assign or_ln1027_fu_221_p2 = (icmp_ln1027_3_fu_163_p2 | and_ln1027_fu_209_p2);

assign p_shl_fu_257_p3 = {{trunc_ln341_fu_253_p1}, {3'd0}};

assign select_ln1027_3_fu_177_p3 = ((icmp_ln1027_3_fu_163_p2[0:0] == 1'b1) ? add_ln840_fu_157_p2 : ap_sig_allocacmp_m_V_load);

assign select_ln1027_4_fu_227_p3 = ((or_ln1027_fu_221_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_cc_V_load);

assign select_ln1027_5_fu_235_p3 = ((and_ln1027_fu_209_p2[0:0] == 1'b1) ? add_ln840_32_fu_215_p2 : select_ln1027_fu_169_p3);

assign select_ln1027_6_fu_310_p3 = ((icmp_ln1027_3_fu_163_p2[0:0] == 1'b1) ? 8'd1 : add_ln1027_fu_304_p2);

assign select_ln1027_fu_169_p3 = ((icmp_ln1027_3_fu_163_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_bank_V_load);

assign tmp_fu_265_p3 = {{add_ln341_fu_247_p2}, {1'd0}};

assign tmp_s_fu_185_p3 = {{select_ln1027_3_fu_177_p3}, {3'd0}};

assign trunc_ln341_fu_253_p1 = add_ln341_fu_247_p2[4:0];

assign word_buffer_V_address0 = zext_ln341_3_fu_293_p1;

assign xor_ln1027_fu_197_p2 = (icmp_ln1027_3_fu_163_p2 ^ 1'd1);

assign zext_ln1027_fu_193_p1 = tmp_s_fu_185_p3;

assign zext_ln341_1_fu_273_p1 = tmp_fu_265_p3;

assign zext_ln341_2_fu_283_p1 = select_ln1027_4_fu_227_p3;

assign zext_ln341_3_fu_293_p1 = add_ln341_2_fu_287_p2;

assign zext_ln341_fu_243_p1 = select_ln1027_5_fu_235_p3;

always @ (posedge ap_clk) begin
    zext_ln341_3_reg_381[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //top_bin_conv_Pipeline_VITIS_LOOP_338_8_VITIS_LOOP_339_9_VITIS_LOOP_340_10
