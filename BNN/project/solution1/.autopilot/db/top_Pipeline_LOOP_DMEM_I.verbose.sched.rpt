

================================================================
== Vitis HLS Report for 'top_Pipeline_LOOP_DMEM_I'
================================================================
* Date:           Fri Dec 13 13:11:25 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.290 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-------+---------+
    |  Latency (cycles) |  Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max   | min |  max  |   Type  |
    +---------+---------+-----------+----------+-----+-------+---------+
    |        2|    65537|  20.000 ns|  0.655 ms|    2|  65537|       no|
    +---------+---------+-----------+----------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+-----------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  |    Trip   |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  |   Count   | Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+-----------+----------+
        |- LOOP_DMEM_I  |        0|    65535|         2|          1|          1|  0 ~ 65535|       yes|
        +---------------+---------+---------+----------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.64>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%img_idx_V = alloca i32 1"   --->   Operation 5 'alloca' 'img_idx_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%rhs_V = alloca i32 1"   --->   Operation 6 'alloca' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%i_V = alloca i32 1"   --->   Operation 7 'alloca' 'i_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%zext_ln758_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %zext_ln758"   --->   Operation 8 'read' 'zext_ln758_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%layer_type_V_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %layer_type_V"   --->   Operation 9 'read' 'layer_type_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%zext_ln751_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %zext_ln751"   --->   Operation 10 'read' 'zext_ln751_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%dmem_mode_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dmem_mode"   --->   Operation 11 'read' 'dmem_mode_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln754_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %zext_ln754"   --->   Operation 12 'read' 'zext_ln754_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%input_words_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %input_words"   --->   Operation 13 'read' 'input_words_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln751_cast = zext i3 %zext_ln751_read"   --->   Operation 14 'zext' 'zext_ln751_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln754_cast = zext i5 %zext_ln754_read"   --->   Operation 15 'zext' 'zext_ln754_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %dmem_i, void @empty_0, i32 0, i32 0, void @empty_26, i32 4294967295, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.38ns)   --->   "%store_ln0 = store i16 0, i16 %i_V"   --->   Operation 17 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 18 [1/1] (0.38ns)   --->   "%store_ln0 = store i10 0, i10 %rhs_V"   --->   Operation 18 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 19 [1/1] (0.38ns)   --->   "%store_ln0 = store i16 0, i16 %img_idx_V"   --->   Operation 19 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body"   --->   Operation 20 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i_V_4 = load i16 %i_V"   --->   Operation 21 'load' 'i_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 22 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.67ns)   --->   "%icmp_ln1027 = icmp_eq  i16 %i_V_4, i16 %input_words_read"   --->   Operation 23 'icmp' 'icmp_ln1027' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 65535, i64 0"   --->   Operation 24 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.78ns)   --->   "%add_ln840 = add i16 %i_V_4, i16 1"   --->   Operation 25 'add' 'add_ln840' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln754 = br i1 %icmp_ln1027, void %for.body.split, void %for.inc123.preheader.exitStub" [Accel.cpp:754]   --->   Operation 26 'br' 'br_ln754' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%i_V_cast = zext i16 %i_V_4"   --->   Operation 27 'zext' 'i_V_cast' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%dmem_i_addr = getelementptr i64 %dmem_i, i64 0, i64 %i_V_cast" [Accel.cpp:758]   --->   Operation 28 'getelementptr' 'dmem_i_addr' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 29 [2/2] (1.64ns)   --->   "%dmem_i_load = load i11 %dmem_i_addr" [Accel.cpp:758]   --->   Operation 29 'load' 'dmem_i_load' <Predicate = (!icmp_ln1027)> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 2048> <RAM>
ST_1 : Operation 30 [1/1] (0.34ns)   --->   "%switch_ln755 = switch i2 %layer_type_V_read, void %if.else90, i2 1, void %if.then66, i2 0, void %if.then79" [Accel.cpp:755]   --->   Operation 30 'switch' 'switch_ln755' <Predicate = (!icmp_ln1027)> <Delay = 0.34>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end102"   --->   Operation 31 'br' 'br_ln0' <Predicate = (!icmp_ln1027 & layer_type_V_read != 1)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.38ns)   --->   "%store_ln754 = store i16 %add_ln840, i16 %i_V" [Accel.cpp:754]   --->   Operation 32 'store' 'store_ln754' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 74 'ret' 'ret_ln0' <Predicate = (icmp_ln1027)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.29>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%img_idx_V_load = load i16 %img_idx_V"   --->   Operation 33 'load' 'img_idx_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%ret_V_10 = trunc i16 %img_idx_V_load"   --->   Operation 34 'trunc' 'ret_V_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%specloopname_ln752 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [Accel.cpp:752]   --->   Operation 35 'specloopname' 'specloopname_ln752' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/2] (1.64ns)   --->   "%dmem_i_load = load i11 %dmem_i_addr" [Accel.cpp:758]   --->   Operation 36 'load' 'dmem_i_load' <Predicate = true> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 2048> <RAM>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%ret_V_5 = partselect i2 @_ssdm_op_PartSelect.i2.i16.i32.i32, i16 %i_V_4, i32 10, i32 11"   --->   Operation 37 'partselect' 'ret_V_5' <Predicate = (layer_type_V_read == 0)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.43ns)   --->   "%add_ln761 = add i2 %zext_ln758_read, i2 %ret_V_5" [Accel.cpp:761]   --->   Operation 38 'add' 'add_ln761' <Predicate = (layer_type_V_read == 0)> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%ret_V_9 = trunc i16 %i_V_4"   --->   Operation 39 'trunc' 'ret_V_9' <Predicate = (layer_type_V_read == 0)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_4 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i2.i10, i2 %add_ln761, i10 %ret_V_9" [Accel.cpp:761]   --->   Operation 40 'bitconcatenate' 'tmp_4' <Predicate = (layer_type_V_read == 0)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln761 = zext i12 %tmp_4" [Accel.cpp:761]   --->   Operation 41 'zext' 'zext_ln761' <Predicate = (layer_type_V_read == 0)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%dmem_V_addr_2 = getelementptr i64 %dmem_V, i64 0, i64 %zext_ln761" [Accel.cpp:761]   --->   Operation 42 'getelementptr' 'dmem_V_addr_2' <Predicate = (layer_type_V_read == 0)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.64ns)   --->   "%store_ln761 = store i64 %dmem_i_load, i12 %dmem_V_addr_2" [Accel.cpp:761]   --->   Operation 43 'store' 'store_ln761' <Predicate = (layer_type_V_read == 0)> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln761 = br void %if.end101" [Accel.cpp:761]   --->   Operation 44 'br' 'br_ln761' <Predicate = (layer_type_V_read == 0)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%rhs_V_load = load i10 %rhs_V"   --->   Operation 45 'load' 'rhs_V_load' <Predicate = (layer_type_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10, i1 %dmem_mode_read, i1 %ret_V_10, i10 0" [Accel.cpp:758]   --->   Operation 46 'bitconcatenate' 'tmp_2' <Predicate = (layer_type_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i12 @_ssdm_op_PartSelect.i12.i16.i32.i32, i16 %img_idx_V_load, i32 1, i32 12"   --->   Operation 47 'partselect' 'trunc_ln2' <Predicate = (layer_type_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.77ns)   --->   "%r_V = shl i12 %trunc_ln2, i12 %zext_ln751_cast"   --->   Operation 48 'shl' 'r_V' <Predicate = (layer_type_V_read == 1)> <Delay = 0.77> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln1495 = zext i10 %rhs_V_load"   --->   Operation 49 'zext' 'zext_ln1495' <Predicate = (layer_type_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%ret_V_8 = add i12 %r_V, i12 %zext_ln1495"   --->   Operation 50 'add' 'ret_V_8' <Predicate = (layer_type_V_read == 1)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.37> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 51 [1/1] (0.75ns) (root node of TernaryAdder)   --->   "%add_ln758 = add i12 %tmp_2, i12 %ret_V_8" [Accel.cpp:758]   --->   Operation 51 'add' 'add_ln758' <Predicate = (layer_type_V_read == 1)> <Delay = 0.75> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.37> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln758_1 = zext i12 %add_ln758" [Accel.cpp:758]   --->   Operation 52 'zext' 'zext_ln758_1' <Predicate = (layer_type_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%dmem_V_addr_1 = getelementptr i64 %dmem_V, i64 0, i64 %zext_ln758_1" [Accel.cpp:758]   --->   Operation 53 'getelementptr' 'dmem_V_addr_1' <Predicate = (layer_type_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (1.64ns)   --->   "%store_ln758 = store i64 %dmem_i_load, i12 %dmem_V_addr_1" [Accel.cpp:758]   --->   Operation 54 'store' 'store_ln758' <Predicate = (layer_type_V_read == 1)> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln759 = br void %if.end102" [Accel.cpp:759]   --->   Operation 55 'br' 'br_ln759' <Predicate = (layer_type_V_read == 1)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%ret_V = trunc i16 %i_V_4"   --->   Operation 56 'trunc' 'ret_V' <Predicate = (layer_type_V_read != 1 & layer_type_V_read != 0)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10, i1 %dmem_mode_read, i1 %ret_V, i10 0" [Accel.cpp:763]   --->   Operation 57 'bitconcatenate' 'tmp_1' <Predicate = (layer_type_V_read != 1 & layer_type_V_read != 0)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%ret_V_1 = partselect i12 @_ssdm_op_PartSelect.i12.i16.i32.i32, i16 %i_V_4, i32 1, i32 12"   --->   Operation 58 'partselect' 'ret_V_1' <Predicate = (layer_type_V_read != 1 & layer_type_V_read != 0)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.74ns)   --->   "%add_ln763 = add i12 %tmp_1, i12 %ret_V_1" [Accel.cpp:763]   --->   Operation 59 'add' 'add_ln763' <Predicate = (layer_type_V_read != 1 & layer_type_V_read != 0)> <Delay = 0.74> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln763 = zext i12 %add_ln763" [Accel.cpp:763]   --->   Operation 60 'zext' 'zext_ln763' <Predicate = (layer_type_V_read != 1 & layer_type_V_read != 0)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%dmem_V_addr = getelementptr i64 %dmem_V, i64 0, i64 %zext_ln763" [Accel.cpp:763]   --->   Operation 61 'getelementptr' 'dmem_V_addr' <Predicate = (layer_type_V_read != 1 & layer_type_V_read != 0)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (1.64ns)   --->   "%store_ln763 = store i64 %dmem_i_load, i12 %dmem_V_addr" [Accel.cpp:763]   --->   Operation 62 'store' 'store_ln763' <Predicate = (layer_type_V_read != 1 & layer_type_V_read != 0)> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end101"   --->   Operation 63 'br' 'br_ln0' <Predicate = (layer_type_V_read != 1 & layer_type_V_read != 0)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%img_idx_V_load_1 = load i16 %img_idx_V"   --->   Operation 64 'load' 'img_idx_V_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%rhs_V_load_1 = load i10 %rhs_V"   --->   Operation 65 'load' 'rhs_V_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.72ns)   --->   "%img_off_V = add i10 %rhs_V_load_1, i10 1"   --->   Operation 66 'add' 'img_off_V' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.60ns)   --->   "%icmp_ln1019 = icmp_eq  i10 %img_off_V, i10 %zext_ln754_cast"   --->   Operation 67 'icmp' 'icmp_ln1019' <Predicate = true> <Delay = 0.60> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.78ns)   --->   "%img_idx_V_3 = add i16 %img_idx_V_load_1, i16 1"   --->   Operation 68 'add' 'img_idx_V_3' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.24ns)   --->   "%img_idx_V_4 = select i1 %icmp_ln1019, i16 %img_idx_V_3, i16 %img_idx_V_load_1" [Accel.cpp:765]   --->   Operation 69 'select' 'img_idx_V_4' <Predicate = true> <Delay = 0.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.30ns)   --->   "%img_off_V_2 = select i1 %icmp_ln1019, i10 0, i10 %img_off_V" [Accel.cpp:765]   --->   Operation 70 'select' 'img_off_V_2' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.38ns)   --->   "%store_ln754 = store i10 %img_off_V_2, i10 %rhs_V" [Accel.cpp:754]   --->   Operation 71 'store' 'store_ln754' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 72 [1/1] (0.38ns)   --->   "%store_ln754 = store i16 %img_idx_V_4, i16 %img_idx_V" [Accel.cpp:754]   --->   Operation 72 'store' 'store_ln754' <Predicate = true> <Delay = 0.38>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%br_ln754 = br void %for.body" [Accel.cpp:754]   --->   Operation 73 'br' 'br_ln754' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.65ns
The critical path consists of the following:
	'alloca' operation ('i.V') [11]  (0 ns)
	'load' operation ('i.V') on local variable 'i.V' [26]  (0 ns)
	'getelementptr' operation ('dmem_i_addr', Accel.cpp:758) [37]  (0 ns)
	'load' operation ('dmem_i_load', Accel.cpp:758) on array 'dmem_i' [38]  (1.65 ns)

 <State 2>: 3.29ns
The critical path consists of the following:
	'load' operation ('dmem_i_load', Accel.cpp:758) on array 'dmem_i' [38]  (1.65 ns)
	'store' operation ('store_ln761', Accel.cpp:761) of variable 'dmem_i_load', Accel.cpp:758 on array 'dmem_V' [47]  (1.65 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
