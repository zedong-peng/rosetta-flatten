

================================================================
== Vitis HLS Report for 'bin_dense'
================================================================
* Date:           Fri Dec 13 13:11:41 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.204 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+-----------+-----+------+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval  | Pipeline|
    |   min   |   max   |    min   |    max    | min |  max |   Type  |
    +---------+---------+----------+-----------+-----+------+---------+
    |      153|     4801|  1.530 us|  48.010 us|  153|  4801|       no|
    +---------+---------+----------+-----------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |    Loop Name   |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- LOOP_DENSE_O  |      152|     4800|   19 ~ 75|          -|          -|  8 ~ 64|        no|
        +----------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.38>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%phi_mul = alloca i32 1"   --->   Operation 10 'alloca' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%best_out_V = alloca i32 1"   --->   Operation 11 'alloca' 'best_out_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%ret = alloca i32 1"   --->   Operation 12 'alloca' 'ret' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%rhs = alloca i32 1"   --->   Operation 13 'alloca' 'rhs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%n_outputs_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %n_outputs"   --->   Operation 14 'read' 'n_outputs_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%n_inputs_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %n_inputs"   --->   Operation 15 'read' 'n_inputs_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%o_index_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %o_index"   --->   Operation 16 'read' 'o_index_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%d_o_idx_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %d_o_idx"   --->   Operation 17 'read' 'd_o_idx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%d_i_idx_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %d_i_idx"   --->   Operation 18 'read' 'd_i_idx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%layer_type_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %layer_type"   --->   Operation 19 'read' 'layer_type_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sum_V_loc = alloca i64 1"   --->   Operation 20 'alloca' 'sum_V_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%lhs = zext i16 %o_index_read"   --->   Operation 21 'zext' 'lhs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i1.i11, i1 %d_o_idx_read, i11 0" [Accel.cpp:694]   --->   Operation 22 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln694 = zext i12 %tmp" [Accel.cpp:694]   --->   Operation 23 'zext' 'zext_ln694' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%dmem_V_addr_4 = getelementptr i64 %dmem_V, i64 0, i64 %zext_ln694" [Accel.cpp:694]   --->   Operation 24 'getelementptr' 'dmem_V_addr_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln617 = zext i16 %n_inputs_read" [Accel.cpp:617]   --->   Operation 25 'zext' 'zext_ln617' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.34ns)   --->   "%cmp_i_i508 = icmp_eq  i2 %layer_type_read, i2 2"   --->   Operation 26 'icmp' 'cmp_i_i508' <Predicate = true> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln1495 = trunc i16 %o_index_read"   --->   Operation 27 'trunc' 'trunc_ln1495' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln1495_1 = trunc i16 %o_index_read"   --->   Operation 28 'trunc' 'trunc_ln1495_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.38ns)   --->   "%store_ln0 = store i16 0, i16 %rhs"   --->   Operation 29 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 30 [1/1] (0.38ns)   --->   "%store_ln0 = store i8 255, i8 %ret"   --->   Operation 30 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 31 [1/1] (0.38ns)   --->   "%store_ln0 = store i16 49152, i16 %best_out_V"   --->   Operation 31 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 32 [1/1] (0.38ns)   --->   "%store_ln0 = store i20 0, i20 %phi_mul"   --->   Operation 32 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln0 = br void %LOOP_DENSE_I"   --->   Operation 33 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.43>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%phi_mul_load = load i20 %phi_mul" [Accel.cpp:608]   --->   Operation 34 'load' 'phi_mul_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%o_V_1 = load i16 %rhs"   --->   Operation 35 'load' 'o_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.80ns)   --->   "%add_ln608 = add i20 %phi_mul_load, i20 %zext_ln617" [Accel.cpp:608]   --->   Operation 36 'add' 'add_ln608' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.67ns)   --->   "%icmp_ln608 = icmp_eq  i16 %o_V_1, i16 %n_outputs_read" [Accel.cpp:608]   --->   Operation 37 'icmp' 'icmp_ln608' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.78ns)   --->   "%o_V = add i16 %o_V_1, i16 1"   --->   Operation 38 'add' 'o_V' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%br_ln608 = br i1 %icmp_ln608, void %LOOP_DENSE_I.split, void %for.end148.loopexit" [Accel.cpp:608]   --->   Operation 39 'br' 'br_ln608' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln1027 = trunc i16 %o_V_1"   --->   Operation 40 'trunc' 'trunc_ln1027' <Predicate = (!icmp_ln608)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln186 = zext i16 %o_V_1"   --->   Operation 41 'zext' 'zext_ln186' <Predicate = (!icmp_ln608)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln1495_2 = trunc i16 %o_V_1"   --->   Operation 42 'trunc' 'trunc_ln1495_2' <Predicate = (!icmp_ln608 & cmp_i_i508)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.78ns)   --->   "%ret_V = add i17 %zext_ln186, i17 %lhs"   --->   Operation 43 'add' 'ret_V' <Predicate = (!icmp_ln608)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.70ns)   --->   "%add_ln1495_3 = add i7 %trunc_ln1027, i7 %trunc_ln1495_1"   --->   Operation 44 'add' 'add_ln1495_3' <Predicate = (!icmp_ln608)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%o_addr_V = bitselect i1 @_ssdm_op_BitSelect.i1.i7.i32, i7 %add_ln1495_3, i32 6"   --->   Operation 45 'bitselect' 'o_addr_V' <Predicate = (!icmp_ln608)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.70ns)   --->   "%o_offset_V = add i6 %trunc_ln1495_2, i6 %trunc_ln1495"   --->   Operation 46 'add' 'o_offset_V' <Predicate = (!icmp_ln608 & cmp_i_i508)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i10 @_ssdm_op_PartSelect.i10.i17.i32.i32, i17 %ret_V, i32 7, i32 16"   --->   Operation 47 'partselect' 'lshr_ln' <Predicate = (!icmp_ln608)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_35 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10, i1 %d_o_idx_read, i1 %o_addr_V, i10 %lshr_ln" [Accel.cpp:612]   --->   Operation 48 'bitconcatenate' 'tmp_35' <Predicate = (!icmp_ln608)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln612 = zext i12 %tmp_35" [Accel.cpp:612]   --->   Operation 49 'zext' 'zext_ln612' <Predicate = (!icmp_ln608)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%dmem_V_addr = getelementptr i64 %dmem_V, i64 0, i64 %zext_ln612" [Accel.cpp:612]   --->   Operation 50 'getelementptr' 'dmem_V_addr' <Predicate = (!icmp_ln608)> <Delay = 0.00>
ST_2 : Operation 51 [2/2] (1.64ns)   --->   "%o_word_V_3 = load i12 %dmem_V_addr" [Accel.cpp:612]   --->   Operation 51 'load' 'o_word_V_3' <Predicate = (!icmp_ln608)> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 52 [1/1] (0.38ns)   --->   "%store_ln608 = store i16 %o_V, i16 %rhs" [Accel.cpp:608]   --->   Operation 52 'store' 'store_ln608' <Predicate = (!icmp_ln608)> <Delay = 0.38>
ST_2 : Operation 53 [1/1] (0.38ns)   --->   "%store_ln608 = store i20 %add_ln608, i20 %phi_mul" [Accel.cpp:608]   --->   Operation 53 'store' 'store_ln608' <Predicate = (!icmp_ln608)> <Delay = 0.38>
ST_2 : Operation 54 [1/1] (0.34ns)   --->   "%icmp_ln1019 = icmp_eq  i2 %layer_type_read, i2 3"   --->   Operation 54 'icmp' 'icmp_ln1019' <Predicate = (icmp_ln608)> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln690 = br i1 %icmp_ln1019, void %if.end161, void %if.then150" [Accel.cpp:690]   --->   Operation 55 'br' 'br_ln690' <Predicate = (icmp_ln608)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%ret_load_1 = load i8 %ret"   --->   Operation 56 'load' 'ret_load_1' <Predicate = (icmp_ln608 & icmp_ln1019)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%p_Result_1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i1.i8, i1 0, i8 %ret_load_1"   --->   Operation 57 'bitconcatenate' 'p_Result_1' <Predicate = (icmp_ln608 & icmp_ln1019)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln345 = zext i9 %p_Result_1"   --->   Operation 58 'zext' 'zext_ln345' <Predicate = (icmp_ln608 & icmp_ln1019)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (1.64ns)   --->   "%store_ln694 = store i64 %zext_ln345, i12 %dmem_V_addr_4" [Accel.cpp:694]   --->   Operation 59 'store' 'store_ln694' <Predicate = (icmp_ln608 & icmp_ln1019)> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%br_ln695 = br void %if.end161" [Accel.cpp:695]   --->   Operation 60 'br' 'br_ln695' <Predicate = (icmp_ln608 & icmp_ln1019)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%ret_ln696 = ret" [Accel.cpp:696]   --->   Operation 61 'ret' 'ret_ln696' <Predicate = (icmp_ln608)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.64>
ST_3 : Operation 62 [1/2] (1.64ns)   --->   "%o_word_V_3 = load i12 %dmem_V_addr" [Accel.cpp:612]   --->   Operation 62 'load' 'o_word_V_3' <Predicate = true> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>

State 4 <SV = 3> <Delay = 4.54>
ST_4 : Operation 63 [2/2] (4.54ns)   --->   "%call_ln608 = call void @bin_dense_Pipeline_LOOP_DENSE_I, i16 %n_inputs_read, i20 %phi_mul_load, i1 %d_i_idx_read, i16 %sum_V_loc, i64 %dmem_V, i64 %wt_mem_V" [Accel.cpp:608]   --->   Operation 63 'call' 'call_ln608' <Predicate = true> <Delay = 4.54> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 0.71>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%prediction_V = trunc i16 %o_V_1"   --->   Operation 64 'trunc' 'prediction_V' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/2] (0.00ns)   --->   "%call_ln608 = call void @bin_dense_Pipeline_LOOP_DENSE_I, i16 %n_inputs_read, i20 %phi_mul_load, i1 %d_i_idx_read, i16 %sum_V_loc, i64 %dmem_V, i64 %wt_mem_V" [Accel.cpp:608]   --->   Operation 65 'call' 'call_ln608' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%ret_V_s = partselect i6 @_ssdm_op_PartSelect.i6.i16.i32.i32, i16 %o_V_1, i32 2, i32 7"   --->   Operation 66 'partselect' 'ret_V_s' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln541 = zext i6 %ret_V_s"   --->   Operation 67 'zext' 'zext_ln541' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%kh_mem_V_addr = getelementptr i64 %kh_mem_V, i64 0, i64 %zext_ln541" [Accel.cpp:649]   --->   Operation 68 'getelementptr' 'kh_mem_V_addr' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_5 : Operation 69 [2/2] (0.71ns)   --->   "%kh_word_V = load i6 %kh_mem_V_addr" [Accel.cpp:649]   --->   Operation 69 'load' 'kh_word_V' <Predicate = (cmp_i_i508)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 64> <RAM>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%kh_off_V = trunc i16 %o_V_1"   --->   Operation 70 'trunc' 'kh_off_V' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%kh_off_V_1 = trunc i16 %o_V_1"   --->   Operation 71 'trunc' 'kh_off_V_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%ret_V_1 = partselect i6 @_ssdm_op_PartSelect.i6.i16.i32.i32, i16 %o_V_1, i32 1, i32 6"   --->   Operation 72 'partselect' 'ret_V_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln541_1 = zext i6 %ret_V_1"   --->   Operation 73 'zext' 'zext_ln541_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%kh_mem_V_addr_1 = getelementptr i64 %kh_mem_V, i64 0, i64 %zext_ln541_1" [Accel.cpp:665]   --->   Operation 74 'getelementptr' 'kh_mem_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 75 [2/2] (0.71ns)   --->   "%kh_word_V_2 = load i6 %kh_mem_V_addr_1" [Accel.cpp:665]   --->   Operation 75 'load' 'kh_word_V_2' <Predicate = true> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 64> <RAM>
ST_5 : Operation 76 [1/1] (0.67ns)   --->   "%icmp_ln1649 = icmp_ne  i16 %o_V_1, i16 0"   --->   Operation 76 'icmp' 'icmp_ln1649' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 3.93>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%sum_V_loc_load = load i16 %sum_V_loc"   --->   Operation 77 'load' 'sum_V_loc_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 78 [1/2] (0.71ns)   --->   "%kh_word_V = load i6 %kh_mem_V_addr" [Accel.cpp:649]   --->   Operation 78 'load' 'kh_word_V' <Predicate = (cmp_i_i508)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 64> <RAM>
ST_6 : Operation 79 [1/2] (0.71ns)   --->   "%kh_word_V_2 = load i6 %kh_mem_V_addr_1" [Accel.cpp:665]   --->   Operation 79 'load' 'kh_word_V_2' <Predicate = true> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 64> <RAM>
ST_6 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node select_ln653_1)   --->   "%nc_V = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %kh_word_V, i32 48, i32 63"   --->   Operation 80 'partselect' 'nc_V' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node select_ln653_1)   --->   "%nc_V_9 = trunc i64 %kh_word_V"   --->   Operation 81 'trunc' 'nc_V_9' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node nc_V_12)   --->   "%nc_V_10 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %kh_word_V, i32 16, i32 31"   --->   Operation 82 'partselect' 'nc_V_10' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node nc_V_12)   --->   "%nc_V_11 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %kh_word_V, i32 32, i32 47"   --->   Operation 83 'partselect' 'nc_V_11' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%ki_V = trunc i64 %kh_word_V_2"   --->   Operation 84 'trunc' 'ki_V' <Predicate = (!kh_off_V_1)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%ki_V_1 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %kh_word_V_2, i32 32, i32 47"   --->   Operation 85 'partselect' 'ki_V_1' <Predicate = (kh_off_V_1)> <Delay = 0.00>
ST_6 : Operation 86 [1/1] (0.34ns)   --->   "%icmp_ln653 = icmp_eq  i2 %kh_off_V, i2 0" [Accel.cpp:653]   --->   Operation 86 'icmp' 'icmp_ln653' <Predicate = (cmp_i_i508)> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (0.34ns)   --->   "%icmp_ln653_1 = icmp_eq  i2 %kh_off_V, i2 1" [Accel.cpp:653]   --->   Operation 87 'icmp' 'icmp_ln653_1' <Predicate = (cmp_i_i508)> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 88 [1/1] (0.34ns)   --->   "%icmp_ln653_2 = icmp_eq  i2 %kh_off_V, i2 2" [Accel.cpp:653]   --->   Operation 88 'icmp' 'icmp_ln653_2' <Predicate = (cmp_i_i508)> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node nc_V_12)   --->   "%select_ln653 = select i1 %icmp_ln653_2, i16 %nc_V_11, i16 %nc_V_10" [Accel.cpp:653]   --->   Operation 89 'select' 'select_ln653' <Predicate = (cmp_i_i508)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node nc_V_12)   --->   "%or_ln653 = or i1 %icmp_ln653_2, i1 %icmp_ln653_1" [Accel.cpp:653]   --->   Operation 90 'or' 'or_ln653' <Predicate = (cmp_i_i508)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 91 [1/1] (0.24ns) (out node of the LUT)   --->   "%select_ln653_1 = select i1 %icmp_ln653, i16 %nc_V_9, i16 %nc_V" [Accel.cpp:653]   --->   Operation 91 'select' 'select_ln653_1' <Predicate = (cmp_i_i508)> <Delay = 0.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 92 [1/1] (0.24ns) (out node of the LUT)   --->   "%nc_V_12 = select i1 %or_ln653, i16 %select_ln653, i16 %select_ln653_1" [Accel.cpp:653]   --->   Operation 92 'select' 'nc_V_12' <Predicate = (cmp_i_i508)> <Delay = 0.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln552 = zext i6 %o_offset_V"   --->   Operation 93 'zext' 'zext_ln552' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (0.67ns) (out node of the LUT)   --->   "%icmp_ln804 = icmp_slt  i16 %sum_V_loc_load, i16 %nc_V_12"   --->   Operation 94 'icmp' 'icmp_ln804' <Predicate = (cmp_i_i508)> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "%p_Result_s = bitset i64 @_ssdm_op_BitSet.i64.i64.i32.i1, i64 %o_word_V_3, i32 %zext_ln552, i1 %icmp_ln804"   --->   Operation 95 'bitset' 'p_Result_s' <Predicate = (cmp_i_i508)> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (0.24ns)   --->   "%ki_V_2 = select i1 %kh_off_V_1, i16 %ki_V_1, i16 %ki_V"   --->   Operation 96 'select' 'ki_V_2' <Predicate = true> <Delay = 0.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "%trunc_ln838 = trunc i16 %sum_V_loc_load"   --->   Operation 97 'trunc' 'trunc_ln838' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%r_V = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i10.i10, i10 %trunc_ln838, i10 0"   --->   Operation 98 'bitconcatenate' 'r_V' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%sext_ln837 = sext i20 %r_V"   --->   Operation 99 'sext' 'sext_ln837' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.00ns)   --->   "%sext_ln837_1 = sext i16 %ki_V_2"   --->   Operation 100 'sext' 'sext_ln837_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 101 [3/3] (0.99ns) (grouped into DSP with root node ret_V_14)   --->   "%mul_ln837 = mul i34 %sext_ln837, i34 %sext_ln837_1"   --->   Operation 101 'mul' 'mul_ln837' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_s = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %kh_word_V_2, i32 48, i32 63"   --->   Operation 102 'partselect' 'tmp_s' <Predicate = (kh_off_V_1)> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_117 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %kh_word_V_2, i32 16, i32 31"   --->   Operation 103 'partselect' 'tmp_117' <Predicate = (!kh_off_V_1)> <Delay = 0.00>
ST_6 : Operation 104 [1/1] (0.24ns)   --->   "%select_ln1019 = select i1 %kh_off_V_1, i16 %tmp_s, i16 %tmp_117"   --->   Operation 104 'select' 'select_ln1019' <Predicate = true> <Delay = 0.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 105 [1/1] (0.41ns)   --->   "%o_word_V_1 = select i1 %cmp_i_i508, i64 %p_Result_s, i64 %o_word_V_3"   --->   Operation 105 'select' 'o_word_V_1' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 106 [1/1] (1.64ns)   --->   "%store_ln686 = store i64 %o_word_V_1, i12 %dmem_V_addr" [Accel.cpp:686]   --->   Operation 106 'store' 'store_ln686' <Predicate = true> <Delay = 1.64> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.64> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>

State 7 <SV = 6> <Delay = 0.99>
ST_7 : Operation 107 [2/3] (0.99ns) (grouped into DSP with root node ret_V_14)   --->   "%mul_ln837 = mul i34 %sext_ln837, i34 %sext_ln837_1"   --->   Operation 107 'mul' 'mul_ln837' <Predicate = true> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 0.64>
ST_8 : Operation 108 [1/3] (0.00ns) (grouped into DSP with root node ret_V_14)   --->   "%mul_ln837 = mul i34 %sext_ln837, i34 %sext_ln837_1"   --->   Operation 108 'mul' 'mul_ln837' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 109 [1/1] (0.00ns)   --->   "%rhs_2 = bitconcatenate i28 @_ssdm_op_BitConcatenate.i28.i16.i12, i16 %select_ln1019, i12 0"   --->   Operation 109 'bitconcatenate' 'rhs_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%sext_ln1347 = sext i28 %rhs_2"   --->   Operation 110 'sext' 'sext_ln1347' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 111 [2/2] (0.64ns) (root node of the DSP)   --->   "%ret_V_14 = add i34 %sext_ln1347, i34 %mul_ln837"   --->   Operation 111 'add' 'ret_V_14' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 9 <SV = 8> <Delay = 2.20>
ST_9 : Operation 112 [1/1] (0.00ns)   --->   "%best_out_V_load = load i16 %best_out_V"   --->   Operation 112 'load' 'best_out_V_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 113 [1/1] (0.00ns)   --->   "%ret_load = load i8 %ret"   --->   Operation 113 'load' 'ret_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 114 [1/1] (0.00ns)   --->   "%speclooptripcount_ln609 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 8, i64 64, i64 36" [Accel.cpp:609]   --->   Operation 114 'speclooptripcount' 'speclooptripcount_ln609' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 115 [1/1] (0.00ns)   --->   "%specloopname_ln602 = specloopname void @_ssdm_op_SpecLoopName, void @empty_24" [Accel.cpp:602]   --->   Operation 115 'specloopname' 'specloopname_ln602' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 116 [1/2] (0.64ns) (root node of the DSP)   --->   "%ret_V_14 = add i34 %sext_ln1347, i34 %mul_ln837"   --->   Operation 116 'add' 'ret_V_14' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 117 [1/1] (0.00ns)   --->   "%out_V = partselect i20 @_ssdm_op_PartSelect.i20.i34.i32.i32, i34 %ret_V_14, i32 14, i32 33"   --->   Operation 117 'partselect' 'out_V' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 118 [1/1] (0.00ns)   --->   "%sext_ln837_2 = sext i20 %out_V"   --->   Operation 118 'sext' 'sext_ln837_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 119 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i22 @_ssdm_op_BitConcatenate.i22.i16.i6, i16 %best_out_V_load, i6 0"   --->   Operation 119 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 120 [1/1] (0.00ns)   --->   "%best_out_V_1 = partselect i14 @_ssdm_op_PartSelect.i14.i34.i32.i32, i34 %ret_V_14, i32 20, i32 33"   --->   Operation 120 'partselect' 'best_out_V_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 121 [1/1] (0.00ns)   --->   "%sext_ln818 = sext i14 %best_out_V_1"   --->   Operation 121 'sext' 'sext_ln818' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 122 [1/1] (0.74ns)   --->   "%icmp_ln1649_1 = icmp_slt  i22 %shl_ln1, i22 %sext_ln837_2"   --->   Operation 122 'icmp' 'icmp_ln1649_1' <Predicate = true> <Delay = 0.74> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node or_ln1649)   --->   "%xor_ln1649 = xor i1 %icmp_ln1649_1, i1 1"   --->   Operation 123 'xor' 'xor_ln1649' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node or_ln1649)   --->   "%and_ln1649 = and i1 %xor_ln1649, i1 %icmp_ln1649"   --->   Operation 124 'and' 'and_ln1649' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 125 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln1649 = or i1 %cmp_i_i508, i1 %and_ln1649"   --->   Operation 125 'or' 'or_ln1649' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 126 [1/1] (0.24ns)   --->   "%best_out_V_2 = select i1 %or_ln1649, i16 %best_out_V_load, i16 %sext_ln818"   --->   Operation 126 'select' 'best_out_V_2' <Predicate = true> <Delay = 0.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (0.30ns)   --->   "%prediction_V_1 = select i1 %or_ln1649, i8 %ret_load, i8 %prediction_V"   --->   Operation 127 'select' 'prediction_V_1' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 128 [1/1] (0.38ns)   --->   "%store_ln608 = store i8 %prediction_V_1, i8 %ret" [Accel.cpp:608]   --->   Operation 128 'store' 'store_ln608' <Predicate = true> <Delay = 0.38>
ST_9 : Operation 129 [1/1] (0.38ns)   --->   "%store_ln608 = store i16 %best_out_V_2, i16 %best_out_V" [Accel.cpp:608]   --->   Operation 129 'store' 'store_ln608' <Predicate = true> <Delay = 0.38>
ST_9 : Operation 130 [1/1] (0.00ns)   --->   "%br_ln608 = br void %LOOP_DENSE_I" [Accel.cpp:608]   --->   Operation 130 'br' 'br_ln608' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.387ns
The critical path consists of the following:
	'alloca' operation ('rhs') [13]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'rhs' [29]  (0.387 ns)

 <State 2>: 2.43ns
The critical path consists of the following:
	'load' operation ('o.V') on local variable 'rhs' [36]  (0 ns)
	'add' operation ('ret.V') [50]  (0.785 ns)
	'getelementptr' operation ('dmem_V_addr', Accel.cpp:612) [57]  (0 ns)
	'load' operation ('o_word.V', Accel.cpp:612) on array 'dmem_V' [58]  (1.65 ns)

 <State 3>: 1.65ns
The critical path consists of the following:
	'load' operation ('o_word.V', Accel.cpp:612) on array 'dmem_V' [58]  (1.65 ns)

 <State 4>: 4.55ns
The critical path consists of the following:
	'call' operation ('call_ln608', Accel.cpp:608) to 'bin_dense_Pipeline_LOOP_DENSE_I' [59]  (4.55 ns)

 <State 5>: 0.714ns
The critical path consists of the following:
	'getelementptr' operation ('kh_mem_V_addr', Accel.cpp:649) [63]  (0 ns)
	'load' operation ('kh_word.V', Accel.cpp:649) on array 'kh_mem_V' [64]  (0.714 ns)

 <State 6>: 3.93ns
The critical path consists of the following:
	'load' operation ('kh_word.V', Accel.cpp:649) on array 'kh_mem_V' [64]  (0.714 ns)
	'select' operation ('select_ln653_1', Accel.cpp:653) [82]  (0.243 ns)
	'select' operation ('nc.V', Accel.cpp:653) [83]  (0.243 ns)
	'icmp' operation ('icmp_ln804') [85]  (0.676 ns)
	'select' operation ('o_word.V') [111]  (0.411 ns)
	'store' operation ('store_ln686', Accel.cpp:686) of variable 'o_word.V' on array 'dmem_V' [112]  (1.65 ns)

 <State 7>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[98] ('mul_ln837') [92]  (0.996 ns)

 <State 8>: 0.645ns
The critical path consists of the following:
	'mul' operation of DSP[98] ('mul_ln837') [92]  (0 ns)
	'add' operation of DSP[98] ('ret.V') [98]  (0.645 ns)

 <State 9>: 2.2ns
The critical path consists of the following:
	'add' operation of DSP[98] ('ret.V') [98]  (0.645 ns)
	'icmp' operation ('icmp_ln1649_1') [105]  (0.745 ns)
	'xor' operation ('xor_ln1649') [106]  (0 ns)
	'and' operation ('and_ln1649') [107]  (0 ns)
	'or' operation ('or_ln1649') [108]  (0.122 ns)
	'select' operation ('prediction.V') [110]  (0.303 ns)
	'store' operation ('store_ln608', Accel.cpp:608) of variable 'prediction.V' on local variable 'ret' [114]  (0.387 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
