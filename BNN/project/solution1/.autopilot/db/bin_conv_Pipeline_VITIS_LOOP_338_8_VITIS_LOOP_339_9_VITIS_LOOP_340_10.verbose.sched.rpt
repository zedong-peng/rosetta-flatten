

================================================================
== Vitis HLS Report for 'bin_conv_Pipeline_VITIS_LOOP_338_8_VITIS_LOOP_339_9_VITIS_LOOP_340_10'
================================================================
* Date:           Fri Dec 13 13:11:30 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.130 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      162|      162|  1.620 us|  1.620 us|  162|  162|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                       |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                       Loop Name                       |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_338_8_VITIS_LOOP_339_9_VITIS_LOOP_340_10  |      160|      160|         2|          1|          1|   160|       yes|
        +-------------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.13>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%cc_V = alloca i32 1"   --->   Operation 5 'alloca' 'cc_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%bank_V = alloca i32 1"   --->   Operation 6 'alloca' 'bank_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 7 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%m_V = alloca i32 1"   --->   Operation 8 'alloca' 'm_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten13 = alloca i32 1"   --->   Operation 9 'alloca' 'indvar_flatten13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.38ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten13"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 11 [1/1] (0.38ns)   --->   "%store_ln0 = store i2 0, i2 %m_V"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 12 [1/1] (0.38ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 13 [1/1] (0.38ns)   --->   "%store_ln0 = store i4 0, i4 %bank_V"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 14 [1/1] (0.38ns)   --->   "%store_ln0 = store i4 0, i4 %cc_V"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc394"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten13_load = load i8 %indvar_flatten13"   --->   Operation 16 'load' 'indvar_flatten13_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 17 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.58ns)   --->   "%icmp_ln1027 = icmp_eq  i8 %indvar_flatten13_load, i8 160"   --->   Operation 18 'icmp' 'icmp_ln1027' <Predicate = true> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.70ns)   --->   "%add_ln1027_1 = add i8 %indvar_flatten13_load, i8 1"   --->   Operation 19 'add' 'add_ln1027_1' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln1027 = br i1 %icmp_ln1027, void %for.inc400, void %VITIS_LOOP_348_11.exitStub"   --->   Operation 20 'br' 'br_ln1027' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%cc_V_load = load i4 %cc_V"   --->   Operation 21 'load' 'cc_V_load' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%bank_V_load = load i4 %bank_V"   --->   Operation 22 'load' 'bank_V_load' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i8 %indvar_flatten"   --->   Operation 23 'load' 'indvar_flatten_load' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%m_V_load = load i2 %m_V"   --->   Operation 24 'load' 'm_V_load' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.43ns)   --->   "%add_ln840 = add i2 %m_V_load, i2 1"   --->   Operation 25 'add' 'add_ln840' <Predicate = (!icmp_ln1027)> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.58ns)   --->   "%icmp_ln1027_3 = icmp_eq  i8 %indvar_flatten_load, i8 80"   --->   Operation 26 'icmp' 'icmp_ln1027_3' <Predicate = (!icmp_ln1027)> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.35ns)   --->   "%select_ln1027 = select i1 %icmp_ln1027_3, i4 0, i4 %bank_V_load"   --->   Operation 27 'select' 'select_ln1027' <Predicate = (!icmp_ln1027)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.27ns)   --->   "%select_ln1027_3 = select i1 %icmp_ln1027_3, i2 %add_ln840, i2 %m_V_load"   --->   Operation 28 'select' 'select_ln1027_3' <Predicate = (!icmp_ln1027)> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %select_ln1027_3, i3 0" [Accel.cpp:341]   --->   Operation 29 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln1027 = zext i5 %tmp_s"   --->   Operation 30 'zext' 'zext_ln1027' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node and_ln1027)   --->   "%xor_ln1027 = xor i1 %icmp_ln1027_3, i1 1"   --->   Operation 31 'xor' 'xor_ln1027' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.65ns)   --->   "%icmp_ln1027_4 = icmp_eq  i4 %cc_V_load, i4 10"   --->   Operation 32 'icmp' 'icmp_ln1027_4' <Predicate = (!icmp_ln1027)> <Delay = 0.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.12ns) (out node of the LUT)   --->   "%and_ln1027 = and i1 %icmp_ln1027_4, i1 %xor_ln1027"   --->   Operation 33 'and' 'and_ln1027' <Predicate = (!icmp_ln1027)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.70ns)   --->   "%add_ln840_32 = add i4 %select_ln1027, i4 1"   --->   Operation 34 'add' 'add_ln840_32' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node select_ln1027_4)   --->   "%or_ln1027 = or i1 %and_ln1027, i1 %icmp_ln1027_3"   --->   Operation 35 'or' 'or_ln1027' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.35ns) (out node of the LUT)   --->   "%select_ln1027_4 = select i1 %or_ln1027, i4 0, i4 %cc_V_load"   --->   Operation 36 'select' 'select_ln1027_4' <Predicate = (!icmp_ln1027)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.35ns)   --->   "%select_ln1027_5 = select i1 %and_ln1027, i4 %add_ln840_32, i4 %select_ln1027"   --->   Operation 37 'select' 'select_ln1027_5' <Predicate = (!icmp_ln1027)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln341 = zext i4 %select_ln1027_5" [Accel.cpp:341]   --->   Operation 38 'zext' 'zext_ln341' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.70ns)   --->   "%add_ln341 = add i6 %zext_ln1027, i6 %zext_ln341" [Accel.cpp:341]   --->   Operation 39 'add' 'add_ln341' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln341 = trunc i6 %add_ln341" [Accel.cpp:341]   --->   Operation 40 'trunc' 'trunc_ln341' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %trunc_ln341, i3 0" [Accel.cpp:341]   --->   Operation 41 'bitconcatenate' 'p_shl' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i6.i1, i6 %add_ln341, i1 0" [Accel.cpp:341]   --->   Operation 42 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln341_1 = zext i7 %tmp" [Accel.cpp:341]   --->   Operation 43 'zext' 'zext_ln341_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln341_1 = add i8 %p_shl, i8 %zext_ln341_1" [Accel.cpp:341]   --->   Operation 44 'add' 'add_ln341_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln341_2 = zext i4 %select_ln1027_4" [Accel.cpp:341]   --->   Operation 45 'zext' 'zext_ln341_2' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.83ns) (root node of TernaryAdder)   --->   "%add_ln341_2 = add i8 %add_ln341_1, i8 %zext_ln341_2" [Accel.cpp:341]   --->   Operation 46 'add' 'add_ln341_2' <Predicate = (!icmp_ln1027)> <Delay = 0.83> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.41> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln341_3 = zext i8 %add_ln341_2" [Accel.cpp:341]   --->   Operation 47 'zext' 'zext_ln341_3' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%word_buffer_V_addr = getelementptr i2 %word_buffer_V, i64 0, i64 %zext_ln341_3" [Accel.cpp:341]   --->   Operation 48 'getelementptr' 'word_buffer_V_addr' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 49 [2/2] (0.59ns)   --->   "%word_buffer_V_load = load i8 %word_buffer_V_addr" [Accel.cpp:341]   --->   Operation 49 'load' 'word_buffer_V_load' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_1 : Operation 50 [1/1] (0.70ns)   --->   "%add_ln840_33 = add i4 %select_ln1027_4, i4 1"   --->   Operation 50 'add' 'add_ln840_33' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.70ns)   --->   "%add_ln1027 = add i8 %indvar_flatten_load, i8 1"   --->   Operation 51 'add' 'add_ln1027' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.30ns)   --->   "%select_ln1027_6 = select i1 %icmp_ln1027_3, i8 1, i8 %add_ln1027"   --->   Operation 52 'select' 'select_ln1027_6' <Predicate = (!icmp_ln1027)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.38ns)   --->   "%store_ln340 = store i8 %add_ln1027_1, i8 %indvar_flatten13" [Accel.cpp:340]   --->   Operation 53 'store' 'store_ln340' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 54 [1/1] (0.38ns)   --->   "%store_ln340 = store i2 %select_ln1027_3, i2 %m_V" [Accel.cpp:340]   --->   Operation 54 'store' 'store_ln340' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 55 [1/1] (0.38ns)   --->   "%store_ln340 = store i8 %select_ln1027_6, i8 %indvar_flatten" [Accel.cpp:340]   --->   Operation 55 'store' 'store_ln340' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 56 [1/1] (0.38ns)   --->   "%store_ln340 = store i4 %select_ln1027_5, i4 %bank_V" [Accel.cpp:340]   --->   Operation 56 'store' 'store_ln340' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 57 [1/1] (0.38ns)   --->   "%store_ln340 = store i4 %add_ln840_33, i4 %cc_V" [Accel.cpp:340]   --->   Operation 57 'store' 'store_ln340' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 68 'ret' 'ret_ln0' <Predicate = (icmp_ln1027)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.18>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_338_8_VITIS_LOOP_339_9_VITIS_LOOP_340_10_str"   --->   Operation 58 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 160, i64 160, i64 160"   --->   Operation 59 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 60 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_339_9_VITIS_LOOP_340_10_str"   --->   Operation 61 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 62 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%old_word_buffer_V_addr = getelementptr i2 %old_word_buffer_V, i64 0, i64 %zext_ln341_3" [Accel.cpp:341]   --->   Operation 63 'getelementptr' 'old_word_buffer_V_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%specloopname_ln340 = specloopname void @_ssdm_op_SpecLoopName, void @empty_28" [Accel.cpp:340]   --->   Operation 64 'specloopname' 'specloopname_ln340' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/2] (0.59ns)   --->   "%word_buffer_V_load = load i8 %word_buffer_V_addr" [Accel.cpp:341]   --->   Operation 65 'load' 'word_buffer_V_load' <Predicate = true> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 66 [1/1] (0.59ns)   --->   "%store_ln341 = store i2 %word_buffer_V_load, i8 %old_word_buffer_V_addr" [Accel.cpp:341]   --->   Operation 66 'store' 'store_ln341' <Predicate = true> <Delay = 0.59> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%br_ln340 = br void %for.inc394" [Accel.cpp:340]   --->   Operation 67 'br' 'br_ln340' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.13ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten') [5]  (0 ns)
	'load' operation ('indvar_flatten_load') on local variable 'indvar_flatten' [23]  (0 ns)
	'icmp' operation ('icmp_ln1027_3') [28]  (0.581 ns)
	'select' operation ('select_ln1027') [29]  (0.351 ns)
	'add' operation ('add_ln840_32') [37]  (0.708 ns)
	'select' operation ('select_ln1027_5') [41]  (0.351 ns)
	'add' operation ('add_ln341', Accel.cpp:341) [43]  (0.707 ns)
	'add' operation ('add_ln341_1', Accel.cpp:341) [48]  (0 ns)
	'add' operation ('add_ln341_2', Accel.cpp:341) [51]  (0.838 ns)
	'getelementptr' operation ('word_buffer_V_addr', Accel.cpp:341) [53]  (0 ns)
	'load' operation ('word_buffer_V_load', Accel.cpp:341) on array 'word_buffer_V' [56]  (0.594 ns)

 <State 2>: 1.19ns
The critical path consists of the following:
	'load' operation ('word_buffer_V_load', Accel.cpp:341) on array 'word_buffer_V' [56]  (0.594 ns)
	'store' operation ('store_ln341', Accel.cpp:341) of variable 'word_buffer_V_load', Accel.cpp:341 on array 'old_word_buffer_V' [57]  (0.594 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
