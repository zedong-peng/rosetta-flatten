

================================================================
== Vitis HLS Report for 'top'
================================================================
* Date:           Fri Dec 13 13:11:42 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.204 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+--------------+-----------+-------------+------+--------------+---------+
    |    Latency (cycles)    |    Latency (absolute)   |       Interval      | Pipeline|
    |   min   |      max     |    min    |     max     |  min |      max     |   Type  |
    +---------+--------------+-----------+-------------+------+--------------+---------+
    |     4691|  218677843362|  46.910 us|  2.2e+03 sec|  4692|  218677843363|       no|
    +---------+--------------+-----------+-------------+------+--------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+---------+--------------+------------------+-----------+-----------+-----------+----------+
        |                  |    Latency (cycles)    |     Iteration    |  Initiation Interval  |    Trip   |          |
        |     Loop Name    |   min   |      max     |      Latency     |  achieved |   target  |   Count   | Pipelined|
        +------------------+---------+--------------+------------------+-----------+-----------+-----------+----------+
        |- LOOP_IMG_BATCH  |        0|  218677712280|  182589 ~ 3336808|          -|          -|  0 ~ 65535|        no|
        +------------------+---------+--------------+------------------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 7 9 3 
3 --> 4 8 
4 --> 5 
5 --> 6 
6 --> 3 
7 --> 8 
8 --> 10 
9 --> 8 
10 --> 11 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%norm_mode_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %norm_mode" [Accel.cpp:701]   --->   Operation 12 'read' 'norm_mode_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%width_mode_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %width_mode" [Accel.cpp:701]   --->   Operation 13 'read' 'width_mode_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%dmem_mode_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dmem_mode" [Accel.cpp:701]   --->   Operation 14 'read' 'dmem_mode_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%layer_mode_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %layer_mode" [Accel.cpp:701]   --->   Operation 15 'read' 'layer_mode_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%output_words_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %output_words" [Accel.cpp:701]   --->   Operation 16 'read' 'output_words_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%input_words_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %input_words" [Accel.cpp:701]   --->   Operation 17 'read' 'input_words_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%n_outputs_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %n_outputs" [Accel.cpp:701]   --->   Operation 18 'read' 'n_outputs_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%n_inputs_read = read i16 @_ssdm_op_Read.ap_auto.i16, i16 %n_inputs" [Accel.cpp:701]   --->   Operation 19 'read' 'n_inputs_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln701 = trunc i3 %layer_mode_read" [Accel.cpp:701]   --->   Operation 20 'trunc' 'trunc_ln701' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%spectopmodule_ln701 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_14" [Accel.cpp:701]   --->   Operation 21 'spectopmodule' 'spectopmodule_ln701' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %wt_i, void @empty_0, i32 0, i32 0, void @empty_26, i32 4294967295, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 22 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %wt_i"   --->   Operation 23 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %kh_i, void @empty_0, i32 0, i32 0, void @empty_26, i32 4294967295, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 24 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %kh_i"   --->   Operation 25 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %dmem_i, void @empty_0, i32 0, i32 0, void @empty_26, i32 4294967295, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 26 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %dmem_i"   --->   Operation 27 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %dmem_o, void @empty_0, i32 0, i32 0, void @empty_26, i32 4294967295, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 28 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %dmem_o"   --->   Operation 29 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %n_inputs"   --->   Operation 30 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %n_inputs, void @empty_3, i32 0, i32 0, void @empty_26, i32 0, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 31 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %n_outputs"   --->   Operation 32 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %n_outputs, void @empty_3, i32 0, i32 0, void @empty_26, i32 0, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %input_words"   --->   Operation 34 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %input_words, void @empty_3, i32 0, i32 0, void @empty_26, i32 0, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %output_words"   --->   Operation 36 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %output_words, void @empty_3, i32 0, i32 0, void @empty_26, i32 0, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i3 %layer_mode"   --->   Operation 38 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i3 %layer_mode, void @empty_3, i32 0, i32 0, void @empty_26, i32 0, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 39 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %dmem_mode"   --->   Operation 40 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %dmem_mode, void @empty_3, i32 0, i32 0, void @empty_26, i32 0, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 41 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i2 %width_mode"   --->   Operation 42 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i2 %width_mode, void @empty_3, i32 0, i32 0, void @empty_26, i32 0, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 43 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i2 %norm_mode"   --->   Operation 44 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i2 %norm_mode, void @empty_3, i32 0, i32 0, void @empty_26, i32 0, i32 0, void @empty_26, void @empty_26, void @empty_26, i32 0, i32 0, i32 0, i32 0, void @empty_26, void @empty_26, i32 4294967295, i32 0"   --->   Operation 45 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%layer_type_V = partselect i2 @_ssdm_op_PartSelect.i2.i3.i32.i32, i3 %layer_mode_read, i32 1, i32 2"   --->   Operation 46 'partselect' 'layer_type_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln740 = br i1 %trunc_ln701, void %if.else, void %if.then55" [Accel.cpp:740]   --->   Operation 47 'br' 'br_ln740' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%p_Val2_s = load i16 %kh_index_V"   --->   Operation 48 'load' 'p_Val2_s' <Predicate = (!trunc_ln701)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln779 = trunc i16 %p_Val2_s"   --->   Operation 49 'trunc' 'trunc_ln779' <Predicate = (!trunc_ln701)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln744 = zext i1 %trunc_ln779" [Accel.cpp:744]   --->   Operation 50 'zext' 'zext_ln744' <Predicate = (!trunc_ln701)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.45ns)   --->   "%store_ln744 = store i16 %zext_ln744, i16 %kh_index_V" [Accel.cpp:744]   --->   Operation 51 'store' 'store_ln744' <Predicate = (!trunc_ln701)> <Delay = 0.45>
ST_1 : Operation 52 [1/1] (0.38ns)   --->   "%br_ln0 = br void %if.end60"   --->   Operation 52 'br' 'br_ln0' <Predicate = (!trunc_ln701)> <Delay = 0.38>
ST_1 : Operation 53 [1/1] (0.45ns)   --->   "%store_ln741 = store i16 0, i16 %kh_index_V" [Accel.cpp:741]   --->   Operation 53 'store' 'store_ln741' <Predicate = (trunc_ln701)> <Delay = 0.45>
ST_1 : Operation 54 [1/1] (0.45ns)   --->   "%store_ln742 = store i16 0, i16 %o_index_V" [Accel.cpp:742]   --->   Operation 54 'store' 'store_ln742' <Predicate = (trunc_ln701)> <Delay = 0.45>
ST_1 : Operation 55 [1/1] (0.38ns)   --->   "%br_ln743 = br void %if.end60" [Accel.cpp:743]   --->   Operation 55 'br' 'br_ln743' <Predicate = (trunc_ln701)> <Delay = 0.38>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i3 @_ssdm_op_BitConcatenate.i3.i2.i1, i2 %width_mode_read, i1 0" [Accel.cpp:751]   --->   Operation 56 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln751 = zext i3 %shl_ln" [Accel.cpp:751]   --->   Operation 57 'zext' 'zext_ln751' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.52ns)   --->   "%shl_ln751 = shl i7 1, i7 %zext_ln751" [Accel.cpp:751]   --->   Operation 58 'shl' 'shl_ln751' <Predicate = true> <Delay = 0.52> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%words_per_image_V = trunc i7 %shl_ln751"   --->   Operation 59 'trunc' 'words_per_image_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i2 @_ssdm_op_BitConcatenate.i2.i1.i1, i1 %dmem_mode_read, i1 0" [Accel.cpp:758]   --->   Operation 60 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [2/2] (1.06ns)   --->   "%call_ln701 = call void @top_Pipeline_LOOP_DMEM_I, i16 %input_words_read, i5 %words_per_image_V, i1 %dmem_mode_read, i3 %shl_ln, i64 %dmem_i, i2 %layer_type_V, i2 %tmp, i64 %dmem_V" [Accel.cpp:701]   --->   Operation 61 'call' 'call_ln701' <Predicate = true> <Delay = 1.06> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 62 [2/2] (0.00ns)   --->   "%call_ln0 = call void @top_Pipeline_LOOP_WT_I, i64 %wt_i, i64 %wt_mem_V"   --->   Operation 62 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 63 [2/2] (0.00ns)   --->   "%call_ln0 = call void @top_Pipeline_LOOP_KH_I, i64 %kh_i, i64 %kh_mem_V"   --->   Operation 63 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.38>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%agg_tmp141_0 = phi i1 %trunc_ln779, void %if.else, i1 0, void %if.then55"   --->   Operation 64 'phi' 'agg_tmp141_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.12ns)   --->   "%r_V = xor i1 %dmem_mode_read, i1 1"   --->   Operation 65 'xor' 'r_V' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/2] (0.00ns)   --->   "%call_ln701 = call void @top_Pipeline_LOOP_DMEM_I, i16 %input_words_read, i5 %words_per_image_V, i1 %dmem_mode_read, i3 %shl_ln, i64 %dmem_i, i2 %layer_type_V, i2 %tmp, i64 %dmem_V" [Accel.cpp:701]   --->   Operation 66 'call' 'call_ln701' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 67 [1/2] (0.00ns)   --->   "%call_ln0 = call void @top_Pipeline_LOOP_WT_I, i64 %wt_i, i64 %wt_mem_V"   --->   Operation 67 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 68 [1/2] (0.00ns)   --->   "%call_ln0 = call void @top_Pipeline_LOOP_KH_I, i64 %kh_i, i64 %kh_mem_V"   --->   Operation 68 'call' 'call_ln0' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 69 [1/1] (0.34ns)   --->   "%switch_ln782 = switch i2 %layer_type_V, void %if.else170, i2 0, void %if.then139, i2 1, void %for.inc167.preheader" [Accel.cpp:782]   --->   Operation 69 'switch' 'switch_ln782' <Predicate = true> <Delay = 0.34>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%i_V_3 = alloca i32 1"   --->   Operation 70 'alloca' 'i_V_3' <Predicate = (layer_type_V == 1)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.38ns)   --->   "%store_ln1027 = store i10 0, i10 %i_V_3"   --->   Operation 71 'store' 'store_ln1027' <Predicate = (layer_type_V == 1)> <Delay = 0.38>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln1027 = br void %for.inc167"   --->   Operation 72 'br' 'br_ln1027' <Predicate = (layer_type_V == 1)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.72>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%i_V = load i10 %i_V_3"   --->   Operation 73 'load' 'i_V' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln1027 = zext i10 %i_V"   --->   Operation 74 'zext' 'zext_ln1027' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.67ns)   --->   "%icmp_ln1027 = icmp_ult  i16 %zext_ln1027, i16 %n_outputs_read"   --->   Operation 75 'icmp' 'icmp_ln1027' <Predicate = true> <Delay = 0.67> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 65535, i64 0"   --->   Operation 76 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.72ns)   --->   "%i_V_5 = add i10 %i_V, i10 1"   --->   Operation 77 'add' 'i_V_5' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln804 = br i1 %icmp_ln1027, void %if.end180.loopexit, void %for.inc167.split" [Accel.cpp:804]   --->   Operation 78 'br' 'br_ln804' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%idx_V = load i16 %kh_index_V" [Accel.cpp:807]   --->   Operation 79 'load' 'idx_V' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%ret_V_9 = partselect i6 @_ssdm_op_PartSelect.i6.i16.i32.i32, i16 %idx_V, i32 2, i32 7"   --->   Operation 80 'partselect' 'ret_V_9' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln541 = zext i6 %ret_V_9"   --->   Operation 81 'zext' 'zext_ln541' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%kh_mem_V_addr = getelementptr i64 %kh_mem_V, i64 0, i64 %zext_ln541" [./Accel.h:80]   --->   Operation 82 'getelementptr' 'kh_mem_V_addr' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_3 : Operation 83 [2/2] (0.71ns)   --->   "%kh_word_V = load i6 %kh_mem_V_addr" [./Accel.h:80]   --->   Operation 83 'load' 'kh_word_V' <Predicate = (icmp_ln1027)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 64> <RAM>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%off = trunc i16 %idx_V"   --->   Operation 84 'trunc' 'off' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end180"   --->   Operation 85 'br' 'br_ln0' <Predicate = (!icmp_ln1027)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.23>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%specloopname_ln804 = specloopname void @_ssdm_op_SpecLoopName, void @empty_4" [Accel.cpp:804]   --->   Operation 86 'specloopname' 'specloopname_ln804' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/2] (0.71ns)   --->   "%kh_word_V = load i6 %kh_mem_V_addr" [./Accel.h:80]   --->   Operation 87 'load' 'kh_word_V' <Predicate = true> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.71> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 64> <RAM>
ST_4 : Operation 88 [1/1] (0.34ns)   --->   "%switch_ln82 = switch i2 %off, void %if.else16.i, i2 0, void %if.then.i, i2 1, void %if.then6.i, i2 2, void %if.then12.i" [./Accel.h:82]   --->   Operation 88 'switch' 'switch_ln82' <Predicate = true> <Delay = 0.34>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%nc_V_3 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %kh_word_V, i32 32, i32 47"   --->   Operation 89 'partselect' 'nc_V_3' <Predicate = (off == 2)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.45ns)   --->   "%br_ln87 = br void %_Z7load_khI6ap_intILi16EEEvRT_PKS0_ILi64EE7ap_uintILi16EE.exit" [./Accel.h:87]   --->   Operation 90 'br' 'br_ln87' <Predicate = (off == 2)> <Delay = 0.45>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%nc_V_2 = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %kh_word_V, i32 16, i32 31"   --->   Operation 91 'partselect' 'nc_V_2' <Predicate = (off == 1)> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.45ns)   --->   "%br_ln85 = br void %_Z7load_khI6ap_intILi16EEEvRT_PKS0_ILi64EE7ap_uintILi16EE.exit" [./Accel.h:85]   --->   Operation 92 'br' 'br_ln85' <Predicate = (off == 1)> <Delay = 0.45>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%nc_V_1 = trunc i64 %kh_word_V"   --->   Operation 93 'trunc' 'nc_V_1' <Predicate = (off == 0)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.45ns)   --->   "%br_ln83 = br void %_Z7load_khI6ap_intILi16EEEvRT_PKS0_ILi64EE7ap_uintILi16EE.exit" [./Accel.h:83]   --->   Operation 94 'br' 'br_ln83' <Predicate = (off == 0)> <Delay = 0.45>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "%nc_V = partselect i16 @_ssdm_op_PartSelect.i16.i64.i32.i32, i64 %kh_word_V, i32 48, i32 63"   --->   Operation 95 'partselect' 'nc_V' <Predicate = (off == 3)> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (0.45ns)   --->   "%br_ln0 = br void %_Z7load_khI6ap_intILi16EEEvRT_PKS0_ILi64EE7ap_uintILi16EE.exit"   --->   Operation 96 'br' 'br_ln0' <Predicate = (off == 3)> <Delay = 0.45>
ST_4 : Operation 97 [1/1] (0.60ns)   --->   "%icmp_ln1019 = icmp_eq  i10 %i_V, i10 0"   --->   Operation 97 'icmp' 'icmp_ln1019' <Predicate = true> <Delay = 0.60> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%kh_index_V_load_2 = load i16 %kh_index_V"   --->   Operation 98 'load' 'kh_index_V_load_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.78ns)   --->   "%add_ln840_8 = add i16 %kh_index_V_load_2, i16 1"   --->   Operation 99 'add' 'add_ln840_8' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 100 [1/1] (0.45ns)   --->   "%store_ln840 = store i16 %add_ln840_8, i16 %kh_index_V"   --->   Operation 100 'store' 'store_ln840' <Predicate = true> <Delay = 0.45>
ST_4 : Operation 101 [1/1] (0.38ns)   --->   "%store_ln804 = store i10 %i_V_5, i10 %i_V_3" [Accel.cpp:804]   --->   Operation 101 'store' 'store_ln804' <Predicate = true> <Delay = 0.38>

State 5 <SV = 4> <Delay = 2.45>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%nc_V_4 = phi i16 %nc_V_1, void %if.then.i, i16 %nc_V_2, void %if.then6.i, i16 %nc_V, void %if.else16.i, i16 %nc_V_3, void %if.then12.i"   --->   Operation 102 'phi' 'nc_V_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%o_index_V_load_4 = load i16 %o_index_V" [Accel.cpp:815]   --->   Operation 103 'load' 'o_index_V_load_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln1019 = trunc i16 %o_index_V_load_4"   --->   Operation 104 'trunc' 'trunc_ln1019' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 105 [2/2] (2.45ns)   --->   "%call_ln809 = call void @bin_conv, i16 %nc_V_4, i1 %dmem_mode_read, i1 %r_V, i16 %n_inputs_read, i15 %trunc_ln1019, i1 %icmp_ln1019, i2 %width_mode_read, i2 %norm_mode_read, i16 %wt_addr_V, i3 %wt_offset_V, i64 %wt_mem_V, i64 %dmem_V, i64 %outword_V" [Accel.cpp:809]   --->   Operation 105 'call' 'call_ln809' <Predicate = true> <Delay = 2.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%o_index_V_load_5 = load i16 %o_index_V"   --->   Operation 106 'load' 'o_index_V_load_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.78ns)   --->   "%add_ln840_9 = add i16 %o_index_V_load_5, i16 1"   --->   Operation 107 'add' 'add_ln840_9' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (0.45ns)   --->   "%store_ln840 = store i16 %add_ln840_9, i16 %o_index_V"   --->   Operation 108 'store' 'store_ln840' <Predicate = true> <Delay = 0.45>

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 109 [1/2] (0.00ns)   --->   "%call_ln809 = call void @bin_conv, i16 %nc_V_4, i1 %dmem_mode_read, i1 %r_V, i16 %n_inputs_read, i15 %trunc_ln1019, i1 %icmp_ln1019, i2 %width_mode_read, i2 %norm_mode_read, i16 %wt_addr_V, i3 %wt_offset_V, i64 %wt_mem_V, i64 %dmem_V, i64 %outword_V" [Accel.cpp:809]   --->   Operation 109 'call' 'call_ln809' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%br_ln804 = br void %for.inc167" [Accel.cpp:804]   --->   Operation 110 'br' 'br_ln804' <Predicate = true> <Delay = 0.00>

State 7 <SV = 2> <Delay = 1.23>
ST_7 : Operation 111 [1/1] (0.00ns)   --->   "%o_index_V_load_2 = load i16 %o_index_V" [Accel.cpp:792]   --->   Operation 111 'load' 'o_index_V_load_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 112 [1/1] (0.00ns)   --->   "%trunc_ln793 = trunc i16 %o_index_V_load_2" [Accel.cpp:793]   --->   Operation 112 'trunc' 'trunc_ln793' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 113 [2/2] (0.00ns)   --->   "%call_ln785 = call void @fp_conv, i1 %dmem_mode_read, i1 %r_V, i1 %agg_tmp141_0, i9 %trunc_ln793, i16 %n_outputs_read, i64 %wt_mem_V, i64 %kh_mem_V, i64 %dmem_V" [Accel.cpp:785]   --->   Operation 113 'call' 'call_ln785' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 114 [1/1] (0.00ns)   --->   "%kh_index_V_load = load i16 %kh_index_V"   --->   Operation 114 'load' 'kh_index_V_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 115 [1/1] (0.78ns)   --->   "%add_ln840_5 = add i16 %kh_index_V_load, i16 %n_outputs_read"   --->   Operation 115 'add' 'add_ln840_5' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 116 [1/1] (0.45ns)   --->   "%store_ln840 = store i16 %add_ln840_5, i16 %kh_index_V"   --->   Operation 116 'store' 'store_ln840' <Predicate = true> <Delay = 0.45>
ST_7 : Operation 117 [1/1] (0.00ns)   --->   "%o_index_V_load_3 = load i16 %o_index_V"   --->   Operation 117 'load' 'o_index_V_load_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 118 [1/1] (0.78ns)   --->   "%add_ln840_6 = add i16 %o_index_V_load_3, i16 %n_outputs_read"   --->   Operation 118 'add' 'add_ln840_6' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 119 [1/1] (0.45ns)   --->   "%store_ln840 = store i16 %add_ln840_6, i16 %o_index_V"   --->   Operation 119 'store' 'store_ln840' <Predicate = true> <Delay = 0.45>

State 8 <SV = 3> <Delay = 0.62>
ST_8 : Operation 120 [1/2] (0.00ns)   --->   "%call_ln785 = call void @fp_conv, i1 %dmem_mode_read, i1 %r_V, i1 %agg_tmp141_0, i9 %trunc_ln793, i16 %n_outputs_read, i64 %wt_mem_V, i64 %kh_mem_V, i64 %dmem_V" [Accel.cpp:785]   --->   Operation 120 'call' 'call_ln785' <Predicate = (layer_type_V == 0)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%br_ln798 = br void %if.end181" [Accel.cpp:798]   --->   Operation 121 'br' 'br_ln798' <Predicate = (layer_type_V == 0)> <Delay = 0.00>
ST_8 : Operation 122 [1/2] (0.00ns)   --->   "%call_ln826 = call void @bin_dense, i2 %layer_type_V, i1 %dmem_mode_read, i1 %r_V, i16 %o_index_V_load, i16 %n_inputs_read, i16 %n_outputs_read, i64 %dmem_V, i64 %wt_mem_V, i64 %kh_mem_V" [Accel.cpp:826]   --->   Operation 122 'call' 'call_ln826' <Predicate = (layer_type_V != 0 & layer_type_V != 1)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end180"   --->   Operation 123 'br' 'br_ln0' <Predicate = (layer_type_V != 0 & layer_type_V != 1)> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end181"   --->   Operation 124 'br' 'br_ln0' <Predicate = (layer_type_V != 0)> <Delay = 0.00>
ST_8 : Operation 125 [1/1] (0.34ns)   --->   "%icmp_ln1023 = icmp_ne  i2 %norm_mode_read, i2 2"   --->   Operation 125 'icmp' 'icmp_ln1023' <Predicate = true> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 126 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i3 @_ssdm_op_PartSelect.i3.i7.i32.i32, i7 %shl_ln751, i32 2, i32 4"   --->   Operation 126 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln1513 = zext i3 %lshr_ln"   --->   Operation 127 'zext' 'zext_ln1513' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 128 [1/1] (0.27ns)   --->   "%words_per_out_V = select i1 %icmp_ln1023, i5 %words_per_image_V, i5 %zext_ln1513"   --->   Operation 128 'select' 'words_per_out_V' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 129 [1/1] (0.34ns)   --->   "%cmp_i_i130_not = icmp_ne  i2 %width_mode_read, i2 0" [Accel.cpp:701]   --->   Operation 129 'icmp' 'cmp_i_i130_not' <Predicate = true> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node brmerge22)   --->   "%brmerge = or i1 %cmp_i_i130_not, i1 %icmp_ln1023" [Accel.cpp:701]   --->   Operation 130 'or' 'brmerge' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node brmerge22)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i3.i32, i3 %layer_mode_read, i32 2" [Accel.cpp:701]   --->   Operation 131 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node brmerge22)   --->   "%brmerge_not = xor i1 %brmerge, i1 1" [Accel.cpp:701]   --->   Operation 132 'xor' 'brmerge_not' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 133 [1/1] (0.12ns) (out node of the LUT)   --->   "%brmerge22 = or i1 %tmp_1, i1 %brmerge_not" [Accel.cpp:701]   --->   Operation 133 'or' 'brmerge22' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 2> <Delay = 1.23>
ST_9 : Operation 134 [1/1] (0.00ns)   --->   "%o_index_V_load = load i16 %o_index_V" [Accel.cpp:832]   --->   Operation 134 'load' 'o_index_V_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 135 [2/2] (0.34ns)   --->   "%call_ln826 = call void @bin_dense, i2 %layer_type_V, i1 %dmem_mode_read, i1 %r_V, i16 %o_index_V_load, i16 %n_inputs_read, i16 %n_outputs_read, i64 %dmem_V, i64 %wt_mem_V, i64 %kh_mem_V" [Accel.cpp:826]   --->   Operation 135 'call' 'call_ln826' <Predicate = true> <Delay = 0.34> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 136 [1/1] (0.00ns)   --->   "%o_index_V_load_1 = load i16 %o_index_V"   --->   Operation 136 'load' 'o_index_V_load_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 137 [1/1] (0.78ns)   --->   "%add_ln840 = add i16 %o_index_V_load_1, i16 %n_outputs_read"   --->   Operation 137 'add' 'add_ln840' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 138 [1/1] (0.45ns)   --->   "%store_ln840 = store i16 %add_ln840, i16 %o_index_V"   --->   Operation 138 'store' 'store_ln840' <Predicate = true> <Delay = 0.45>

State 10 <SV = 4> <Delay = 0.00>
ST_10 : Operation 139 [2/2] (0.00ns)   --->   "%call_ln701 = call void @top_Pipeline_LOOP_DMEM_O, i16 %output_words_read, i64 %dmem_o, i1 %r_V, i5 %words_per_out_V, i1 %brmerge22, i5 %words_per_out_V, i64 %dmem_V" [Accel.cpp:701]   --->   Operation 139 'call' 'call_ln701' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 5> <Delay = 0.00>
ST_11 : Operation 140 [1/2] (0.00ns)   --->   "%call_ln701 = call void @top_Pipeline_LOOP_DMEM_O, i16 %output_words_read, i64 %dmem_o, i1 %r_V, i5 %words_per_out_V, i1 %brmerge22, i5 %words_per_out_V, i64 %dmem_V" [Accel.cpp:701]   --->   Operation 140 'call' 'call_ln701' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 141 [1/1] (0.00ns)   --->   "%ret_ln859 = ret" [Accel.cpp:859]   --->   Operation 141 'ret' 'ret_ln859' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.59ns
The critical path consists of the following:
	wire read operation ('width_mode_read', Accel.cpp:701) on port 'width_mode' (Accel.cpp:701) [22]  (0 ns)
	'shl' operation ('op', Accel.cpp:751) [72]  (0.522 ns)
	'call' operation ('call_ln701', Accel.cpp:701) to 'top_Pipeline_LOOP_DMEM_I' [75]  (1.06 ns)

 <State 2>: 0.387ns
The critical path consists of the following:
	'alloca' operation ('i.V') [80]  (0 ns)
	'store' operation ('store_ln1027') of constant 0 on local variable 'i.V' [81]  (0.387 ns)

 <State 3>: 0.725ns
The critical path consists of the following:
	'load' operation ('i.V') on local variable 'i.V' [84]  (0 ns)
	'add' operation ('i.V') [88]  (0.725 ns)

 <State 4>: 1.24ns
The critical path consists of the following:
	'load' operation ('kh_index_V_load_2') on static variable 'kh_index_V' [117]  (0 ns)
	'add' operation ('add_ln840_8') [118]  (0.785 ns)
	'store' operation ('store_ln840') of variable 'add_ln840_8' on static variable 'kh_index_V' [119]  (0.453 ns)

 <State 5>: 2.46ns
The critical path consists of the following:
	'phi' operation ('nc.V') with incoming values : ('nc.V') [112]  (0 ns)
	'call' operation ('call_ln809', Accel.cpp:809) to 'bin_conv' [116]  (2.46 ns)

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 1.24ns
The critical path consists of the following:
	'load' operation ('kh_index_V_load') on static variable 'kh_index_V' [131]  (0 ns)
	'add' operation ('add_ln840_5') [132]  (0.785 ns)
	'store' operation ('store_ln840') of variable 'add_ln840_5' on static variable 'kh_index_V' [133]  (0.453 ns)

 <State 8>: 0.621ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln1023') [148]  (0.343 ns)
	'select' operation ('words_per_out.V') [151]  (0.278 ns)

 <State 9>: 1.24ns
The critical path consists of the following:
	'load' operation ('o_index_V_load_1') on static variable 'o_index_V' [141]  (0 ns)
	'add' operation ('add_ln840') [142]  (0.785 ns)
	'store' operation ('store_ln840') of variable 'add_ln840' on static variable 'o_index_V' [143]  (0.453 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
