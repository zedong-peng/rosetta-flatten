

================================================================
== Vitis HLS Report for 'process_word'
================================================================
* Date:           Fri Dec 13 13:11:29 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.253 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      267|      267|  2.670 us|  2.670 us|  267|  267|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.25>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%wrd_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %wrd" [Accel.cpp:125]   --->   Operation 7 'read' 'wrd_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%words_per_image_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %words_per_image" [Accel.cpp:125]   --->   Operation 8 'read' 'words_per_image_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%log_width_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %log_width" [Accel.cpp:125]   --->   Operation 9 'read' 'log_width_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%word_buffer_m_offset_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %word_buffer_m_offset" [Accel.cpp:125]   --->   Operation 10 'read' 'word_buffer_m_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 %word_buffer_m_offset_read, i3 0" [Accel.cpp:125]   --->   Operation 11 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln106 = zext i3 %log_width_read" [Accel.cpp:106]   --->   Operation 12 'zext' 'zext_ln106' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.57ns)   --->   "%add_ln106 = add i4 %zext_ln106, i4 13" [Accel.cpp:106]   --->   Operation 13 'add' 'add_ln106' <Predicate = true> <Delay = 0.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sext_ln106 = sext i4 %add_ln106" [Accel.cpp:106]   --->   Operation 14 'sext' 'sext_ln106' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.55ns)   --->   "%shl_ln106 = shl i32 1, i32 %sext_ln106" [Accel.cpp:106]   --->   Operation 15 'shl' 'shl_ln106' <Predicate = true> <Delay = 0.55> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.55> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%slices_per_line = trunc i32 %shl_ln106"   --->   Operation 16 'trunc' 'slices_per_line' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln1019 = zext i5 %words_per_image_read"   --->   Operation 17 'zext' 'zext_ln1019' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.58ns)   --->   "%last_wrd = icmp_eq  i8 %zext_ln1019, i8 %wrd_read"   --->   Operation 18 'icmp' 'last_wrd' <Predicate = true> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%rhs = zext i5 %slices_per_line"   --->   Operation 19 'zext' 'rhs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.70ns)   --->   "%add_ln114 = add i6 %rhs, i6 56" [Accel.cpp:114]   --->   Operation 20 'add' 'add_ln114' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%trunc_ln114 = trunc i6 %add_ln114" [Accel.cpp:114]   --->   Operation 21 'trunc' 'trunc_ln114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [2/2] (3.41ns)   --->   "%call_ln114 = call void @process_word_Pipeline_VITIS_LOOP_113_1, i3 %trunc_ln114, i1 %word_buffer_m_offset_read, i2 %old_word_buffer_m, i1 %lb, i1 %rb, i4 %tmp, i2 %line_buffer_m_2, i6 %add_ln114, i1 %last_wrd, i2 %word_buffer_m" [Accel.cpp:114]   --->   Operation 22 'call' 'call_ln114' <Predicate = true> <Delay = 3.41> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 23 [1/1] (0.58ns)   --->   "%first_wrd = icmp_eq  i8 %wrd_read, i8 0"   --->   Operation 23 'icmp' 'first_wrd' <Predicate = true> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 24 [1/2] (0.00ns)   --->   "%call_ln114 = call void @process_word_Pipeline_VITIS_LOOP_113_1, i3 %trunc_ln114, i1 %word_buffer_m_offset_read, i2 %old_word_buffer_m, i1 %lb, i1 %rb, i4 %tmp, i2 %line_buffer_m_2, i6 %add_ln114, i1 %last_wrd, i2 %word_buffer_m" [Accel.cpp:114]   --->   Operation 24 'call' 'call_ln114' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 2.99>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%p_read_1 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read17" [Accel.cpp:125]   --->   Operation 25 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%p_read_2 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read16" [Accel.cpp:125]   --->   Operation 26 'read' 'p_read_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%p_read_3 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read15" [Accel.cpp:125]   --->   Operation 27 'read' 'p_read_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%p_read_4 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read14" [Accel.cpp:125]   --->   Operation 28 'read' 'p_read_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%p_read_5 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read13" [Accel.cpp:125]   --->   Operation 29 'read' 'p_read_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%p_read_6 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read12" [Accel.cpp:125]   --->   Operation 30 'read' 'p_read_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%p_read_7 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read11" [Accel.cpp:125]   --->   Operation 31 'read' 'p_read_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%p_read_8 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read10" [Accel.cpp:125]   --->   Operation 32 'read' 'p_read_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%p_read_9 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read9" [Accel.cpp:125]   --->   Operation 33 'read' 'p_read_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%p_read_10 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read8" [Accel.cpp:125]   --->   Operation 34 'read' 'p_read_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%p_read_11 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read7" [Accel.cpp:125]   --->   Operation 35 'read' 'p_read_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%p_read_12 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read6" [Accel.cpp:125]   --->   Operation 36 'read' 'p_read_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%p_read_13 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read5" [Accel.cpp:125]   --->   Operation 37 'read' 'p_read_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%p_read_14 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read4" [Accel.cpp:125]   --->   Operation 38 'read' 'p_read_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%p_read_15 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read3" [Accel.cpp:125]   --->   Operation 39 'read' 'p_read_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%p_read_16 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read2" [Accel.cpp:125]   --->   Operation 40 'read' 'p_read_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%p_read_17 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read1" [Accel.cpp:125]   --->   Operation 41 'read' 'p_read_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%p_read19 = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %p_read" [Accel.cpp:125]   --->   Operation 42 'read' 'p_read19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.27ns)   --->   "%select_ln186 = select i1 %word_buffer_m_offset_read, i1 %p_read_1, i1 %p_read_2"   --->   Operation 43 'select' 'select_ln186' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.27ns)   --->   "%select_ln186_1 = select i1 %word_buffer_m_offset_read, i1 %p_read_3, i1 %p_read_4"   --->   Operation 44 'select' 'select_ln186_1' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.27ns)   --->   "%select_ln186_2 = select i1 %word_buffer_m_offset_read, i1 %p_read_5, i1 %p_read_6"   --->   Operation 45 'select' 'select_ln186_2' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.27ns)   --->   "%select_ln186_3 = select i1 %word_buffer_m_offset_read, i1 %p_read_7, i1 %p_read_8"   --->   Operation 46 'select' 'select_ln186_3' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.27ns)   --->   "%select_ln186_4 = select i1 %word_buffer_m_offset_read, i1 %p_read_9, i1 %p_read_10"   --->   Operation 47 'select' 'select_ln186_4' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.27ns)   --->   "%select_ln186_5 = select i1 %word_buffer_m_offset_read, i1 %p_read_11, i1 %p_read_12"   --->   Operation 48 'select' 'select_ln186_5' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.27ns)   --->   "%select_ln186_6 = select i1 %word_buffer_m_offset_read, i1 %p_read_13, i1 %p_read_14"   --->   Operation 49 'select' 'select_ln186_6' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.27ns)   --->   "%select_ln186_7 = select i1 %word_buffer_m_offset_read, i1 %p_read_15, i1 %p_read_16"   --->   Operation 50 'select' 'select_ln186_7' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.27ns)   --->   "%select_ln186_8 = select i1 %word_buffer_m_offset_read, i1 %p_read_17, i1 %p_read19"   --->   Operation 51 'select' 'select_ln186_8' <Predicate = true> <Delay = 0.27> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 52 [2/2] (2.71ns)   --->   "%call_ln125 = call void @process_word_Pipeline_VITIS_LOOP_82_1_VITIS_LOOP_83_2, i4 %tmp, i2 %line_buffer_m_0, i2 %line_buffer_m_1, i2 %line_buffer_m_2, i1 %select_ln186, i1 %select_ln186_1, i1 %select_ln186_2, i1 %select_ln186_3, i1 %select_ln186_4, i1 %select_ln186_5, i1 %select_ln186_6, i1 %select_ln186_7, i1 %select_ln186_8, i1 %word_buffer_m_offset_read, i5 %conv_out_buffer_m" [Accel.cpp:125]   --->   Operation 52 'call' 'call_ln125' <Predicate = true> <Delay = 2.71> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 53 [1/2] (0.00ns)   --->   "%call_ln125 = call void @process_word_Pipeline_VITIS_LOOP_82_1_VITIS_LOOP_83_2, i4 %tmp, i2 %line_buffer_m_0, i2 %line_buffer_m_1, i2 %line_buffer_m_2, i1 %select_ln186, i1 %select_ln186_1, i1 %select_ln186_2, i1 %select_ln186_3, i1 %select_ln186_4, i1 %select_ln186_5, i1 %select_ln186_6, i1 %select_ln186_7, i1 %select_ln186_8, i1 %word_buffer_m_offset_read, i5 %conv_out_buffer_m" [Accel.cpp:125]   --->   Operation 53 'call' 'call_ln125' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 3.41>
ST_5 : Operation 54 [2/2] (3.41ns)   --->   "%call_ln125 = call void @process_word_Pipeline_VITIS_LOOP_142_4, i4 %tmp, i2 %word_buffer_m, i2 %line_buffer_m_0, i2 %line_buffer_m_1, i5 %slices_per_line, i1 %lb, i1 %rb, i1 %first_wrd, i2 %old_word_buffer_m" [Accel.cpp:125]   --->   Operation 54 'call' 'call_ln125' <Predicate = true> <Delay = 3.41> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 55 [1/2] (0.00ns)   --->   "%call_ln125 = call void @process_word_Pipeline_VITIS_LOOP_142_4, i4 %tmp, i2 %word_buffer_m, i2 %line_buffer_m_0, i2 %line_buffer_m_1, i5 %slices_per_line, i1 %lb, i1 %rb, i1 %first_wrd, i2 %old_word_buffer_m" [Accel.cpp:125]   --->   Operation 55 'call' 'call_ln125' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 56 [1/1] (0.00ns)   --->   "%ret_ln176 = ret" [Accel.cpp:176]   --->   Operation 56 'ret' 'ret_ln176' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.25ns
The critical path consists of the following:
	wire read operation ('log_width_read', Accel.cpp:125) on port 'log_width' (Accel.cpp:125) [33]  (0 ns)
	'add' operation ('add_ln106', Accel.cpp:106) [55]  (0.572 ns)
	'shl' operation ('op', Accel.cpp:106) [57]  (0.557 ns)
	'add' operation ('add_ln114', Accel.cpp:114) [62]  (0.707 ns)
	'call' operation ('call_ln114', Accel.cpp:114) to 'process_word_Pipeline_VITIS_LOOP_113_1' [64]  (3.42 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 2.99ns
The critical path consists of the following:
	wire read operation ('conv_params_m.V[2][2][1]', Accel.cpp:125) on port 'p_read17' (Accel.cpp:125) [34]  (0 ns)
	'select' operation ('select_ln186') [65]  (0.278 ns)
	'call' operation ('call_ln125', Accel.cpp:125) to 'process_word_Pipeline_VITIS_LOOP_82_1_VITIS_LOOP_83_2' [74]  (2.71 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 3.42ns
The critical path consists of the following:
	'call' operation ('call_ln125', Accel.cpp:125) to 'process_word_Pipeline_VITIS_LOOP_142_4' [76]  (3.42 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
