

================================================================
== Vitis HLS Report for 'fp_conv_Pipeline_LOOP_LOAD_WTS'
================================================================
* Date:           Fri Dec 13 13:11:39 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.718 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        5|        5|  50.000 ns|  50.000 ns|    5|    5|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |                 |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+
        |- LOOP_LOAD_WTS  |        3|        3|         1|          1|          1|     3|       yes|
        +-----------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.71>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%m_V = alloca i32 1"   --->   Operation 4 'alloca' 'm_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%wtbuf_V_1 = alloca i32 1"   --->   Operation 5 'alloca' 'wtbuf_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%wtbuf_V_1_1 = alloca i32 1"   --->   Operation 6 'alloca' 'wtbuf_V_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%wtbuf_V_1_2 = alloca i32 1"   --->   Operation 7 'alloca' 'wtbuf_V_1_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%wt_word_V_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %wt_word_V"   --->   Operation 8 'read' 'wt_word_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%wtbuf_V_0_0143_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %wtbuf_V_0_0143"   --->   Operation 9 'read' 'wtbuf_V_0_0143_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%wtbuf_V_1_0144_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %wtbuf_V_1_0144"   --->   Operation 10 'read' 'wtbuf_V_1_0144_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%wtbuf_V_2_0145_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %wtbuf_V_2_0145"   --->   Operation 11 'read' 'wtbuf_V_2_0145_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.38ns)   --->   "%store_ln0 = store i9 %wtbuf_V_2_0145_read, i9 %wtbuf_V_1_2"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 13 [1/1] (0.38ns)   --->   "%store_ln0 = store i9 %wtbuf_V_1_0144_read, i9 %wtbuf_V_1_1"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 14 [1/1] (0.38ns)   --->   "%store_ln0 = store i9 %wtbuf_V_0_0143_read, i9 %wtbuf_V_1"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 15 [1/1] (0.38ns)   --->   "%store_ln0 = store i2 0, i2 %m_V"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc109"   --->   Operation 16 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%m_V_1 = load i2 %m_V"   --->   Operation 17 'load' 'm_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 18 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.34ns)   --->   "%icmp_ln1027 = icmp_eq  i2 %m_V_1, i2 3"   --->   Operation 19 'icmp' 'icmp_ln1027' <Predicate = true> <Delay = 0.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 3, i64 3, i64 3"   --->   Operation 20 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.43ns)   --->   "%add_ln840 = add i2 %m_V_1, i2 1"   --->   Operation 21 'add' 'add_ln840' <Predicate = true> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln501 = br i1 %icmp_ln1027, void %for.inc109.split, void %LOOP_CONV_ROWS.exitStub" [Accel.cpp:501]   --->   Operation 22 'br' 'br_ln501' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%specloopname_ln1633 = specloopname void @_ssdm_op_SpecLoopName, void @empty"   --->   Operation 23 'specloopname' 'specloopname_ln1633' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%Lo = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i1.i2, i2 %m_V_1, i1 0, i2 %m_V_1"   --->   Operation 24 'bitconcatenate' 'Lo' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.70ns)   --->   "%Hi = add i5 %Lo, i5 8"   --->   Operation 25 'add' 'Hi' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.63ns)   --->   "%icmp_ln628 = icmp_ugt  i5 %Lo, i5 23"   --->   Operation 26 'icmp' 'icmp_ln628' <Predicate = (!icmp_ln1027)> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.63> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln628 = zext i5 %Lo"   --->   Operation 27 'zext' 'zext_ln628' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln628_1 = zext i5 %Hi"   --->   Operation 28 'zext' 'zext_ln628_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln628)   --->   "%tmp = partselect i64 @llvm.part.select.i64, i64 %wt_word_V_read, i32 63, i32 0"   --->   Operation 29 'partselect' 'tmp' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.70ns)   --->   "%sub_ln628 = sub i6 %zext_ln628, i6 %zext_ln628_1"   --->   Operation 30 'sub' 'sub_ln628' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln628)   --->   "%xor_ln628 = xor i6 %zext_ln628, i6 63"   --->   Operation 31 'xor' 'xor_ln628' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.10> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.70ns)   --->   "%sub_ln628_1 = sub i6 %zext_ln628_1, i6 %zext_ln628"   --->   Operation 32 'sub' 'sub_ln628_1' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln628_1)   --->   "%select_ln628 = select i1 %icmp_ln628, i6 %sub_ln628, i6 %sub_ln628_1"   --->   Operation 33 'select' 'select_ln628' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln628)   --->   "%select_ln628_1 = select i1 %icmp_ln628, i64 %tmp, i64 %wt_word_V_read"   --->   Operation 34 'select' 'select_ln628_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln628)   --->   "%select_ln628_2 = select i1 %icmp_ln628, i6 %xor_ln628, i6 %zext_ln628"   --->   Operation 35 'select' 'select_ln628_2' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.29> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln628_1)   --->   "%xor_ln628_1 = xor i6 %select_ln628, i6 63"   --->   Operation 36 'xor' 'xor_ln628_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln628)   --->   "%zext_ln628_2 = zext i6 %select_ln628_2"   --->   Operation 37 'zext' 'zext_ln628_2' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln628_1)   --->   "%zext_ln628_3 = zext i6 %xor_ln628_1"   --->   Operation 38 'zext' 'zext_ln628_3' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (1.09ns) (out node of the LUT)   --->   "%lshr_ln628 = lshr i64 %select_ln628_1, i64 %zext_ln628_2"   --->   Operation 39 'lshr' 'lshr_ln628' <Predicate = (!icmp_ln1027)> <Delay = 1.09> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.09> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.62ns) (out node of the LUT)   --->   "%lshr_ln628_1 = lshr i64 18446744073709551615, i64 %zext_ln628_3"   --->   Operation 40 'lshr' 'lshr_ln628_1' <Predicate = (!icmp_ln1027)> <Delay = 0.62> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.28ns) (out node of the LUT)   --->   "%p_Result_s = and i64 %lshr_ln628, i64 %lshr_ln628_1"   --->   Operation 41 'and' 'p_Result_s' <Predicate = (!icmp_ln1027)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%wtbuf_V_1_4 = trunc i64 %p_Result_s"   --->   Operation 42 'trunc' 'wtbuf_V_1_4' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.34ns)   --->   "%switch_ln502 = switch i2 %m_V_1, void %branch2, i2 0, void %for.inc109.split.for.inc109.split142_crit_edge, i2 1, void %for.inc109.split.for.inc109.split142_crit_edge5" [Accel.cpp:502]   --->   Operation 43 'switch' 'switch_ln502' <Predicate = (!icmp_ln1027)> <Delay = 0.34>
ST_1 : Operation 44 [1/1] (0.38ns)   --->   "%store_ln502 = store i9 %wtbuf_V_1_4, i9 %wtbuf_V_1_1" [Accel.cpp:502]   --->   Operation 44 'store' 'store_ln502' <Predicate = (!icmp_ln1027 & m_V_1 == 1)> <Delay = 0.38>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%br_ln502 = br void %for.inc109.split142" [Accel.cpp:502]   --->   Operation 45 'br' 'br_ln502' <Predicate = (!icmp_ln1027 & m_V_1 == 1)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.38ns)   --->   "%store_ln502 = store i9 %wtbuf_V_1_4, i9 %wtbuf_V_1" [Accel.cpp:502]   --->   Operation 46 'store' 'store_ln502' <Predicate = (!icmp_ln1027 & m_V_1 == 0)> <Delay = 0.38>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln502 = br void %for.inc109.split142" [Accel.cpp:502]   --->   Operation 47 'br' 'br_ln502' <Predicate = (!icmp_ln1027 & m_V_1 == 0)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.38ns)   --->   "%store_ln502 = store i9 %wtbuf_V_1_4, i9 %wtbuf_V_1_2" [Accel.cpp:502]   --->   Operation 48 'store' 'store_ln502' <Predicate = (!icmp_ln1027 & m_V_1 != 0 & m_V_1 != 1)> <Delay = 0.38>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln502 = br void %for.inc109.split142" [Accel.cpp:502]   --->   Operation 49 'br' 'br_ln502' <Predicate = (!icmp_ln1027 & m_V_1 != 0 & m_V_1 != 1)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.38ns)   --->   "%store_ln501 = store i2 %add_ln840, i2 %m_V" [Accel.cpp:501]   --->   Operation 50 'store' 'store_ln501' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln501 = br void %for.inc109" [Accel.cpp:501]   --->   Operation 51 'br' 'br_ln501' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%wtbuf_V_1_load = load i9 %wtbuf_V_1"   --->   Operation 52 'load' 'wtbuf_V_1_load' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%wtbuf_V_1_1_load = load i9 %wtbuf_V_1_1"   --->   Operation 53 'load' 'wtbuf_V_1_1_load' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%wtbuf_V_1_2_load = load i9 %wtbuf_V_1_2"   --->   Operation 54 'load' 'wtbuf_V_1_2_load' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i9P0A, i9 %wtbuf_V_2_1_out, i9 %wtbuf_V_1_2_load"   --->   Operation 55 'write' 'write_ln0' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i9P0A, i9 %wtbuf_V_1_1_out, i9 %wtbuf_V_1_1_load"   --->   Operation 56 'write' 'write_ln0' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i9P0A, i9 %wtbuf_V_0_1_out, i9 %wtbuf_V_1_load"   --->   Operation 57 'write' 'write_ln0' <Predicate = (icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 58 'ret' 'ret_ln0' <Predicate = (icmp_ln1027)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 2.72ns
The critical path consists of the following:
	'alloca' operation ('m.V') [8]  (0 ns)
	'load' operation ('m.V') on local variable 'm.V' [22]  (0 ns)
	'add' operation ('Hi') [31]  (0.707 ns)
	'sub' operation ('sub_ln628') [36]  (0.707 ns)
	'select' operation ('select_ln628') [39]  (0 ns)
	'xor' operation ('xor_ln628_1') [42]  (0 ns)
	'lshr' operation ('lshr_ln628_1') [46]  (0.627 ns)
	'and' operation ('__Result__') [47]  (0.289 ns)
	'store' operation ('store_ln502', Accel.cpp:502) of variable 'wtbuf.V[1]' on local variable 'wtbuf.V[1]' [51]  (0.387 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
