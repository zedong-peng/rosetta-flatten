

================================================================
== Vitis HLS Report for 'process_word_Pipeline_VITIS_LOOP_82_1_VITIS_LOOP_83_2'
================================================================
* Date:           Fri Dec 13 13:11:28 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        project
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu280-fsvh2892-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.771 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      130|      130|  1.300 us|  1.300 us|  130|  130|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_82_1_VITIS_LOOP_83_2  |      128|      128|         3|          2|          1|    64|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 2, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.77>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%rhs = alloca i32 1"   --->   Operation 6 'alloca' 'rhs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%bank_V = alloca i32 1"   --->   Operation 7 'alloca' 'bank_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%word_buffer_m_offset_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %word_buffer_m_offset"   --->   Operation 9 'read' 'word_buffer_m_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%select_ln186_8_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %select_ln186_8"   --->   Operation 10 'read' 'select_ln186_8_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%select_ln186_7_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %select_ln186_7"   --->   Operation 11 'read' 'select_ln186_7_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%select_ln186_6_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %select_ln186_6"   --->   Operation 12 'read' 'select_ln186_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%select_ln186_5_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %select_ln186_5"   --->   Operation 13 'read' 'select_ln186_5_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%select_ln186_4_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %select_ln186_4"   --->   Operation 14 'read' 'select_ln186_4_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%select_ln186_3_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %select_ln186_3"   --->   Operation 15 'read' 'select_ln186_3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%select_ln186_2_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %select_ln186_2"   --->   Operation 16 'read' 'select_ln186_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%select_ln186_1_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %select_ln186_1"   --->   Operation 17 'read' 'select_ln186_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%select_ln186_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %select_ln186"   --->   Operation 18 'read' 'select_ln186_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln125_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %zext_ln125"   --->   Operation 19 'read' 'zext_ln125_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln125_cast = zext i4 %zext_ln125_read"   --->   Operation 20 'zext' 'zext_ln125_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.38ns)   --->   "%store_ln0 = store i7 0, i7 %indvar_flatten"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 22 [1/1] (0.38ns)   --->   "%store_ln0 = store i4 0, i4 %bank_V"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 23 [1/1] (0.38ns)   --->   "%store_ln0 = store i4 0, i4 %rhs"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.38>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc.i"   --->   Operation 24 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i7 %indvar_flatten"   --->   Operation 25 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 26 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.59ns)   --->   "%icmp_ln1027 = icmp_eq  i7 %indvar_flatten_load, i7 64"   --->   Operation 27 'icmp' 'icmp_ln1027' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.70ns)   --->   "%add_ln1027 = add i7 %indvar_flatten_load, i7 1"   --->   Operation 28 'add' 'add_ln1027' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln1027 = br i1 %icmp_ln1027, void %for.inc9.i, void %_Z9conv_wordPA3_A10_K6ap_intILi2EEPA3_KS_ILi1EEPS_ILi5EE.exit.exitStub"   --->   Operation 29 'br' 'br_ln1027' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%rhs_load = load i4 %rhs" [Accel.cpp:83]   --->   Operation 30 'load' 'rhs_load' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%bank_V_load = load i4 %bank_V"   --->   Operation 31 'load' 'bank_V_load' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.70ns)   --->   "%add_ln840 = add i4 %bank_V_load, i4 1"   --->   Operation 32 'add' 'add_ln840' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.65ns)   --->   "%icmp_ln83 = icmp_eq  i4 %rhs_load, i4 8" [Accel.cpp:83]   --->   Operation 33 'icmp' 'icmp_ln83' <Predicate = (!icmp_ln1027)> <Delay = 0.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.35ns)   --->   "%select_ln1027 = select i1 %icmp_ln83, i4 0, i4 %rhs_load"   --->   Operation 34 'select' 'select_ln1027' <Predicate = (!icmp_ln1027)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.35ns)   --->   "%select_ln1027_1 = select i1 %icmp_ln83, i4 %add_ln840, i4 %bank_V_load"   --->   Operation 35 'select' 'select_ln1027_1' <Predicate = (!icmp_ln1027)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i4 %select_ln1027_1" [Accel.cpp:65]   --->   Operation 36 'zext' 'zext_ln65' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.70ns)   --->   "%add_ln65 = add i5 %zext_ln125_cast, i5 %zext_ln65" [Accel.cpp:65]   --->   Operation 37 'add' 'add_ln65' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%p_shl6 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %add_ln65, i3 0" [Accel.cpp:65]   --->   Operation 38 'bitconcatenate' 'p_shl6' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i5.i1, i5 %add_ln65, i1 0" [Accel.cpp:65]   --->   Operation 39 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln65_1 = zext i6 %tmp" [Accel.cpp:65]   --->   Operation 40 'zext' 'zext_ln65_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.70ns)   --->   "%add_ln65_1 = add i8 %p_shl6, i8 %zext_ln65_1" [Accel.cpp:65]   --->   Operation 41 'add' 'add_ln65_1' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln1027 = trunc i4 %select_ln1027_1"   --->   Operation 42 'trunc' 'trunc_ln1027' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%lhs_3_mid2 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i3.i3, i3 %trunc_ln1027, i3 0"   --->   Operation 43 'bitconcatenate' 'lhs_3_mid2' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln65_2 = zext i4 %select_ln1027" [Accel.cpp:65]   --->   Operation 44 'zext' 'zext_ln65_2' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.70ns)   --->   "%add_ln65_2 = add i8 %add_ln65_1, i8 %zext_ln65_2" [Accel.cpp:65]   --->   Operation 45 'add' 'add_ln65_2' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln65_3 = zext i8 %add_ln65_2" [Accel.cpp:65]   --->   Operation 46 'zext' 'zext_ln65_3' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%line_buffer_m_0_addr = getelementptr i2 %line_buffer_m_0, i64 0, i64 %zext_ln65_3" [Accel.cpp:65]   --->   Operation 47 'getelementptr' 'line_buffer_m_0_addr' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%line_buffer_m_1_addr = getelementptr i2 %line_buffer_m_1, i64 0, i64 %zext_ln65_3" [Accel.cpp:65]   --->   Operation 48 'getelementptr' 'line_buffer_m_1_addr' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%line_buffer_m_2_addr = getelementptr i2 %line_buffer_m_2, i64 0, i64 %zext_ln65_3" [Accel.cpp:65]   --->   Operation 49 'getelementptr' 'line_buffer_m_2_addr' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 50 [2/2] (0.59ns)   --->   "%line_buffer_m_0_load = load i8 %line_buffer_m_0_addr" [Accel.cpp:65]   --->   Operation 50 'load' 'line_buffer_m_0_load' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_1 : Operation 51 [1/1] (0.70ns)   --->   "%cc_V = add i4 %select_ln1027, i4 1"   --->   Operation 51 'add' 'cc_V' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln65_4 = zext i4 %cc_V" [Accel.cpp:65]   --->   Operation 52 'zext' 'zext_ln65_4' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.70ns)   --->   "%add_ln65_3 = add i8 %add_ln65_1, i8 %zext_ln65_4" [Accel.cpp:65]   --->   Operation 53 'add' 'add_ln65_3' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln65_5 = zext i8 %add_ln65_3" [Accel.cpp:65]   --->   Operation 54 'zext' 'zext_ln65_5' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%line_buffer_m_0_addr_1 = getelementptr i2 %line_buffer_m_0, i64 0, i64 %zext_ln65_5" [Accel.cpp:65]   --->   Operation 55 'getelementptr' 'line_buffer_m_0_addr_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%line_buffer_m_1_addr_1 = getelementptr i2 %line_buffer_m_1, i64 0, i64 %zext_ln65_5" [Accel.cpp:65]   --->   Operation 56 'getelementptr' 'line_buffer_m_1_addr_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%line_buffer_m_2_addr_1 = getelementptr i2 %line_buffer_m_2, i64 0, i64 %zext_ln65_5" [Accel.cpp:65]   --->   Operation 57 'getelementptr' 'line_buffer_m_2_addr_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 58 [2/2] (0.59ns)   --->   "%line_buffer_m_0_load_1 = load i8 %line_buffer_m_0_addr_1" [Accel.cpp:65]   --->   Operation 58 'load' 'line_buffer_m_0_load_1' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_1 : Operation 59 [1/1] (0.70ns)   --->   "%add_ln1495_1 = add i4 %select_ln1027, i4 2"   --->   Operation 59 'add' 'add_ln1495_1' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln65_6 = zext i4 %add_ln1495_1" [Accel.cpp:65]   --->   Operation 60 'zext' 'zext_ln65_6' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.70ns)   --->   "%add_ln65_4 = add i8 %add_ln65_1, i8 %zext_ln65_6" [Accel.cpp:65]   --->   Operation 61 'add' 'add_ln65_4' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [2/2] (0.59ns)   --->   "%line_buffer_m_1_load = load i8 %line_buffer_m_1_addr" [Accel.cpp:65]   --->   Operation 62 'load' 'line_buffer_m_1_load' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_1 : Operation 63 [2/2] (0.59ns)   --->   "%line_buffer_m_1_load_1 = load i8 %line_buffer_m_1_addr_1" [Accel.cpp:65]   --->   Operation 63 'load' 'line_buffer_m_1_load_1' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_1 : Operation 64 [2/2] (0.59ns)   --->   "%line_buffer_m_2_load = load i8 %line_buffer_m_2_addr" [Accel.cpp:65]   --->   Operation 64 'load' 'line_buffer_m_2_load' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_1 : Operation 65 [2/2] (0.59ns)   --->   "%line_buffer_m_2_load_1 = load i8 %line_buffer_m_2_addr_1" [Accel.cpp:65]   --->   Operation 65 'load' 'line_buffer_m_2_load_1' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln1495 = zext i4 %select_ln1027"   --->   Operation 66 'zext' 'zext_ln1495' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.70ns)   --->   "%ret_V = add i6 %lhs_3_mid2, i6 %zext_ln1495"   --->   Operation 67 'add' 'ret_V' <Predicate = (!icmp_ln1027)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.38ns)   --->   "%store_ln83 = store i7 %add_ln1027, i7 %indvar_flatten" [Accel.cpp:83]   --->   Operation 68 'store' 'store_ln83' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 69 [1/1] (0.38ns)   --->   "%store_ln83 = store i4 %select_ln1027_1, i4 %bank_V" [Accel.cpp:83]   --->   Operation 69 'store' 'store_ln83' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 70 [1/1] (0.38ns)   --->   "%store_ln83 = store i4 %cc_V, i4 %rhs" [Accel.cpp:83]   --->   Operation 70 'store' 'store_ln83' <Predicate = (!icmp_ln1027)> <Delay = 0.38>
ST_1 : Operation 164 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 164 'ret' 'ret_ln0' <Predicate = (icmp_ln1027)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.15>
ST_2 : Operation 71 [1/2] (0.59ns)   --->   "%line_buffer_m_0_load = load i8 %line_buffer_m_0_addr" [Accel.cpp:65]   --->   Operation 71 'load' 'line_buffer_m_0_load' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node tmp_3)   --->   "%trunc_ln779 = trunc i2 %line_buffer_m_0_load"   --->   Operation 72 'trunc' 'trunc_ln779' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node tmp_3)   --->   "%and_ln1497 = and i1 %select_ln186_read, i1 %trunc_ln779"   --->   Operation 73 'and' 'and_ln1497' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node tmp_3)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %line_buffer_m_0_load, i32 1"   --->   Operation 74 'bitselect' 'tmp_2' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node tmp_3)   --->   "%xor_ln829 = xor i1 %and_ln1497, i1 %tmp_2"   --->   Operation 75 'xor' 'xor_ln829' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.12ns) (out node of the LUT)   --->   "%tmp_3 = bitset i2 @_ssdm_op_BitSet.i2.i2.i32.i1, i2 %line_buffer_m_0_load, i32 1, i1 %xor_ln829"   --->   Operation 76 'bitset' 'tmp_3' <Predicate = (!icmp_ln1027)> <Delay = 0.12>
ST_2 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_10)   --->   "%sext_ln1495 = sext i2 %tmp_3"   --->   Operation 77 'sext' 'sext_ln1495' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 78 [1/2] (0.59ns)   --->   "%line_buffer_m_0_load_1 = load i8 %line_buffer_m_0_addr_1" [Accel.cpp:65]   --->   Operation 78 'load' 'line_buffer_m_0_load_1' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_10)   --->   "%trunc_ln779_1 = trunc i2 %line_buffer_m_0_load_1"   --->   Operation 79 'trunc' 'trunc_ln779_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_10)   --->   "%and_ln1497_1 = and i1 %select_ln186_1_read, i1 %trunc_ln779_1"   --->   Operation 80 'and' 'and_ln1497_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_10)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %line_buffer_m_0_load_1, i32 1"   --->   Operation 81 'bitselect' 'tmp_4' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_10)   --->   "%xor_ln829_1 = xor i1 %and_ln1497_1, i1 %tmp_4"   --->   Operation 82 'xor' 'xor_ln829_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_10)   --->   "%tmp_5 = bitset i2 @_ssdm_op_BitSet.i2.i2.i32.i1, i2 %line_buffer_m_0_load_1, i32 1, i1 %xor_ln829_1"   --->   Operation 83 'bitset' 'tmp_5' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_10)   --->   "%sext_ln1495_1 = sext i2 %tmp_5"   --->   Operation 84 'sext' 'sext_ln1495_1' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln65_7 = zext i8 %add_ln65_4" [Accel.cpp:65]   --->   Operation 85 'zext' 'zext_ln65_7' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%line_buffer_m_0_addr_2 = getelementptr i2 %line_buffer_m_0, i64 0, i64 %zext_ln65_7" [Accel.cpp:65]   --->   Operation 86 'getelementptr' 'line_buffer_m_0_addr_2' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%line_buffer_m_1_addr_2 = getelementptr i2 %line_buffer_m_1, i64 0, i64 %zext_ln65_7" [Accel.cpp:65]   --->   Operation 87 'getelementptr' 'line_buffer_m_1_addr_2' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%line_buffer_m_2_addr_2 = getelementptr i2 %line_buffer_m_2, i64 0, i64 %zext_ln65_7" [Accel.cpp:65]   --->   Operation 88 'getelementptr' 'line_buffer_m_2_addr_2' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 89 [2/2] (0.59ns)   --->   "%line_buffer_m_0_load_2 = load i8 %line_buffer_m_0_addr_2" [Accel.cpp:65]   --->   Operation 89 'load' 'line_buffer_m_0_load_2' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 90 [1/2] (0.59ns)   --->   "%line_buffer_m_1_load = load i8 %line_buffer_m_1_addr" [Accel.cpp:65]   --->   Operation 90 'load' 'line_buffer_m_1_load' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node tmp_9)   --->   "%trunc_ln779_3 = trunc i2 %line_buffer_m_1_load"   --->   Operation 91 'trunc' 'trunc_ln779_3' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node tmp_9)   --->   "%and_ln1497_3 = and i1 %select_ln186_3_read, i1 %trunc_ln779_3"   --->   Operation 92 'and' 'and_ln1497_3' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node tmp_9)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %line_buffer_m_1_load, i32 1"   --->   Operation 93 'bitselect' 'tmp_8' <Predicate = (!icmp_ln1027)> <Delay = 0.00>
ST_2 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node tmp_9)   --->   "%xor_ln829_3 = xor i1 %and_ln1497_3, i1 %tmp_8"   --->   Operation 94 'xor' 'xor_ln829_3' <Predicate = (!icmp_ln1027)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 95 [1/1] (0.12ns) (out node of the LUT)   --->   "%tmp_9 = bitset i2 @_ssdm_op_BitSet.i2.i2.i32.i1, i2 %line_buffer_m_1_load, i32 1, i1 %xor_ln829_3"   --->   Operation 95 'bitset' 'tmp_9' <Predicate = (!icmp_ln1027)> <Delay = 0.12>
ST_2 : Operation 96 [1/2] (0.59ns)   --->   "%line_buffer_m_1_load_1 = load i8 %line_buffer_m_1_addr_1" [Accel.cpp:65]   --->   Operation 96 'load' 'line_buffer_m_1_load_1' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 97 [2/2] (0.59ns)   --->   "%line_buffer_m_1_load_2 = load i8 %line_buffer_m_1_addr_2" [Accel.cpp:65]   --->   Operation 97 'load' 'line_buffer_m_1_load_2' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 98 [1/2] (0.59ns)   --->   "%line_buffer_m_2_load = load i8 %line_buffer_m_2_addr" [Accel.cpp:65]   --->   Operation 98 'load' 'line_buffer_m_2_load' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 99 [1/2] (0.59ns)   --->   "%line_buffer_m_2_load_1 = load i8 %line_buffer_m_2_addr_1" [Accel.cpp:65]   --->   Operation 99 'load' 'line_buffer_m_2_load_1' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 100 [2/2] (0.59ns)   --->   "%line_buffer_m_2_load_2 = load i8 %line_buffer_m_2_addr_2" [Accel.cpp:65]   --->   Operation 100 'load' 'line_buffer_m_2_load_2' <Predicate = (!icmp_ln1027)> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_2 : Operation 101 [1/1] (0.43ns) (out node of the LUT)   --->   "%add_ln840_10 = add i3 %sext_ln1495_1, i3 %sext_ln1495"   --->   Operation 101 'add' 'add_ln840_10' <Predicate = (!icmp_ln1027)> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.78>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_82_1_VITIS_LOOP_83_2_str"   --->   Operation 102 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 64, i64 64, i64 64"   --->   Operation 103 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 104 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%specloopname_ln83 = specloopname void @_ssdm_op_SpecLoopName, void @empty_1" [Accel.cpp:83]   --->   Operation 105 'specloopname' 'specloopname_ln83' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 106 [1/2] (0.59ns)   --->   "%line_buffer_m_0_load_2 = load i8 %line_buffer_m_0_addr_2" [Accel.cpp:65]   --->   Operation 106 'load' 'line_buffer_m_0_load_2' <Predicate = true> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_3 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_11)   --->   "%trunc_ln779_2 = trunc i2 %line_buffer_m_0_load_2"   --->   Operation 107 'trunc' 'trunc_ln779_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_11)   --->   "%and_ln1497_2 = and i1 %select_ln186_2_read, i1 %trunc_ln779_2"   --->   Operation 108 'and' 'and_ln1497_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_11)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %line_buffer_m_0_load_2, i32 1"   --->   Operation 109 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_11)   --->   "%xor_ln829_2 = xor i1 %and_ln1497_2, i1 %tmp_6"   --->   Operation 110 'xor' 'xor_ln829_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_11)   --->   "%tmp_7 = bitset i2 @_ssdm_op_BitSet.i2.i2.i32.i1, i2 %line_buffer_m_0_load_2, i32 1, i1 %xor_ln829_2"   --->   Operation 111 'bitset' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_11)   --->   "%sext_ln65 = sext i2 %tmp_7" [Accel.cpp:65]   --->   Operation 112 'sext' 'sext_ln65' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_11)   --->   "%sext_ln65_1 = sext i2 %tmp_9" [Accel.cpp:65]   --->   Operation 113 'sext' 'sext_ln65_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_13)   --->   "%trunc_ln779_4 = trunc i2 %line_buffer_m_1_load_1"   --->   Operation 114 'trunc' 'trunc_ln779_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_13)   --->   "%and_ln1497_4 = and i1 %select_ln186_4_read, i1 %trunc_ln779_4"   --->   Operation 115 'and' 'and_ln1497_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_13)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %line_buffer_m_1_load_1, i32 1"   --->   Operation 116 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_13)   --->   "%xor_ln829_4 = xor i1 %and_ln1497_4, i1 %tmp_10"   --->   Operation 117 'xor' 'xor_ln829_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_13)   --->   "%tmp_11 = bitset i2 @_ssdm_op_BitSet.i2.i2.i32.i1, i2 %line_buffer_m_1_load_1, i32 1, i1 %xor_ln829_4"   --->   Operation 118 'bitset' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_13)   --->   "%sext_ln65_2 = sext i2 %tmp_11" [Accel.cpp:65]   --->   Operation 119 'sext' 'sext_ln65_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/2] (0.59ns)   --->   "%line_buffer_m_1_load_2 = load i8 %line_buffer_m_1_addr_2" [Accel.cpp:65]   --->   Operation 120 'load' 'line_buffer_m_1_load_2' <Predicate = true> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_3 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node tmp_13)   --->   "%trunc_ln779_5 = trunc i2 %line_buffer_m_1_load_2"   --->   Operation 121 'trunc' 'trunc_ln779_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node tmp_13)   --->   "%and_ln1497_5 = and i1 %select_ln186_5_read, i1 %trunc_ln779_5"   --->   Operation 122 'and' 'and_ln1497_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node tmp_13)   --->   "%tmp_12 = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %line_buffer_m_1_load_2, i32 1"   --->   Operation 123 'bitselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node tmp_13)   --->   "%xor_ln829_5 = xor i1 %and_ln1497_5, i1 %tmp_12"   --->   Operation 124 'xor' 'xor_ln829_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 125 [1/1] (0.12ns) (out node of the LUT)   --->   "%tmp_13 = bitset i2 @_ssdm_op_BitSet.i2.i2.i32.i1, i2 %line_buffer_m_1_load_2, i32 1, i1 %xor_ln829_5"   --->   Operation 125 'bitset' 'tmp_13' <Predicate = true> <Delay = 0.12>
ST_3 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_13)   --->   "%sext_ln65_3 = sext i2 %tmp_13" [Accel.cpp:65]   --->   Operation 126 'sext' 'sext_ln65_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_15)   --->   "%trunc_ln779_6 = trunc i2 %line_buffer_m_2_load"   --->   Operation 127 'trunc' 'trunc_ln779_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_15)   --->   "%and_ln1497_6 = and i1 %select_ln186_6_read, i1 %trunc_ln779_6"   --->   Operation 128 'and' 'and_ln1497_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_15)   --->   "%tmp_14 = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %line_buffer_m_2_load, i32 1"   --->   Operation 129 'bitselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_15)   --->   "%xor_ln829_6 = xor i1 %and_ln1497_6, i1 %tmp_14"   --->   Operation 130 'xor' 'xor_ln829_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_15)   --->   "%tmp_15 = bitset i2 @_ssdm_op_BitSet.i2.i2.i32.i1, i2 %line_buffer_m_2_load, i32 1, i1 %xor_ln829_6"   --->   Operation 131 'bitset' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_15)   --->   "%sext_ln65_4 = sext i2 %tmp_15" [Accel.cpp:65]   --->   Operation 132 'sext' 'sext_ln65_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_14)   --->   "%trunc_ln779_7 = trunc i2 %line_buffer_m_2_load_1"   --->   Operation 133 'trunc' 'trunc_ln779_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_14)   --->   "%and_ln1497_7 = and i1 %select_ln186_7_read, i1 %trunc_ln779_7"   --->   Operation 134 'and' 'and_ln1497_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_14)   --->   "%tmp_17 = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %line_buffer_m_2_load_1, i32 1"   --->   Operation 135 'bitselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_14)   --->   "%xor_ln829_7 = xor i1 %and_ln1497_7, i1 %tmp_17"   --->   Operation 136 'xor' 'xor_ln829_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_14)   --->   "%tmp_18 = bitset i2 @_ssdm_op_BitSet.i2.i2.i32.i1, i2 %line_buffer_m_2_load_1, i32 1, i1 %xor_ln829_7"   --->   Operation 137 'bitset' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_14)   --->   "%sext_ln65_5 = sext i2 %tmp_18" [Accel.cpp:65]   --->   Operation 138 'sext' 'sext_ln65_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 139 [1/2] (0.59ns)   --->   "%line_buffer_m_2_load_2 = load i8 %line_buffer_m_2_addr_2" [Accel.cpp:65]   --->   Operation 139 'load' 'line_buffer_m_2_load_2' <Predicate = true> <Delay = 0.59> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.59> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 160> <RAM>
ST_3 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node tmp_20)   --->   "%trunc_ln779_8 = trunc i2 %line_buffer_m_2_load_2"   --->   Operation 140 'trunc' 'trunc_ln779_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node tmp_20)   --->   "%and_ln1497_8 = and i1 %select_ln186_8_read, i1 %trunc_ln779_8"   --->   Operation 141 'and' 'and_ln1497_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node tmp_20)   --->   "%tmp_19 = bitselect i1 @_ssdm_op_BitSelect.i1.i2.i32, i2 %line_buffer_m_2_load_2, i32 1"   --->   Operation 142 'bitselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node tmp_20)   --->   "%xor_ln829_8 = xor i1 %and_ln1497_8, i1 %tmp_19"   --->   Operation 143 'xor' 'xor_ln829_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 144 [1/1] (0.12ns) (out node of the LUT)   --->   "%tmp_20 = bitset i2 @_ssdm_op_BitSet.i2.i2.i32.i1, i2 %line_buffer_m_2_load_2, i32 1, i1 %xor_ln829_8"   --->   Operation 144 'bitset' 'tmp_20' <Predicate = true> <Delay = 0.12>
ST_3 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_14)   --->   "%sext_ln840 = sext i2 %tmp_20"   --->   Operation 145 'sext' 'sext_ln840' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 146 [1/1] (0.00ns)   --->   "%sext_ln840_1 = sext i3 %add_ln840_10"   --->   Operation 146 'sext' 'sext_ln840_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 147 [1/1] (0.43ns) (out node of the LUT)   --->   "%add_ln840_11 = add i3 %sext_ln65, i3 %sext_ln65_1"   --->   Operation 147 'add' 'add_ln840_11' <Predicate = true> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 148 [1/1] (0.00ns)   --->   "%sext_ln840_2 = sext i3 %add_ln840_11"   --->   Operation 148 'sext' 'sext_ln840_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 149 [1/1] (0.57ns)   --->   "%add_ln840_12 = add i4 %sext_ln840_2, i4 %sext_ln840_1"   --->   Operation 149 'add' 'add_ln840_12' <Predicate = true> <Delay = 0.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 150 [1/1] (0.00ns)   --->   "%sext_ln840_3 = sext i4 %add_ln840_12"   --->   Operation 150 'sext' 'sext_ln840_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 151 [1/1] (0.43ns) (out node of the LUT)   --->   "%add_ln840_13 = add i3 %sext_ln65_2, i3 %sext_ln65_3"   --->   Operation 151 'add' 'add_ln840_13' <Predicate = true> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 152 [1/1] (0.00ns)   --->   "%sext_ln840_4 = sext i3 %add_ln840_13"   --->   Operation 152 'sext' 'sext_ln840_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 153 [1/1] (0.43ns) (out node of the LUT)   --->   "%add_ln840_14 = add i3 %sext_ln65_5, i3 %sext_ln840"   --->   Operation 153 'add' 'add_ln840_14' <Predicate = true> <Delay = 0.43> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node add_ln840_15)   --->   "%sext_ln840_5 = sext i3 %add_ln840_14"   --->   Operation 154 'sext' 'sext_ln840_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 155 [1/1] (0.57ns) (out node of the LUT)   --->   "%add_ln840_15 = add i4 %sext_ln840_5, i4 %sext_ln65_4"   --->   Operation 155 'add' 'add_ln840_15' <Predicate = true> <Delay = 0.57> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 156 [1/1] (0.00ns)   --->   "%sext_ln840_6 = sext i4 %add_ln840_15"   --->   Operation 156 'sext' 'sext_ln840_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 157 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln840_16 = add i5 %sext_ln840_6, i5 %sext_ln840_4"   --->   Operation 157 'add' 'add_ln840_16' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.24> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 158 [1/1] (0.49ns) (root node of TernaryAdder)   --->   "%add_ln840_17 = add i5 %add_ln840_16, i5 %sext_ln840_3"   --->   Operation 158 'add' 'add_ln840_17' <Predicate = true> <Delay = 0.49> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.24> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 159 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i1.i6, i1 %word_buffer_m_offset_read, i6 %ret_V" [Accel.cpp:84]   --->   Operation 159 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 160 [1/1] (0.00ns)   --->   "%zext_ln84 = zext i7 %tmp_s" [Accel.cpp:84]   --->   Operation 160 'zext' 'zext_ln84' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 161 [1/1] (0.00ns)   --->   "%conv_out_buffer_m_addr = getelementptr i5 %conv_out_buffer_m, i64 0, i64 %zext_ln84" [Accel.cpp:84]   --->   Operation 161 'getelementptr' 'conv_out_buffer_m_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 162 [1/1] (0.56ns)   --->   "%store_ln84 = store i5 %add_ln840_17, i7 %conv_out_buffer_m_addr" [Accel.cpp:84]   --->   Operation 162 'store' 'store_ln84' <Predicate = true> <Delay = 0.56> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 128> <RAM>
ST_3 : Operation 163 [1/1] (0.00ns)   --->   "%br_ln83 = br void %for.inc.i" [Accel.cpp:83]   --->   Operation 163 'br' 'br_ln83' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.77ns
The critical path consists of the following:
	'alloca' operation ('bank.V') [17]  (0 ns)
	'load' operation ('bank_V_load') on local variable 'bank.V' [43]  (0 ns)
	'add' operation ('add_ln840') [44]  (0.708 ns)
	'select' operation ('select_ln1027_1') [49]  (0.351 ns)
	'add' operation ('add_ln65', Accel.cpp:65) [51]  (0.708 ns)
	'add' operation ('add_ln65_1', Accel.cpp:65) [55]  (0.705 ns)
	'add' operation ('add_ln65_2', Accel.cpp:65) [61]  (0.705 ns)
	'getelementptr' operation ('line_buffer_m_0_addr', Accel.cpp:65) [63]  (0 ns)
	'load' operation ('line_buffer_m_0_load', Accel.cpp:65) on array 'line_buffer_m_0' [66]  (0.594 ns)

 <State 2>: 1.15ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_0_load', Accel.cpp:65) on array 'line_buffer_m_0' [66]  (0.594 ns)
	'add' operation ('add_ln840_10') [143]  (0.436 ns)
	blocking operation 0.122 ns on control path)

 <State 3>: 2.79ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_2_load_2', Accel.cpp:65) on array 'line_buffer_m_2' [136]  (0.594 ns)
	'add' operation ('add_ln840_14') [151]  (0.436 ns)
	'add' operation ('add_ln840_15') [153]  (0.572 ns)
	'add' operation ('add_ln840_16') [155]  (0 ns)
	'add' operation ('add_ln840_17') [156]  (0.493 ns)
	'store' operation ('store_ln84', Accel.cpp:84) of variable 'add_ln840_17' on array 'conv_out_buffer_m' [162]  (0.569 ns)
	blocking operation 0.122 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
