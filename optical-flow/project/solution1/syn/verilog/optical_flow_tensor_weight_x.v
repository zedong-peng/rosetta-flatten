// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module optical_flow_tensor_weight_x (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        tensor_y_dout,
        tensor_y_num_data_valid,
        tensor_y_fifo_cap,
        tensor_y_empty_n,
        tensor_y_read,
        tensor_din,
        tensor_num_data_valid,
        tensor_fifo_cap,
        tensor_full_n,
        tensor_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [191:0] tensor_y_dout;
input  [10:0] tensor_y_num_data_valid;
input  [10:0] tensor_y_fifo_cap;
input   tensor_y_empty_n;
output   tensor_y_read;
output  [191:0] tensor_din;
input  [10:0] tensor_num_data_valid;
input  [10:0] tensor_fifo_cap;
input   tensor_full_n;
output   tensor_write;
output   start_out;
output   start_write;

reg ap_idle;
reg tensor_y_read;
reg tensor_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln316_reg_1154;
reg   [0:0] tmp_25_reg_1158;
reg    ap_predicate_op58_read_state2;
reg   [0:0] icmp_ln348_reg_1172;
reg    ap_predicate_op163_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln316_fu_238_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    tensor_y_blk_n;
wire    ap_block_pp0_stage0;
reg    tensor_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_25_fu_267_p3;
wire   [0:0] and_ln337_fu_297_p2;
reg   [0:0] and_ln337_reg_1162;
wire   [0:0] icmp_ln348_fu_303_p2;
reg  signed [31:0] ap_phi_mux_tmp_val_V_64_phi_fu_163_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_V_64_reg_159;
reg  signed [31:0] ap_phi_mux_tmp_val_V_63_phi_fu_174_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_V_63_reg_170;
reg  signed [31:0] ap_phi_mux_tmp_val_V_62_phi_fu_185_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_V_62_reg_181;
reg  signed [31:0] ap_phi_mux_tmp_val_V_61_phi_fu_196_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_V_61_reg_192;
reg  signed [31:0] ap_phi_mux_tmp_val_V_60_phi_fu_207_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_V_60_reg_203;
reg  signed [31:0] ap_phi_mux_tmp_val_V_59_phi_fu_218_p4;
wire   [31:0] tmp_val_V_fu_343_p1;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_val_V_59_reg_214;
reg  signed [31:0] r_V_fu_90;
reg  signed [31:0] r_V_37_fu_94;
reg  signed [31:0] r_V_39_fu_98;
reg  signed [31:0] r_V_41_fu_102;
reg  signed [31:0] r_V_43_fu_106;
reg  signed [31:0] r_V_45_fu_110;
reg   [10:0] c_fu_114;
wire   [10:0] add_ln318_fu_309_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_c_load;
reg   [18:0] indvar_flatten_fu_118;
wire   [18:0] add_ln316_fu_244_p2;
reg   [18:0] ap_sig_allocacmp_indvar_flatten_load;
reg  signed [31:0] r_V_47_fu_122;
reg  signed [31:0] r_V_49_fu_126;
reg  signed [31:0] r_V_51_fu_130;
reg  signed [31:0] r_V_53_fu_134;
reg  signed [31:0] r_V_55_fu_138;
reg  signed [31:0] r_V_57_fu_142;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln318_fu_253_p2;
wire   [10:0] select_ln316_fu_259_p3;
wire   [9:0] tmp_26_fu_281_p4;
wire   [0:0] icmp_ln337_fu_291_p2;
wire   [0:0] xor_ln323_fu_275_p2;
wire   [18:0] r_V_59_fu_425_p1;
wire   [50:0] r_V_59_fu_425_p2;
wire   [31:0] tmp_fu_431_p4;
wire   [18:0] r_V_61_fu_453_p1;
wire   [50:0] r_V_61_fu_453_p2;
wire   [31:0] tmp_s_fu_459_p4;
wire   [18:0] r_V_63_fu_481_p1;
wire   [50:0] r_V_63_fu_481_p2;
wire   [31:0] tmp_13_fu_487_p4;
wire   [18:0] r_V_65_fu_509_p1;
wire   [50:0] r_V_65_fu_509_p2;
wire   [31:0] tmp_14_fu_515_p4;
wire   [18:0] r_V_67_fu_537_p1;
wire   [50:0] r_V_67_fu_537_p2;
wire   [31:0] tmp_15_fu_543_p4;
wire   [18:0] r_V_69_fu_565_p1;
wire   [50:0] r_V_69_fu_565_p2;
wire   [31:0] tmp_16_fu_571_p4;
wire   [18:0] r_V_72_fu_593_p1;
wire   [50:0] lhs_fu_441_p3;
wire   [50:0] r_V_72_fu_593_p2;
wire   [50:0] ret_V_fu_599_p2;
wire   [31:0] tmp_17_fu_605_p4;
wire   [18:0] r_V_74_fu_627_p1;
wire   [50:0] lhs_16_fu_469_p3;
wire   [50:0] r_V_74_fu_627_p2;
wire   [50:0] ret_V_12_fu_633_p2;
wire   [31:0] tmp_18_fu_639_p4;
wire   [18:0] r_V_76_fu_661_p1;
wire   [50:0] lhs_11_fu_497_p3;
wire   [50:0] r_V_76_fu_661_p2;
wire   [50:0] ret_V_13_fu_667_p2;
wire   [31:0] tmp_19_fu_673_p4;
wire   [18:0] r_V_78_fu_695_p1;
wire   [50:0] lhs_12_fu_525_p3;
wire   [50:0] r_V_78_fu_695_p2;
wire   [50:0] ret_V_14_fu_701_p2;
wire   [31:0] tmp_20_fu_707_p4;
wire   [18:0] r_V_80_fu_729_p1;
wire   [50:0] lhs_13_fu_553_p3;
wire   [50:0] r_V_80_fu_729_p2;
wire   [50:0] ret_V_15_fu_735_p2;
wire   [31:0] tmp_21_fu_741_p4;
wire   [18:0] r_V_82_fu_763_p1;
wire   [50:0] lhs_14_fu_581_p3;
wire   [50:0] r_V_82_fu_763_p2;
wire   [50:0] ret_V_16_fu_769_p2;
wire   [31:0] tmp_22_fu_775_p4;
wire   [18:0] r_V_84_fu_797_p1;
wire   [50:0] r_V_84_fu_797_p2;
wire   [50:0] lhs_15_fu_615_p3;
wire   [50:0] ret_V_17_fu_803_p2;
wire   [18:0] r_V_86_fu_823_p1;
wire   [50:0] r_V_86_fu_823_p2;
wire   [50:0] lhs_21_fu_649_p3;
wire   [50:0] ret_V_18_fu_829_p2;
wire   [18:0] r_V_88_fu_849_p1;
wire   [50:0] r_V_88_fu_849_p2;
wire   [50:0] lhs_17_fu_683_p3;
wire   [50:0] ret_V_19_fu_855_p2;
wire   [18:0] r_V_90_fu_875_p1;
wire   [50:0] r_V_90_fu_875_p2;
wire   [50:0] lhs_18_fu_717_p3;
wire   [50:0] ret_V_20_fu_881_p2;
wire   [18:0] r_V_92_fu_901_p1;
wire   [50:0] r_V_92_fu_901_p2;
wire   [50:0] lhs_19_fu_751_p3;
wire   [50:0] ret_V_21_fu_907_p2;
wire   [18:0] r_V_94_fu_927_p1;
wire   [50:0] r_V_94_fu_927_p2;
wire   [50:0] lhs_20_fu_785_p3;
wire   [50:0] ret_V_22_fu_933_p2;
wire   [31:0] acc_val_V_16_fu_939_p4;
wire   [31:0] acc_val_V_15_fu_913_p4;
wire   [31:0] acc_val_V_14_fu_887_p4;
wire   [31:0] acc_val_V_13_fu_861_p4;
wire   [31:0] acc_val_V_12_fu_835_p4;
wire   [31:0] acc_val_V_fu_809_p4;
wire   [31:0] acc_val_V_22_fu_949_p3;
wire   [31:0] acc_val_V_21_fu_956_p3;
wire   [31:0] acc_val_V_20_fu_963_p3;
wire   [31:0] acc_val_V_19_fu_970_p3;
wire   [31:0] acc_val_V_18_fu_977_p3;
wire   [31:0] acc_val_V_17_fu_984_p3;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_138;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U110(
    .din0(r_V_fu_90),
    .din1(r_V_59_fu_425_p1),
    .dout(r_V_59_fu_425_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U111(
    .din0(r_V_37_fu_94),
    .din1(r_V_61_fu_453_p1),
    .dout(r_V_61_fu_453_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U112(
    .din0(r_V_39_fu_98),
    .din1(r_V_63_fu_481_p1),
    .dout(r_V_63_fu_481_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U113(
    .din0(r_V_41_fu_102),
    .din1(r_V_65_fu_509_p1),
    .dout(r_V_65_fu_509_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U114(
    .din0(r_V_43_fu_106),
    .din1(r_V_67_fu_537_p1),
    .dout(r_V_67_fu_537_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U115(
    .din0(r_V_45_fu_110),
    .din1(r_V_69_fu_565_p1),
    .dout(r_V_69_fu_565_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U116(
    .din0(r_V_47_fu_122),
    .din1(r_V_72_fu_593_p1),
    .dout(r_V_72_fu_593_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U117(
    .din0(r_V_49_fu_126),
    .din1(r_V_74_fu_627_p1),
    .dout(r_V_74_fu_627_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U118(
    .din0(r_V_51_fu_130),
    .din1(r_V_76_fu_661_p1),
    .dout(r_V_76_fu_661_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U119(
    .din0(r_V_53_fu_134),
    .din1(r_V_78_fu_695_p1),
    .dout(r_V_78_fu_695_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U120(
    .din0(r_V_55_fu_138),
    .din1(r_V_80_fu_729_p1),
    .dout(r_V_80_fu_729_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U121(
    .din0(r_V_57_fu_142),
    .din1(r_V_82_fu_763_p1),
    .dout(r_V_82_fu_763_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U122(
    .din0(ap_phi_mux_tmp_val_V_59_phi_fu_218_p4),
    .din1(r_V_84_fu_797_p1),
    .dout(r_V_84_fu_797_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U123(
    .din0(ap_phi_mux_tmp_val_V_60_phi_fu_207_p4),
    .din1(r_V_86_fu_823_p1),
    .dout(r_V_86_fu_823_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U124(
    .din0(ap_phi_mux_tmp_val_V_61_phi_fu_196_p4),
    .din1(r_V_88_fu_849_p1),
    .dout(r_V_88_fu_849_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U125(
    .din0(ap_phi_mux_tmp_val_V_62_phi_fu_185_p4),
    .din1(r_V_90_fu_875_p1),
    .dout(r_V_90_fu_875_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U126(
    .din0(ap_phi_mux_tmp_val_V_63_phi_fu_174_p4),
    .din1(r_V_92_fu_901_p1),
    .dout(r_V_92_fu_901_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U127(
    .din0(ap_phi_mux_tmp_val_V_64_phi_fu_163_p4),
    .din1(r_V_94_fu_927_p1),
    .dout(r_V_94_fu_927_p2)
);

optical_flow_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_138)) begin
        if (((icmp_ln316_fu_238_p2 == 1'd0) & (tmp_25_fu_267_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214 <= ap_phi_reg_pp0_iter0_tmp_val_V_59_reg_214;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_138)) begin
        if (((icmp_ln316_fu_238_p2 == 1'd0) & (tmp_25_fu_267_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203 <= ap_phi_reg_pp0_iter0_tmp_val_V_60_reg_203;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_138)) begin
        if (((icmp_ln316_fu_238_p2 == 1'd0) & (tmp_25_fu_267_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192 <= ap_phi_reg_pp0_iter0_tmp_val_V_61_reg_192;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_138)) begin
        if (((icmp_ln316_fu_238_p2 == 1'd0) & (tmp_25_fu_267_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181 <= ap_phi_reg_pp0_iter0_tmp_val_V_62_reg_181;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_138)) begin
        if (((icmp_ln316_fu_238_p2 == 1'd0) & (tmp_25_fu_267_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170 <= ap_phi_reg_pp0_iter0_tmp_val_V_63_reg_170;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_138)) begin
        if (((icmp_ln316_fu_238_p2 == 1'd0) & (tmp_25_fu_267_p3 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159 <= ap_phi_reg_pp0_iter0_tmp_val_V_64_reg_159;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_138)) begin
        if ((icmp_ln316_fu_238_p2 == 1'd0)) begin
            c_fu_114 <= add_ln318_fu_309_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            c_fu_114 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_138)) begin
        if ((icmp_ln316_fu_238_p2 == 1'd0)) begin
            indvar_flatten_fu_118 <= add_ln316_fu_244_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_118 <= 19'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln316_fu_238_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln337_reg_1162 <= and_ln337_fu_297_p2;
        icmp_ln348_reg_1172 <= icmp_ln348_fu_303_p2;
        tmp_25_reg_1158 <= select_ln316_fu_259_p3[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln316_reg_1154 <= icmp_ln316_fu_238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln316_reg_1154 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_V_37_fu_94 <= r_V_49_fu_126;
        r_V_39_fu_98 <= r_V_51_fu_130;
        r_V_41_fu_102 <= r_V_53_fu_134;
        r_V_43_fu_106 <= r_V_55_fu_138;
        r_V_45_fu_110 <= r_V_57_fu_142;
        r_V_47_fu_122 <= ap_phi_mux_tmp_val_V_59_phi_fu_218_p4;
        r_V_49_fu_126 <= ap_phi_mux_tmp_val_V_60_phi_fu_207_p4;
        r_V_51_fu_130 <= ap_phi_mux_tmp_val_V_61_phi_fu_196_p4;
        r_V_53_fu_134 <= ap_phi_mux_tmp_val_V_62_phi_fu_185_p4;
        r_V_55_fu_138 <= ap_phi_mux_tmp_val_V_63_phi_fu_174_p4;
        r_V_57_fu_142 <= ap_phi_mux_tmp_val_V_64_phi_fu_163_p4;
        r_V_fu_90 <= r_V_47_fu_122;
    end
end

always @ (*) begin
    if (((icmp_ln316_fu_238_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1158 == 1'd0) & (icmp_ln316_reg_1154 == 1'd0))) begin
        ap_phi_mux_tmp_val_V_59_phi_fu_218_p4 = tmp_val_V_fu_343_p1;
    end else begin
        ap_phi_mux_tmp_val_V_59_phi_fu_218_p4 = ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1158 == 1'd0) & (icmp_ln316_reg_1154 == 1'd0))) begin
        ap_phi_mux_tmp_val_V_60_phi_fu_207_p4 = {{tensor_y_dout[63:32]}};
    end else begin
        ap_phi_mux_tmp_val_V_60_phi_fu_207_p4 = ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1158 == 1'd0) & (icmp_ln316_reg_1154 == 1'd0))) begin
        ap_phi_mux_tmp_val_V_61_phi_fu_196_p4 = {{tensor_y_dout[95:64]}};
    end else begin
        ap_phi_mux_tmp_val_V_61_phi_fu_196_p4 = ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1158 == 1'd0) & (icmp_ln316_reg_1154 == 1'd0))) begin
        ap_phi_mux_tmp_val_V_62_phi_fu_185_p4 = {{tensor_y_dout[127:96]}};
    end else begin
        ap_phi_mux_tmp_val_V_62_phi_fu_185_p4 = ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1158 == 1'd0) & (icmp_ln316_reg_1154 == 1'd0))) begin
        ap_phi_mux_tmp_val_V_63_phi_fu_174_p4 = {{tensor_y_dout[159:128]}};
    end else begin
        ap_phi_mux_tmp_val_V_63_phi_fu_174_p4 = ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170;
    end
end

always @ (*) begin
    if (((tmp_25_reg_1158 == 1'd0) & (icmp_ln316_reg_1154 == 1'd0))) begin
        ap_phi_mux_tmp_val_V_64_phi_fu_163_p4 = {{tensor_y_dout[191:160]}};
    end else begin
        ap_phi_mux_tmp_val_V_64_phi_fu_163_p4 = ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_c_load = 11'd0;
    end else begin
        ap_sig_allocacmp_c_load = c_fu_114;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 19'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_118;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op163_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_blk_n = tensor_full_n;
    end else begin
        tensor_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op163_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_write = 1'b1;
    end else begin
        tensor_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op58_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_y_blk_n = tensor_y_empty_n;
    end else begin
        tensor_y_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op58_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tensor_y_read = 1'b1;
    end else begin
        tensor_y_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_val_V_12_fu_835_p4 = {{ret_V_18_fu_829_p2[50:19]}};

assign acc_val_V_13_fu_861_p4 = {{ret_V_19_fu_855_p2[50:19]}};

assign acc_val_V_14_fu_887_p4 = {{ret_V_20_fu_881_p2[50:19]}};

assign acc_val_V_15_fu_913_p4 = {{ret_V_21_fu_907_p2[50:19]}};

assign acc_val_V_16_fu_939_p4 = {{ret_V_22_fu_933_p2[50:19]}};

assign acc_val_V_17_fu_984_p3 = ((and_ln337_reg_1162[0:0] == 1'b1) ? acc_val_V_fu_809_p4 : 32'd0);

assign acc_val_V_18_fu_977_p3 = ((and_ln337_reg_1162[0:0] == 1'b1) ? acc_val_V_12_fu_835_p4 : 32'd0);

assign acc_val_V_19_fu_970_p3 = ((and_ln337_reg_1162[0:0] == 1'b1) ? acc_val_V_13_fu_861_p4 : 32'd0);

assign acc_val_V_20_fu_963_p3 = ((and_ln337_reg_1162[0:0] == 1'b1) ? acc_val_V_14_fu_887_p4 : 32'd0);

assign acc_val_V_21_fu_956_p3 = ((and_ln337_reg_1162[0:0] == 1'b1) ? acc_val_V_15_fu_913_p4 : 32'd0);

assign acc_val_V_22_fu_949_p3 = ((and_ln337_reg_1162[0:0] == 1'b1) ? acc_val_V_16_fu_939_p4 : 32'd0);

assign acc_val_V_fu_809_p4 = {{ret_V_17_fu_803_p2[50:19]}};

assign add_ln316_fu_244_p2 = (ap_sig_allocacmp_indvar_flatten_load + 19'd1);

assign add_ln318_fu_309_p2 = (select_ln316_fu_259_p3 + 11'd1);

assign and_ln337_fu_297_p2 = (xor_ln323_fu_275_p2 & icmp_ln337_fu_291_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op163_write_state2 == 1'b1) & (tensor_full_n == 1'b0)) | ((ap_predicate_op58_read_state2 == 1'b1) & (tensor_y_empty_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op163_write_state2 == 1'b1) & (tensor_full_n == 1'b0)) | ((ap_predicate_op58_read_state2 == 1'b1) & (tensor_y_empty_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op163_write_state2 == 1'b1) & (tensor_full_n == 1'b0)) | ((ap_predicate_op58_read_state2 == 1'b1) & (tensor_y_empty_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op163_write_state2 == 1'b1) & (tensor_full_n == 1'b0)) | ((ap_predicate_op58_read_state2 == 1'b1) & (tensor_y_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_138 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_tmp_val_V_59_reg_214 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_V_60_reg_203 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_V_61_reg_192 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_V_62_reg_181 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_V_63_reg_170 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_val_V_64_reg_159 = 'bx;

always @ (*) begin
    ap_predicate_op163_write_state2 = ((icmp_ln348_reg_1172 == 1'd0) & (icmp_ln316_reg_1154 == 1'd0));
end

always @ (*) begin
    ap_predicate_op58_read_state2 = ((tmp_25_reg_1158 == 1'd0) & (icmp_ln316_reg_1154 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln316_fu_238_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 19'd446900) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_253_p2 = ((ap_sig_allocacmp_c_load == 11'd1025) ? 1'b1 : 1'b0);

assign icmp_ln337_fu_291_p2 = ((tmp_26_fu_281_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln348_fu_303_p2 = ((select_ln316_fu_259_p3 == 11'd0) ? 1'b1 : 1'b0);

assign lhs_11_fu_497_p3 = {{tmp_13_fu_487_p4}, {19'd0}};

assign lhs_12_fu_525_p3 = {{tmp_14_fu_515_p4}, {19'd0}};

assign lhs_13_fu_553_p3 = {{tmp_15_fu_543_p4}, {19'd0}};

assign lhs_14_fu_581_p3 = {{tmp_16_fu_571_p4}, {19'd0}};

assign lhs_15_fu_615_p3 = {{tmp_17_fu_605_p4}, {19'd0}};

assign lhs_16_fu_469_p3 = {{tmp_s_fu_459_p4}, {19'd0}};

assign lhs_17_fu_683_p3 = {{tmp_19_fu_673_p4}, {19'd0}};

assign lhs_18_fu_717_p3 = {{tmp_20_fu_707_p4}, {19'd0}};

assign lhs_19_fu_751_p3 = {{tmp_21_fu_741_p4}, {19'd0}};

assign lhs_20_fu_785_p3 = {{tmp_22_fu_775_p4}, {19'd0}};

assign lhs_21_fu_649_p3 = {{tmp_18_fu_639_p4}, {19'd0}};

assign lhs_fu_441_p3 = {{tmp_fu_431_p4}, {19'd0}};

assign r_V_59_fu_425_p1 = 51'd170026;

assign r_V_61_fu_453_p1 = 51'd170026;

assign r_V_63_fu_481_p1 = 51'd170026;

assign r_V_65_fu_509_p1 = 51'd170026;

assign r_V_67_fu_537_p1 = 51'd170026;

assign r_V_69_fu_565_p1 = 51'd170026;

assign r_V_72_fu_593_p1 = 51'd184182;

assign r_V_74_fu_627_p1 = 51'd184182;

assign r_V_76_fu_661_p1 = 51'd184182;

assign r_V_78_fu_695_p1 = 51'd184182;

assign r_V_80_fu_729_p1 = 51'd184182;

assign r_V_82_fu_763_p1 = 51'd184182;

assign r_V_84_fu_797_p1 = 51'd170026;

assign r_V_86_fu_823_p1 = 51'd170026;

assign r_V_88_fu_849_p1 = 51'd170026;

assign r_V_90_fu_875_p1 = 51'd170026;

assign r_V_92_fu_901_p1 = 51'd170026;

assign r_V_94_fu_927_p1 = 51'd170026;

assign ret_V_12_fu_633_p2 = (lhs_16_fu_469_p3 + r_V_74_fu_627_p2);

assign ret_V_13_fu_667_p2 = (lhs_11_fu_497_p3 + r_V_76_fu_661_p2);

assign ret_V_14_fu_701_p2 = (lhs_12_fu_525_p3 + r_V_78_fu_695_p2);

assign ret_V_15_fu_735_p2 = (lhs_13_fu_553_p3 + r_V_80_fu_729_p2);

assign ret_V_16_fu_769_p2 = (lhs_14_fu_581_p3 + r_V_82_fu_763_p2);

assign ret_V_17_fu_803_p2 = (r_V_84_fu_797_p2 + lhs_15_fu_615_p3);

assign ret_V_18_fu_829_p2 = (r_V_86_fu_823_p2 + lhs_21_fu_649_p3);

assign ret_V_19_fu_855_p2 = (r_V_88_fu_849_p2 + lhs_17_fu_683_p3);

assign ret_V_20_fu_881_p2 = (r_V_90_fu_875_p2 + lhs_18_fu_717_p3);

assign ret_V_21_fu_907_p2 = (r_V_92_fu_901_p2 + lhs_19_fu_751_p3);

assign ret_V_22_fu_933_p2 = (r_V_94_fu_927_p2 + lhs_20_fu_785_p3);

assign ret_V_fu_599_p2 = (lhs_fu_441_p3 + r_V_72_fu_593_p2);

assign select_ln316_fu_259_p3 = ((icmp_ln318_fu_253_p2[0:0] == 1'b1) ? 11'd0 : ap_sig_allocacmp_c_load);

assign start_out = real_start;

assign tensor_din = {{{{{{acc_val_V_22_fu_949_p3}, {acc_val_V_21_fu_956_p3}}, {acc_val_V_20_fu_963_p3}}, {acc_val_V_19_fu_970_p3}}, {acc_val_V_18_fu_977_p3}}, {acc_val_V_17_fu_984_p3}};

assign tmp_13_fu_487_p4 = {{r_V_63_fu_481_p2[50:19]}};

assign tmp_14_fu_515_p4 = {{r_V_65_fu_509_p2[50:19]}};

assign tmp_15_fu_543_p4 = {{r_V_67_fu_537_p2[50:19]}};

assign tmp_16_fu_571_p4 = {{r_V_69_fu_565_p2[50:19]}};

assign tmp_17_fu_605_p4 = {{ret_V_fu_599_p2[50:19]}};

assign tmp_18_fu_639_p4 = {{ret_V_12_fu_633_p2[50:19]}};

assign tmp_19_fu_673_p4 = {{ret_V_13_fu_667_p2[50:19]}};

assign tmp_20_fu_707_p4 = {{ret_V_14_fu_701_p2[50:19]}};

assign tmp_21_fu_741_p4 = {{ret_V_15_fu_735_p2[50:19]}};

assign tmp_22_fu_775_p4 = {{ret_V_16_fu_769_p2[50:19]}};

assign tmp_25_fu_267_p3 = select_ln316_fu_259_p3[32'd10];

assign tmp_26_fu_281_p4 = {{select_ln316_fu_259_p3[10:1]}};

assign tmp_fu_431_p4 = {{r_V_59_fu_425_p2[50:19]}};

assign tmp_s_fu_459_p4 = {{r_V_61_fu_453_p2[50:19]}};

assign tmp_val_V_fu_343_p1 = tensor_y_dout[31:0];

assign xor_ln323_fu_275_p2 = (tmp_25_fu_267_p3 ^ 1'd1);

endmodule //optical_flow_tensor_weight_x
