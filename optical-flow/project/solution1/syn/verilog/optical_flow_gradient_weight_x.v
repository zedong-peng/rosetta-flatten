// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module optical_flow_gradient_weight_x (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        y_filtered_x_V_dout,
        y_filtered_x_V_num_data_valid,
        y_filtered_x_V_fifo_cap,
        y_filtered_x_V_empty_n,
        y_filtered_x_V_read,
        y_filtered_y_V_dout,
        y_filtered_y_V_num_data_valid,
        y_filtered_y_V_fifo_cap,
        y_filtered_y_V_empty_n,
        y_filtered_y_V_read,
        y_filtered_z_V_dout,
        y_filtered_z_V_num_data_valid,
        y_filtered_z_V_fifo_cap,
        y_filtered_z_V_empty_n,
        y_filtered_z_V_read,
        filtered_gradient_x_V_din,
        filtered_gradient_x_V_num_data_valid,
        filtered_gradient_x_V_fifo_cap,
        filtered_gradient_x_V_full_n,
        filtered_gradient_x_V_write,
        filtered_gradient_y_V_din,
        filtered_gradient_y_V_num_data_valid,
        filtered_gradient_y_V_fifo_cap,
        filtered_gradient_y_V_full_n,
        filtered_gradient_y_V_write,
        filtered_gradient_z_V_din,
        filtered_gradient_z_V_num_data_valid,
        filtered_gradient_z_V_fifo_cap,
        filtered_gradient_z_V_full_n,
        filtered_gradient_z_V_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] y_filtered_x_V_dout;
input  [10:0] y_filtered_x_V_num_data_valid;
input  [10:0] y_filtered_x_V_fifo_cap;
input   y_filtered_x_V_empty_n;
output   y_filtered_x_V_read;
input  [31:0] y_filtered_y_V_dout;
input  [10:0] y_filtered_y_V_num_data_valid;
input  [10:0] y_filtered_y_V_fifo_cap;
input   y_filtered_y_V_empty_n;
output   y_filtered_y_V_read;
input  [31:0] y_filtered_z_V_dout;
input  [10:0] y_filtered_z_V_num_data_valid;
input  [10:0] y_filtered_z_V_fifo_cap;
input   y_filtered_z_V_empty_n;
output   y_filtered_z_V_read;
output  [31:0] filtered_gradient_x_V_din;
input  [10:0] filtered_gradient_x_V_num_data_valid;
input  [10:0] filtered_gradient_x_V_fifo_cap;
input   filtered_gradient_x_V_full_n;
output   filtered_gradient_x_V_write;
output  [31:0] filtered_gradient_y_V_din;
input  [10:0] filtered_gradient_y_V_num_data_valid;
input  [10:0] filtered_gradient_y_V_fifo_cap;
input   filtered_gradient_y_V_full_n;
output   filtered_gradient_y_V_write;
output  [31:0] filtered_gradient_z_V_din;
input  [10:0] filtered_gradient_z_V_num_data_valid;
input  [10:0] filtered_gradient_z_V_fifo_cap;
input   filtered_gradient_z_V_full_n;
output   filtered_gradient_z_V_write;
output   start_out;
output   start_write;

reg ap_idle;
reg y_filtered_x_V_read;
reg y_filtered_y_V_read;
reg y_filtered_z_V_read;
reg[31:0] filtered_gradient_x_V_din;
reg filtered_gradient_x_V_write;
reg[31:0] filtered_gradient_y_V_din;
reg filtered_gradient_y_V_write;
reg[31:0] filtered_gradient_z_V_din;
reg filtered_gradient_z_V_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln193_reg_1348;
reg   [0:0] tmp_66_reg_1352;
reg    ap_predicate_op91_read_state2;
reg    ap_predicate_op92_read_state2;
reg    ap_predicate_op93_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] and_ln216_reg_1356;
reg   [0:0] and_ln216_reg_1356_pp0_iter1_reg;
reg   [0:0] icmp_ln226_reg_1360;
reg   [0:0] icmp_ln226_reg_1360_pp0_iter1_reg;
reg    ap_predicate_op201_write_state3;
reg    ap_predicate_op202_write_state3;
reg    ap_predicate_op203_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln193_fu_264_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    y_filtered_x_V_blk_n;
wire    ap_block_pp0_stage0;
reg    y_filtered_y_V_blk_n;
reg    y_filtered_z_V_blk_n;
reg    filtered_gradient_x_V_blk_n;
reg    filtered_gradient_y_V_blk_n;
reg    filtered_gradient_z_V_blk_n;
reg  signed [31:0] tmp_x_V_2_reg_212;
reg  signed [31:0] tmp_y_V_2_reg_225;
reg  signed [31:0] tmp_z_V_2_reg_238;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_66_fu_293_p3;
wire   [0:0] and_ln216_fu_313_p2;
wire   [0:0] icmp_ln226_fu_319_p2;
reg  signed [31:0] r_V_184_reg_1364;
reg  signed [31:0] r_V_186_reg_1369;
reg  signed [31:0] r_V_188_reg_1374;
reg   [31:0] tmp_39_reg_1379;
reg   [31:0] tmp_40_reg_1384;
reg   [31:0] tmp_41_reg_1389;
reg    ap_condition_exit_pp0_iter1_stage0;
reg  signed [31:0] ap_phi_mux_tmp_x_V_2_phi_fu_216_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_x_V_2_reg_212;
reg  signed [31:0] ap_phi_mux_tmp_y_V_2_phi_fu_229_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_y_V_2_reg_225;
reg  signed [31:0] ap_phi_mux_tmp_z_V_2_phi_fu_242_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_z_V_2_reg_238;
reg  signed [31:0] r_V_fu_90;
reg  signed [31:0] r_V_120_fu_94;
reg  signed [31:0] r_V_122_fu_98;
reg   [10:0] c_fu_102;
wire   [10:0] add_ln195_fu_325_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_c_load;
reg   [18:0] indvar_flatten_fu_106;
wire   [18:0] add_ln193_fu_270_p2;
reg   [18:0] ap_sig_allocacmp_indvar_flatten_load;
reg  signed [31:0] r_V_124_fu_110;
reg  signed [31:0] r_V_126_fu_114;
reg  signed [31:0] r_V_128_fu_118;
reg  signed [31:0] r_V_130_fu_122;
reg  signed [31:0] r_V_132_fu_126;
reg  signed [31:0] r_V_134_fu_130;
reg  signed [31:0] r_V_136_fu_134;
reg  signed [31:0] r_V_138_fu_138;
reg  signed [31:0] r_V_140_fu_142;
reg  signed [31:0] r_V_142_fu_146;
reg  signed [31:0] r_V_144_fu_150;
reg  signed [31:0] r_V_146_fu_154;
reg   [31:0] r_V_148_fu_158;
reg   [31:0] r_V_150_fu_162;
reg   [31:0] r_V_152_fu_166;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln195_fu_279_p2;
wire   [10:0] select_ln193_fu_285_p3;
wire   [0:0] icmp_ln216_fu_307_p2;
wire   [0:0] xor_ln200_fu_301_p2;
wire   [16:0] r_V_154_fu_399_p1;
wire   [48:0] r_V_154_fu_399_p2;
wire   [16:0] r_V_156_fu_419_p1;
wire   [48:0] r_V_156_fu_419_p2;
wire   [16:0] r_V_158_fu_439_p1;
wire   [48:0] r_V_158_fu_439_p2;
wire   [17:0] r_V_161_fu_459_p1;
wire   [29:0] acc_x_V_4_fu_405_p4;
wire   [48:0] lhs_28_fu_465_p3;
wire  signed [49:0] sext_ln1347_fu_473_p1;
wire   [49:0] r_V_161_fu_459_p2;
wire   [49:0] ret_V_fu_477_p2;
wire   [30:0] tmp_fu_483_p4;
wire   [49:0] tmp_67_fu_493_p3;
wire   [17:0] r_V_163_fu_509_p1;
wire   [29:0] acc_y_V_4_fu_425_p4;
wire   [48:0] lhs_V_14_fu_515_p3;
wire  signed [49:0] sext_ln1347_3_fu_523_p1;
wire   [49:0] r_V_163_fu_509_p2;
wire   [49:0] ret_V_40_fu_527_p2;
wire   [30:0] tmp_68_fu_533_p4;
wire   [49:0] tmp_69_fu_543_p3;
wire   [17:0] r_V_165_fu_559_p1;
wire   [29:0] acc_z_V_4_fu_445_p4;
wire   [48:0] lhs_V_16_fu_565_p3;
wire  signed [49:0] sext_ln1347_4_fu_573_p1;
wire   [49:0] r_V_165_fu_559_p2;
wire   [49:0] ret_V_41_fu_577_p2;
wire   [30:0] tmp_70_fu_583_p4;
wire   [49:0] tmp_71_fu_593_p3;
wire   [17:0] r_V_167_fu_609_p1;
wire   [49:0] r_V_167_fu_609_p2;
wire  signed [50:0] lhs_29_fu_501_p1;
wire  signed [50:0] sext_ln813_fu_615_p1;
wire   [50:0] ret_V_42_fu_619_p2;
wire   [31:0] tmp_s_fu_625_p4;
wire   [17:0] r_V_169_fu_647_p1;
wire   [49:0] r_V_169_fu_647_p2;
wire  signed [50:0] lhs_V_17_fu_551_p1;
wire  signed [50:0] sext_ln813_12_fu_653_p1;
wire   [50:0] ret_V_43_fu_657_p2;
wire   [31:0] tmp_34_fu_663_p4;
wire   [17:0] r_V_171_fu_685_p1;
wire   [49:0] r_V_171_fu_685_p2;
wire  signed [50:0] lhs_V_19_fu_601_p1;
wire  signed [50:0] sext_ln813_13_fu_691_p1;
wire   [50:0] ret_V_44_fu_695_p2;
wire   [31:0] tmp_35_fu_701_p4;
wire   [18:0] r_V_173_fu_723_p1;
wire   [50:0] lhs_30_fu_635_p3;
wire   [50:0] r_V_173_fu_723_p2;
wire   [50:0] ret_V_45_fu_729_p2;
wire   [31:0] tmp_36_fu_735_p4;
wire   [18:0] r_V_175_fu_757_p1;
wire   [50:0] lhs_V_26_fu_673_p3;
wire   [50:0] r_V_175_fu_757_p2;
wire   [50:0] ret_V_46_fu_763_p2;
wire   [31:0] tmp_37_fu_769_p4;
wire   [18:0] r_V_177_fu_791_p1;
wire   [50:0] lhs_V_13_fu_711_p3;
wire   [50:0] r_V_177_fu_791_p2;
wire   [50:0] ret_V_47_fu_797_p2;
wire   [31:0] tmp_38_fu_803_p4;
wire   [17:0] r_V_179_fu_825_p1;
wire   [49:0] r_V_179_fu_825_p2;
wire   [50:0] lhs_31_fu_745_p3;
wire  signed [50:0] sext_ln813_14_fu_831_p1;
wire   [50:0] ret_V_48_fu_835_p2;
wire   [17:0] r_V_181_fu_855_p1;
wire   [49:0] r_V_181_fu_855_p2;
wire   [50:0] lhs_V_27_fu_779_p3;
wire  signed [50:0] sext_ln813_15_fu_861_p1;
wire   [50:0] ret_V_49_fu_865_p2;
wire   [17:0] r_V_183_fu_885_p1;
wire   [49:0] r_V_183_fu_885_p2;
wire   [50:0] lhs_V_18_fu_813_p3;
wire  signed [50:0] sext_ln813_16_fu_891_p1;
wire   [50:0] ret_V_50_fu_895_p2;
wire   [17:0] r_V_185_fu_1025_p1;
wire   [49:0] r_V_185_fu_1025_p2;
wire   [50:0] lhs_32_fu_1001_p3;
wire  signed [50:0] sext_ln813_17_fu_1031_p1;
wire   [50:0] ret_V_51_fu_1035_p2;
wire   [31:0] tmp_42_fu_1041_p4;
wire   [17:0] r_V_187_fu_1062_p1;
wire   [49:0] r_V_187_fu_1062_p2;
wire   [50:0] lhs_V_28_fu_1008_p3;
wire  signed [50:0] sext_ln813_18_fu_1068_p1;
wire   [50:0] ret_V_52_fu_1072_p2;
wire   [31:0] tmp_43_fu_1078_p4;
wire   [17:0] r_V_189_fu_1099_p1;
wire   [49:0] r_V_189_fu_1099_p2;
wire   [50:0] lhs_V_20_fu_1015_p3;
wire  signed [50:0] sext_ln813_19_fu_1105_p1;
wire   [50:0] ret_V_53_fu_1109_p2;
wire   [31:0] tmp_44_fu_1115_p4;
wire   [16:0] r_V_191_fu_1137_p1;
wire   [48:0] r_V_191_fu_1137_p2;
wire   [50:0] lhs_33_fu_1051_p3;
wire  signed [50:0] sext_ln813_20_fu_1143_p1;
wire   [50:0] ret_V_54_fu_1147_p2;
wire   [16:0] r_V_193_fu_1168_p1;
wire   [48:0] r_V_193_fu_1168_p2;
wire   [50:0] lhs_V_29_fu_1088_p3;
wire  signed [50:0] sext_ln813_21_fu_1174_p1;
wire   [50:0] ret_V_55_fu_1178_p2;
wire   [16:0] r_V_195_fu_1199_p1;
wire   [48:0] r_V_195_fu_1199_p2;
wire   [50:0] lhs_V_21_fu_1125_p3;
wire  signed [50:0] sext_ln813_22_fu_1205_p1;
wire   [50:0] ret_V_56_fu_1209_p2;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_233;
reg    ap_condition_228;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U51(
    .din0(r_V_fu_90),
    .din1(r_V_154_fu_399_p1),
    .dout(r_V_154_fu_399_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U52(
    .din0(r_V_120_fu_94),
    .din1(r_V_156_fu_419_p1),
    .dout(r_V_156_fu_419_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U53(
    .din0(r_V_122_fu_98),
    .din1(r_V_158_fu_439_p1),
    .dout(r_V_158_fu_439_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U54(
    .din0(r_V_124_fu_110),
    .din1(r_V_161_fu_459_p1),
    .dout(r_V_161_fu_459_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U55(
    .din0(r_V_126_fu_114),
    .din1(r_V_163_fu_509_p1),
    .dout(r_V_163_fu_509_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U56(
    .din0(r_V_128_fu_118),
    .din1(r_V_165_fu_559_p1),
    .dout(r_V_165_fu_559_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U57(
    .din0(r_V_130_fu_122),
    .din1(r_V_167_fu_609_p1),
    .dout(r_V_167_fu_609_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U58(
    .din0(r_V_132_fu_126),
    .din1(r_V_169_fu_647_p1),
    .dout(r_V_169_fu_647_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U59(
    .din0(r_V_134_fu_130),
    .din1(r_V_171_fu_685_p1),
    .dout(r_V_171_fu_685_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U60(
    .din0(r_V_136_fu_134),
    .din1(r_V_173_fu_723_p1),
    .dout(r_V_173_fu_723_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U61(
    .din0(r_V_138_fu_138),
    .din1(r_V_175_fu_757_p1),
    .dout(r_V_175_fu_757_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U62(
    .din0(r_V_140_fu_142),
    .din1(r_V_177_fu_791_p1),
    .dout(r_V_177_fu_791_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U63(
    .din0(r_V_142_fu_146),
    .din1(r_V_179_fu_825_p1),
    .dout(r_V_179_fu_825_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U64(
    .din0(r_V_144_fu_150),
    .din1(r_V_181_fu_855_p1),
    .dout(r_V_181_fu_855_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U65(
    .din0(r_V_146_fu_154),
    .din1(r_V_183_fu_885_p1),
    .dout(r_V_183_fu_885_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U66(
    .din0(r_V_184_reg_1364),
    .din1(r_V_185_fu_1025_p1),
    .dout(r_V_185_fu_1025_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U67(
    .din0(r_V_186_reg_1369),
    .din1(r_V_187_fu_1062_p1),
    .dout(r_V_187_fu_1062_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U68(
    .din0(r_V_188_reg_1374),
    .din1(r_V_189_fu_1099_p1),
    .dout(r_V_189_fu_1099_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U69(
    .din0(tmp_x_V_2_reg_212),
    .din1(r_V_191_fu_1137_p1),
    .dout(r_V_191_fu_1137_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U70(
    .din0(tmp_y_V_2_reg_225),
    .din1(r_V_193_fu_1168_p1),
    .dout(r_V_193_fu_1168_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U71(
    .din0(tmp_z_V_2_reg_238),
    .din1(r_V_195_fu_1199_p1),
    .dout(r_V_195_fu_1199_p2)
);

optical_flow_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_233)) begin
        if (((tmp_66_fu_293_p3 == 1'd1) & (icmp_ln193_fu_264_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212 <= ap_phi_reg_pp0_iter0_tmp_x_V_2_reg_212;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_233)) begin
        if (((tmp_66_fu_293_p3 == 1'd1) & (icmp_ln193_fu_264_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225 <= ap_phi_reg_pp0_iter0_tmp_y_V_2_reg_225;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_233)) begin
        if (((tmp_66_fu_293_p3 == 1'd1) & (icmp_ln193_fu_264_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238 <= ap_phi_reg_pp0_iter0_tmp_z_V_2_reg_238;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_233)) begin
        if ((icmp_ln193_fu_264_p2 == 1'd0)) begin
            c_fu_102 <= add_ln195_fu_325_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            c_fu_102 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_233)) begin
        if ((icmp_ln193_fu_264_p2 == 1'd0)) begin
            indvar_flatten_fu_106 <= add_ln193_fu_270_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_106 <= 19'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if (((tmp_66_reg_1352 == 1'd0) & (icmp_ln193_reg_1348 == 1'd0))) begin
            tmp_x_V_2_reg_212 <= y_filtered_x_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            tmp_x_V_2_reg_212 <= ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if (((tmp_66_reg_1352 == 1'd0) & (icmp_ln193_reg_1348 == 1'd0))) begin
            tmp_y_V_2_reg_225 <= y_filtered_y_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            tmp_y_V_2_reg_225 <= ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if (((tmp_66_reg_1352 == 1'd0) & (icmp_ln193_reg_1348 == 1'd0))) begin
            tmp_z_V_2_reg_238 <= y_filtered_z_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            tmp_z_V_2_reg_238 <= ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln193_fu_264_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln216_reg_1356 <= and_ln216_fu_313_p2;
        tmp_66_reg_1352 <= select_ln193_fu_285_p3[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln216_reg_1356_pp0_iter1_reg <= and_ln216_reg_1356;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln193_reg_1348 <= icmp_ln193_fu_264_p2;
        icmp_ln226_reg_1360_pp0_iter1_reg <= icmp_ln226_reg_1360;
        r_V_184_reg_1364 <= r_V_148_fu_158;
        r_V_186_reg_1369 <= r_V_150_fu_162;
        r_V_188_reg_1374 <= r_V_152_fu_166;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln216_fu_313_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln193_fu_264_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln226_reg_1360 <= icmp_ln226_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln193_reg_1348 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_120_fu_94 <= r_V_126_fu_114;
        r_V_122_fu_98 <= r_V_128_fu_118;
        r_V_124_fu_110 <= r_V_130_fu_122;
        r_V_126_fu_114 <= r_V_132_fu_126;
        r_V_128_fu_118 <= r_V_134_fu_130;
        r_V_130_fu_122 <= r_V_136_fu_134;
        r_V_132_fu_126 <= r_V_138_fu_138;
        r_V_134_fu_130 <= r_V_140_fu_142;
        r_V_136_fu_134 <= r_V_142_fu_146;
        r_V_138_fu_138 <= r_V_144_fu_150;
        r_V_140_fu_142 <= r_V_146_fu_154;
        r_V_142_fu_146 <= r_V_148_fu_158;
        r_V_144_fu_150 <= r_V_150_fu_162;
        r_V_146_fu_154 <= r_V_152_fu_166;
        r_V_148_fu_158 <= ap_phi_mux_tmp_x_V_2_phi_fu_216_p4;
        r_V_150_fu_162 <= ap_phi_mux_tmp_y_V_2_phi_fu_229_p4;
        r_V_152_fu_166 <= ap_phi_mux_tmp_z_V_2_phi_fu_242_p4;
        r_V_fu_90 <= r_V_124_fu_110;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln216_reg_1356) & (icmp_ln193_reg_1348 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_39_reg_1379 <= {{ret_V_48_fu_835_p2[50:19]}};
        tmp_40_reg_1384 <= {{ret_V_49_fu_865_p2[50:19]}};
        tmp_41_reg_1389 <= {{ret_V_50_fu_895_p2[50:19]}};
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln193_fu_264_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln193_reg_1348 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_66_reg_1352 == 1'd0) & (icmp_ln193_reg_1348 == 1'd0))) begin
        ap_phi_mux_tmp_x_V_2_phi_fu_216_p4 = y_filtered_x_V_dout;
    end else begin
        ap_phi_mux_tmp_x_V_2_phi_fu_216_p4 = ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212;
    end
end

always @ (*) begin
    if (((tmp_66_reg_1352 == 1'd0) & (icmp_ln193_reg_1348 == 1'd0))) begin
        ap_phi_mux_tmp_y_V_2_phi_fu_229_p4 = y_filtered_y_V_dout;
    end else begin
        ap_phi_mux_tmp_y_V_2_phi_fu_229_p4 = ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225;
    end
end

always @ (*) begin
    if (((tmp_66_reg_1352 == 1'd0) & (icmp_ln193_reg_1348 == 1'd0))) begin
        ap_phi_mux_tmp_z_V_2_phi_fu_242_p4 = y_filtered_z_V_dout;
    end else begin
        ap_phi_mux_tmp_z_V_2_phi_fu_242_p4 = ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_c_load = 11'd0;
    end else begin
        ap_sig_allocacmp_c_load = c_fu_102;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 19'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_106;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op201_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        filtered_gradient_x_V_blk_n = filtered_gradient_x_V_full_n;
    end else begin
        filtered_gradient_x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg)) begin
            filtered_gradient_x_V_din = {{ret_V_54_fu_1147_p2[50:19]}};
        end else if ((ap_predicate_op201_write_state3 == 1'b1)) begin
            filtered_gradient_x_V_din = 32'd0;
        end else begin
            filtered_gradient_x_V_din = 'bx;
        end
    end else begin
        filtered_gradient_x_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op201_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        filtered_gradient_x_V_write = 1'b1;
    end else begin
        filtered_gradient_x_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op202_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        filtered_gradient_y_V_blk_n = filtered_gradient_y_V_full_n;
    end else begin
        filtered_gradient_y_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg)) begin
            filtered_gradient_y_V_din = {{ret_V_55_fu_1178_p2[50:19]}};
        end else if ((ap_predicate_op202_write_state3 == 1'b1)) begin
            filtered_gradient_y_V_din = 32'd0;
        end else begin
            filtered_gradient_y_V_din = 'bx;
        end
    end else begin
        filtered_gradient_y_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op202_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        filtered_gradient_y_V_write = 1'b1;
    end else begin
        filtered_gradient_y_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op203_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        filtered_gradient_z_V_blk_n = filtered_gradient_z_V_full_n;
    end else begin
        filtered_gradient_z_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg)) begin
            filtered_gradient_z_V_din = {{ret_V_56_fu_1209_p2[50:19]}};
        end else if ((ap_predicate_op203_write_state3 == 1'b1)) begin
            filtered_gradient_z_V_din = 32'd0;
        end else begin
            filtered_gradient_z_V_din = 'bx;
        end
    end else begin
        filtered_gradient_z_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op203_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        filtered_gradient_z_V_write = 1'b1;
    end else begin
        filtered_gradient_z_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op91_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        y_filtered_x_V_blk_n = y_filtered_x_V_empty_n;
    end else begin
        y_filtered_x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op91_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_filtered_x_V_read = 1'b1;
    end else begin
        y_filtered_x_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op92_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        y_filtered_y_V_blk_n = y_filtered_y_V_empty_n;
    end else begin
        y_filtered_y_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op92_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_filtered_y_V_read = 1'b1;
    end else begin
        y_filtered_y_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op93_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        y_filtered_z_V_blk_n = y_filtered_z_V_empty_n;
    end else begin
        y_filtered_z_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op93_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_filtered_z_V_read = 1'b1;
    end else begin
        y_filtered_z_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_x_V_4_fu_405_p4 = {{r_V_154_fu_399_p2[48:19]}};

assign acc_y_V_4_fu_425_p4 = {{r_V_156_fu_419_p2[48:19]}};

assign acc_z_V_4_fu_445_p4 = {{r_V_158_fu_439_p2[48:19]}};

assign add_ln193_fu_270_p2 = (ap_sig_allocacmp_indvar_flatten_load + 19'd1);

assign add_ln195_fu_325_p2 = (select_ln193_fu_285_p3 + 11'd1);

assign and_ln216_fu_313_p2 = (xor_ln200_fu_301_p2 & icmp_ln216_fu_307_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op93_read_state2 == 1'b1) & (y_filtered_z_V_empty_n == 1'b0)) | ((ap_predicate_op92_read_state2 == 1'b1) & (y_filtered_y_V_empty_n == 1'b0)) | ((ap_predicate_op91_read_state2 == 1'b1) & (y_filtered_x_V_empty_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((filtered_gradient_x_V_full_n == 1'b0) & (ap_predicate_op201_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_x_V_full_n == 1'b0)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_z_V_full_n == 1'b0)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_y_V_full_n == 1'b0)) | ((ap_predicate_op203_write_state3 == 1'b1) & (filtered_gradient_z_V_full_n == 1'b0)) | ((ap_predicate_op202_write_state3 == 1'b1) & (filtered_gradient_y_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op93_read_state2 == 1'b1) & (y_filtered_z_V_empty_n == 1'b0)) | ((ap_predicate_op92_read_state2 == 1'b1) & (y_filtered_y_V_empty_n == 1'b0)) | ((ap_predicate_op91_read_state2 == 1'b1) & (y_filtered_x_V_empty_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((filtered_gradient_x_V_full_n == 1'b0) & (ap_predicate_op201_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_x_V_full_n == 1'b0)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_z_V_full_n == 1'b0)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_y_V_full_n == 1'b0)) | ((ap_predicate_op203_write_state3 == 1'b1) & (filtered_gradient_z_V_full_n == 1'b0)) | ((ap_predicate_op202_write_state3 == 1'b1) & (filtered_gradient_y_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op93_read_state2 == 1'b1) & (y_filtered_z_V_empty_n == 1'b0)) | ((ap_predicate_op92_read_state2 == 1'b1) & (y_filtered_y_V_empty_n == 1'b0)) | ((ap_predicate_op91_read_state2 == 1'b1) & (y_filtered_x_V_empty_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((filtered_gradient_x_V_full_n == 1'b0) & (ap_predicate_op201_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_x_V_full_n == 1'b0)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_z_V_full_n == 1'b0)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_y_V_full_n == 1'b0)) | ((ap_predicate_op203_write_state3 == 1'b1) & (filtered_gradient_z_V_full_n == 1'b0)) | ((ap_predicate_op202_write_state3 == 1'b1) & (filtered_gradient_y_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op93_read_state2 == 1'b1) & (y_filtered_z_V_empty_n == 1'b0)) | ((ap_predicate_op92_read_state2 == 1'b1) & (y_filtered_y_V_empty_n == 1'b0)) | ((ap_predicate_op91_read_state2 == 1'b1) & (y_filtered_x_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((filtered_gradient_x_V_full_n == 1'b0) & (ap_predicate_op201_write_state3 == 1'b1)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_x_V_full_n == 1'b0)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_z_V_full_n == 1'b0)) | ((1'd1 == and_ln216_reg_1356_pp0_iter1_reg) & (filtered_gradient_y_V_full_n == 1'b0)) | ((ap_predicate_op203_write_state3 == 1'b1) & (filtered_gradient_z_V_full_n == 1'b0)) | ((ap_predicate_op202_write_state3 == 1'b1) & (filtered_gradient_y_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_228 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_233 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_tmp_x_V_2_reg_212 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_y_V_2_reg_225 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_z_V_2_reg_238 = 'bx;

always @ (*) begin
    ap_predicate_op201_write_state3 = ((icmp_ln226_reg_1360_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln216_reg_1356_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op202_write_state3 = ((icmp_ln226_reg_1360_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln216_reg_1356_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op203_write_state3 = ((icmp_ln226_reg_1360_pp0_iter1_reg == 1'd1) & (1'd0 == and_ln216_reg_1356_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op91_read_state2 = ((tmp_66_reg_1352 == 1'd0) & (icmp_ln193_reg_1348 == 1'd0));
end

always @ (*) begin
    ap_predicate_op92_read_state2 = ((tmp_66_reg_1352 == 1'd0) & (icmp_ln193_reg_1348 == 1'd0));
end

always @ (*) begin
    ap_predicate_op93_read_state2 = ((tmp_66_reg_1352 == 1'd0) & (icmp_ln193_reg_1348 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln193_fu_264_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 19'd447772) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_279_p2 = ((ap_sig_allocacmp_c_load == 11'd1027) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_307_p2 = ((select_ln193_fu_285_p3 > 11'd5) ? 1'b1 : 1'b0);

assign icmp_ln226_fu_319_p2 = ((select_ln193_fu_285_p3 > 11'd2) ? 1'b1 : 1'b0);

assign lhs_28_fu_465_p3 = {{acc_x_V_4_fu_405_p4}, {19'd0}};

assign lhs_29_fu_501_p1 = $signed(tmp_67_fu_493_p3);

assign lhs_30_fu_635_p3 = {{tmp_s_fu_625_p4}, {19'd0}};

assign lhs_31_fu_745_p3 = {{tmp_36_fu_735_p4}, {19'd0}};

assign lhs_32_fu_1001_p3 = {{tmp_39_reg_1379}, {19'd0}};

assign lhs_33_fu_1051_p3 = {{tmp_42_fu_1041_p4}, {19'd0}};

assign lhs_V_13_fu_711_p3 = {{tmp_35_fu_701_p4}, {19'd0}};

assign lhs_V_14_fu_515_p3 = {{acc_y_V_4_fu_425_p4}, {19'd0}};

assign lhs_V_16_fu_565_p3 = {{acc_z_V_4_fu_445_p4}, {19'd0}};

assign lhs_V_17_fu_551_p1 = $signed(tmp_69_fu_543_p3);

assign lhs_V_18_fu_813_p3 = {{tmp_38_fu_803_p4}, {19'd0}};

assign lhs_V_19_fu_601_p1 = $signed(tmp_71_fu_593_p3);

assign lhs_V_20_fu_1015_p3 = {{tmp_41_reg_1389}, {19'd0}};

assign lhs_V_21_fu_1125_p3 = {{tmp_44_fu_1115_p4}, {19'd0}};

assign lhs_V_26_fu_673_p3 = {{tmp_34_fu_663_p4}, {19'd0}};

assign lhs_V_27_fu_779_p3 = {{tmp_37_fu_769_p4}, {19'd0}};

assign lhs_V_28_fu_1008_p3 = {{tmp_40_reg_1384}, {19'd0}};

assign lhs_V_29_fu_1088_p3 = {{tmp_43_fu_1078_p4}, {19'd0}};

assign r_V_154_fu_399_p1 = 49'd39583;

assign r_V_156_fu_419_p1 = 49'd39583;

assign r_V_158_fu_439_p1 = 49'd39583;

assign r_V_161_fu_459_p1 = 50'd69730;

assign r_V_163_fu_509_p1 = 50'd69730;

assign r_V_165_fu_559_p1 = 50'd69730;

assign r_V_167_fu_609_p1 = 50'd97989;

assign r_V_169_fu_647_p1 = 50'd97989;

assign r_V_171_fu_685_p1 = 50'd97989;

assign r_V_173_fu_723_p1 = 51'd152200;

assign r_V_175_fu_757_p1 = 51'd152200;

assign r_V_177_fu_791_p1 = 51'd152200;

assign r_V_179_fu_825_p1 = 50'd97989;

assign r_V_181_fu_855_p1 = 50'd97989;

assign r_V_183_fu_885_p1 = 50'd97989;

assign r_V_185_fu_1025_p1 = 50'd69730;

assign r_V_187_fu_1062_p1 = 50'd69730;

assign r_V_189_fu_1099_p1 = 50'd69730;

assign r_V_191_fu_1137_p1 = 49'd39583;

assign r_V_193_fu_1168_p1 = 49'd39583;

assign r_V_195_fu_1199_p1 = 49'd39583;

assign ret_V_40_fu_527_p2 = ($signed(sext_ln1347_3_fu_523_p1) + $signed(r_V_163_fu_509_p2));

assign ret_V_41_fu_577_p2 = ($signed(sext_ln1347_4_fu_573_p1) + $signed(r_V_165_fu_559_p2));

assign ret_V_42_fu_619_p2 = ($signed(lhs_29_fu_501_p1) + $signed(sext_ln813_fu_615_p1));

assign ret_V_43_fu_657_p2 = ($signed(lhs_V_17_fu_551_p1) + $signed(sext_ln813_12_fu_653_p1));

assign ret_V_44_fu_695_p2 = ($signed(lhs_V_19_fu_601_p1) + $signed(sext_ln813_13_fu_691_p1));

assign ret_V_45_fu_729_p2 = (lhs_30_fu_635_p3 + r_V_173_fu_723_p2);

assign ret_V_46_fu_763_p2 = (lhs_V_26_fu_673_p3 + r_V_175_fu_757_p2);

assign ret_V_47_fu_797_p2 = (lhs_V_13_fu_711_p3 + r_V_177_fu_791_p2);

assign ret_V_48_fu_835_p2 = ($signed(lhs_31_fu_745_p3) + $signed(sext_ln813_14_fu_831_p1));

assign ret_V_49_fu_865_p2 = ($signed(lhs_V_27_fu_779_p3) + $signed(sext_ln813_15_fu_861_p1));

assign ret_V_50_fu_895_p2 = ($signed(lhs_V_18_fu_813_p3) + $signed(sext_ln813_16_fu_891_p1));

assign ret_V_51_fu_1035_p2 = ($signed(lhs_32_fu_1001_p3) + $signed(sext_ln813_17_fu_1031_p1));

assign ret_V_52_fu_1072_p2 = ($signed(lhs_V_28_fu_1008_p3) + $signed(sext_ln813_18_fu_1068_p1));

assign ret_V_53_fu_1109_p2 = ($signed(lhs_V_20_fu_1015_p3) + $signed(sext_ln813_19_fu_1105_p1));

assign ret_V_54_fu_1147_p2 = ($signed(lhs_33_fu_1051_p3) + $signed(sext_ln813_20_fu_1143_p1));

assign ret_V_55_fu_1178_p2 = ($signed(lhs_V_29_fu_1088_p3) + $signed(sext_ln813_21_fu_1174_p1));

assign ret_V_56_fu_1209_p2 = ($signed(lhs_V_21_fu_1125_p3) + $signed(sext_ln813_22_fu_1205_p1));

assign ret_V_fu_477_p2 = ($signed(sext_ln1347_fu_473_p1) + $signed(r_V_161_fu_459_p2));

assign select_ln193_fu_285_p3 = ((icmp_ln195_fu_279_p2[0:0] == 1'b1) ? 11'd0 : ap_sig_allocacmp_c_load);

assign sext_ln1347_3_fu_523_p1 = $signed(lhs_V_14_fu_515_p3);

assign sext_ln1347_4_fu_573_p1 = $signed(lhs_V_16_fu_565_p3);

assign sext_ln1347_fu_473_p1 = $signed(lhs_28_fu_465_p3);

assign sext_ln813_12_fu_653_p1 = $signed(r_V_169_fu_647_p2);

assign sext_ln813_13_fu_691_p1 = $signed(r_V_171_fu_685_p2);

assign sext_ln813_14_fu_831_p1 = $signed(r_V_179_fu_825_p2);

assign sext_ln813_15_fu_861_p1 = $signed(r_V_181_fu_855_p2);

assign sext_ln813_16_fu_891_p1 = $signed(r_V_183_fu_885_p2);

assign sext_ln813_17_fu_1031_p1 = $signed(r_V_185_fu_1025_p2);

assign sext_ln813_18_fu_1068_p1 = $signed(r_V_187_fu_1062_p2);

assign sext_ln813_19_fu_1105_p1 = $signed(r_V_189_fu_1099_p2);

assign sext_ln813_20_fu_1143_p1 = $signed(r_V_191_fu_1137_p2);

assign sext_ln813_21_fu_1174_p1 = $signed(r_V_193_fu_1168_p2);

assign sext_ln813_22_fu_1205_p1 = $signed(r_V_195_fu_1199_p2);

assign sext_ln813_fu_615_p1 = $signed(r_V_167_fu_609_p2);

assign start_out = real_start;

assign tmp_34_fu_663_p4 = {{ret_V_43_fu_657_p2[50:19]}};

assign tmp_35_fu_701_p4 = {{ret_V_44_fu_695_p2[50:19]}};

assign tmp_36_fu_735_p4 = {{ret_V_45_fu_729_p2[50:19]}};

assign tmp_37_fu_769_p4 = {{ret_V_46_fu_763_p2[50:19]}};

assign tmp_38_fu_803_p4 = {{ret_V_47_fu_797_p2[50:19]}};

assign tmp_42_fu_1041_p4 = {{ret_V_51_fu_1035_p2[50:19]}};

assign tmp_43_fu_1078_p4 = {{ret_V_52_fu_1072_p2[50:19]}};

assign tmp_44_fu_1115_p4 = {{ret_V_53_fu_1109_p2[50:19]}};

assign tmp_66_fu_293_p3 = select_ln193_fu_285_p3[32'd10];

assign tmp_67_fu_493_p3 = {{tmp_fu_483_p4}, {19'd0}};

assign tmp_68_fu_533_p4 = {{ret_V_40_fu_527_p2[49:19]}};

assign tmp_69_fu_543_p3 = {{tmp_68_fu_533_p4}, {19'd0}};

assign tmp_70_fu_583_p4 = {{ret_V_41_fu_577_p2[49:19]}};

assign tmp_71_fu_593_p3 = {{tmp_70_fu_583_p4}, {19'd0}};

assign tmp_fu_483_p4 = {{ret_V_fu_477_p2[49:19]}};

assign tmp_s_fu_625_p4 = {{ret_V_42_fu_619_p2[50:19]}};

assign xor_ln200_fu_301_p2 = (tmp_66_fu_293_p3 ^ 1'd1);

endmodule //optical_flow_gradient_weight_x
