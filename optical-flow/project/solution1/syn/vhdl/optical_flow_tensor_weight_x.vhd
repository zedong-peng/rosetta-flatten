-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity optical_flow_tensor_weight_x is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tensor_y_dout : IN STD_LOGIC_VECTOR (191 downto 0);
    tensor_y_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    tensor_y_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    tensor_y_empty_n : IN STD_LOGIC;
    tensor_y_read : OUT STD_LOGIC;
    tensor_din : OUT STD_LOGIC_VECTOR (191 downto 0);
    tensor_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    tensor_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    tensor_full_n : IN STD_LOGIC;
    tensor_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC );
end;


architecture behav of optical_flow_tensor_weight_x is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv19_6D1B4 : STD_LOGIC_VECTOR (18 downto 0) := "1101101000110110100";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv11_401 : STD_LOGIC_VECTOR (10 downto 0) := "10000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv51_2982A : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000101001100000101010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv51_2CF76 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000101100111101110110";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln316_reg_1154 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_1158 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op58_read_state2 : BOOLEAN;
    signal icmp_ln348_reg_1172 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op163_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln316_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal tensor_y_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tensor_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_25_fu_267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln337_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln337_reg_1162 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_tmp_val_V_64_phi_fu_163_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_val_V_64_reg_159 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_val_V_63_phi_fu_174_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_val_V_63_reg_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_val_V_62_phi_fu_185_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_val_V_62_reg_181 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_val_V_61_phi_fu_196_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_val_V_61_reg_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_val_V_60_phi_fu_207_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_val_V_60_reg_203 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_val_V_59_phi_fu_218_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_val_V_fu_343_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_val_V_59_reg_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_37_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_39_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_41_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_43_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_45_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_fu_114 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln318_fu_309_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_c_load : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten_fu_118 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln316_fu_244_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_47_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_49_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_51_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_53_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_55_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_57_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln318_fu_253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln316_fu_259_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_26_fu_281_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln337_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln323_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_59_fu_425_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_59_fu_425_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_fu_431_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_61_fu_453_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_61_fu_453_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_s_fu_459_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_63_fu_481_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_63_fu_481_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_13_fu_487_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_65_fu_509_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_65_fu_509_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_14_fu_515_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_67_fu_537_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_67_fu_537_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_15_fu_543_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_69_fu_565_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_69_fu_565_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_16_fu_571_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_72_fu_593_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_fu_441_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_72_fu_593_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_fu_599_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_17_fu_605_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_74_fu_627_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_16_fu_469_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_74_fu_627_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_12_fu_633_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_18_fu_639_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_76_fu_661_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_11_fu_497_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_76_fu_661_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_13_fu_667_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_19_fu_673_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_78_fu_695_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_12_fu_525_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_78_fu_695_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_14_fu_701_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_20_fu_707_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_80_fu_729_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_13_fu_553_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_80_fu_729_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_15_fu_735_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_21_fu_741_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_82_fu_763_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_14_fu_581_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_82_fu_763_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_16_fu_769_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_22_fu_775_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_84_fu_797_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_84_fu_797_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_15_fu_615_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_17_fu_803_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_86_fu_823_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_86_fu_823_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_21_fu_649_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_18_fu_829_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_88_fu_849_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_88_fu_849_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_17_fu_683_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_19_fu_855_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_90_fu_875_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_90_fu_875_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_18_fu_717_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_20_fu_881_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_92_fu_901_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_92_fu_901_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_19_fu_751_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_21_fu_907_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_94_fu_927_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_94_fu_927_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_20_fu_785_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_22_fu_933_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal acc_val_V_16_fu_939_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_15_fu_913_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_14_fu_887_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_13_fu_861_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_12_fu_835_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_fu_809_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_22_fu_949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_21_fu_956_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_20_fu_963_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_19_fu_970_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_18_fu_977_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_val_V_17_fu_984_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_138 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component optical_flow_mul_32s_19ns_51_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (50 downto 0) );
    end component;


    component optical_flow_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    mul_32s_19ns_51_1_1_U110 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_fu_90,
        din1 => r_V_59_fu_425_p1,
        dout => r_V_59_fu_425_p2);

    mul_32s_19ns_51_1_1_U111 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_37_fu_94,
        din1 => r_V_61_fu_453_p1,
        dout => r_V_61_fu_453_p2);

    mul_32s_19ns_51_1_1_U112 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_39_fu_98,
        din1 => r_V_63_fu_481_p1,
        dout => r_V_63_fu_481_p2);

    mul_32s_19ns_51_1_1_U113 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_41_fu_102,
        din1 => r_V_65_fu_509_p1,
        dout => r_V_65_fu_509_p2);

    mul_32s_19ns_51_1_1_U114 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_43_fu_106,
        din1 => r_V_67_fu_537_p1,
        dout => r_V_67_fu_537_p2);

    mul_32s_19ns_51_1_1_U115 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_45_fu_110,
        din1 => r_V_69_fu_565_p1,
        dout => r_V_69_fu_565_p2);

    mul_32s_19ns_51_1_1_U116 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_47_fu_122,
        din1 => r_V_72_fu_593_p1,
        dout => r_V_72_fu_593_p2);

    mul_32s_19ns_51_1_1_U117 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_49_fu_126,
        din1 => r_V_74_fu_627_p1,
        dout => r_V_74_fu_627_p2);

    mul_32s_19ns_51_1_1_U118 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_51_fu_130,
        din1 => r_V_76_fu_661_p1,
        dout => r_V_76_fu_661_p2);

    mul_32s_19ns_51_1_1_U119 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_53_fu_134,
        din1 => r_V_78_fu_695_p1,
        dout => r_V_78_fu_695_p2);

    mul_32s_19ns_51_1_1_U120 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_55_fu_138,
        din1 => r_V_80_fu_729_p1,
        dout => r_V_80_fu_729_p2);

    mul_32s_19ns_51_1_1_U121 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_57_fu_142,
        din1 => r_V_82_fu_763_p1,
        dout => r_V_82_fu_763_p2);

    mul_32s_19ns_51_1_1_U122 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => ap_phi_mux_tmp_val_V_59_phi_fu_218_p4,
        din1 => r_V_84_fu_797_p1,
        dout => r_V_84_fu_797_p2);

    mul_32s_19ns_51_1_1_U123 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => ap_phi_mux_tmp_val_V_60_phi_fu_207_p4,
        din1 => r_V_86_fu_823_p1,
        dout => r_V_86_fu_823_p2);

    mul_32s_19ns_51_1_1_U124 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => ap_phi_mux_tmp_val_V_61_phi_fu_196_p4,
        din1 => r_V_88_fu_849_p1,
        dout => r_V_88_fu_849_p2);

    mul_32s_19ns_51_1_1_U125 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => ap_phi_mux_tmp_val_V_62_phi_fu_185_p4,
        din1 => r_V_90_fu_875_p1,
        dout => r_V_90_fu_875_p2);

    mul_32s_19ns_51_1_1_U126 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => ap_phi_mux_tmp_val_V_63_phi_fu_174_p4,
        din1 => r_V_92_fu_901_p1,
        dout => r_V_92_fu_901_p2);

    mul_32s_19ns_51_1_1_U127 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => ap_phi_mux_tmp_val_V_64_phi_fu_163_p4,
        din1 => r_V_94_fu_927_p1,
        dout => r_V_94_fu_927_p2);

    flow_control_loop_pipe_U : component optical_flow_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => real_start,
        ap_ready => internal_ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if (((ap_loop_exit_ready = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_138)) then
                if (((icmp_ln316_fu_238_p2 = ap_const_lv1_0) and (tmp_25_fu_267_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214 <= ap_phi_reg_pp0_iter0_tmp_val_V_59_reg_214;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_138)) then
                if (((icmp_ln316_fu_238_p2 = ap_const_lv1_0) and (tmp_25_fu_267_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203 <= ap_phi_reg_pp0_iter0_tmp_val_V_60_reg_203;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_138)) then
                if (((icmp_ln316_fu_238_p2 = ap_const_lv1_0) and (tmp_25_fu_267_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192 <= ap_phi_reg_pp0_iter0_tmp_val_V_61_reg_192;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_138)) then
                if (((icmp_ln316_fu_238_p2 = ap_const_lv1_0) and (tmp_25_fu_267_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181 <= ap_phi_reg_pp0_iter0_tmp_val_V_62_reg_181;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_138)) then
                if (((icmp_ln316_fu_238_p2 = ap_const_lv1_0) and (tmp_25_fu_267_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170 <= ap_phi_reg_pp0_iter0_tmp_val_V_63_reg_170;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_138)) then
                if (((icmp_ln316_fu_238_p2 = ap_const_lv1_0) and (tmp_25_fu_267_p3 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159 <= ap_phi_reg_pp0_iter0_tmp_val_V_64_reg_159;
                end if;
            end if; 
        end if;
    end process;

    c_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_138)) then
                if ((icmp_ln316_fu_238_p2 = ap_const_lv1_0)) then 
                    c_fu_114 <= add_ln318_fu_309_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    c_fu_114 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_138)) then
                if ((icmp_ln316_fu_238_p2 = ap_const_lv1_0)) then 
                    indvar_flatten_fu_118 <= add_ln316_fu_244_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_118 <= ap_const_lv19_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln316_fu_238_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln337_reg_1162 <= and_ln337_fu_297_p2;
                icmp_ln348_reg_1172 <= icmp_ln348_fu_303_p2;
                tmp_25_reg_1158 <= select_ln316_fu_259_p3(10 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln316_reg_1154 <= icmp_ln316_fu_238_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln316_reg_1154 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                r_V_37_fu_94 <= r_V_49_fu_126;
                r_V_39_fu_98 <= r_V_51_fu_130;
                r_V_41_fu_102 <= r_V_53_fu_134;
                r_V_43_fu_106 <= r_V_55_fu_138;
                r_V_45_fu_110 <= r_V_57_fu_142;
                r_V_47_fu_122 <= ap_phi_mux_tmp_val_V_59_phi_fu_218_p4;
                r_V_49_fu_126 <= ap_phi_mux_tmp_val_V_60_phi_fu_207_p4;
                r_V_51_fu_130 <= ap_phi_mux_tmp_val_V_61_phi_fu_196_p4;
                r_V_53_fu_134 <= ap_phi_mux_tmp_val_V_62_phi_fu_185_p4;
                r_V_55_fu_138 <= ap_phi_mux_tmp_val_V_63_phi_fu_174_p4;
                r_V_57_fu_142 <= ap_phi_mux_tmp_val_V_64_phi_fu_163_p4;
                r_V_fu_90 <= r_V_47_fu_122;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    acc_val_V_12_fu_835_p4 <= ret_V_18_fu_829_p2(50 downto 19);
    acc_val_V_13_fu_861_p4 <= ret_V_19_fu_855_p2(50 downto 19);
    acc_val_V_14_fu_887_p4 <= ret_V_20_fu_881_p2(50 downto 19);
    acc_val_V_15_fu_913_p4 <= ret_V_21_fu_907_p2(50 downto 19);
    acc_val_V_16_fu_939_p4 <= ret_V_22_fu_933_p2(50 downto 19);
    acc_val_V_17_fu_984_p3 <= 
        acc_val_V_fu_809_p4 when (and_ln337_reg_1162(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_18_fu_977_p3 <= 
        acc_val_V_12_fu_835_p4 when (and_ln337_reg_1162(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_19_fu_970_p3 <= 
        acc_val_V_13_fu_861_p4 when (and_ln337_reg_1162(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_20_fu_963_p3 <= 
        acc_val_V_14_fu_887_p4 when (and_ln337_reg_1162(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_21_fu_956_p3 <= 
        acc_val_V_15_fu_913_p4 when (and_ln337_reg_1162(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_22_fu_949_p3 <= 
        acc_val_V_16_fu_939_p4 when (and_ln337_reg_1162(0) = '1') else 
        ap_const_lv32_0;
    acc_val_V_fu_809_p4 <= ret_V_17_fu_803_p2(50 downto 19);
    add_ln316_fu_244_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv19_1));
    add_ln318_fu_309_p2 <= std_logic_vector(unsigned(select_ln316_fu_259_p3) + unsigned(ap_const_lv11_1));
    and_ln337_fu_297_p2 <= (xor_ln323_fu_275_p2 and icmp_ln337_fu_291_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, tensor_y_empty_n, ap_predicate_op58_read_state2, tensor_full_n, ap_predicate_op163_write_state2, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op163_write_state2 = ap_const_boolean_1) and (tensor_full_n = ap_const_logic_0)) or ((ap_predicate_op58_read_state2 = ap_const_boolean_1) and (tensor_y_empty_n = ap_const_logic_0)))) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, tensor_y_empty_n, ap_predicate_op58_read_state2, tensor_full_n, ap_predicate_op163_write_state2, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op163_write_state2 = ap_const_boolean_1) and (tensor_full_n = ap_const_logic_0)) or ((ap_predicate_op58_read_state2 = ap_const_boolean_1) and (tensor_y_empty_n = ap_const_logic_0)))) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, tensor_y_empty_n, ap_predicate_op58_read_state2, tensor_full_n, ap_predicate_op163_write_state2, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op163_write_state2 = ap_const_boolean_1) and (tensor_full_n = ap_const_logic_0)) or ((ap_predicate_op58_read_state2 = ap_const_boolean_1) and (tensor_y_empty_n = ap_const_logic_0)))) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(tensor_y_empty_n, ap_predicate_op58_read_state2, tensor_full_n, ap_predicate_op163_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op163_write_state2 = ap_const_boolean_1) and (tensor_full_n = ap_const_logic_0)) or ((ap_predicate_op58_read_state2 = ap_const_boolean_1) and (tensor_y_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_138_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_138 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln316_fu_238_p2, ap_start_int)
    begin
        if (((icmp_ln316_fu_238_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_tmp_val_V_59_phi_fu_218_p4_assign_proc : process(icmp_ln316_reg_1154, tmp_25_reg_1158, tmp_val_V_fu_343_p1, ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214)
    begin
        if (((tmp_25_reg_1158 = ap_const_lv1_0) and (icmp_ln316_reg_1154 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_val_V_59_phi_fu_218_p4 <= tmp_val_V_fu_343_p1;
        else 
            ap_phi_mux_tmp_val_V_59_phi_fu_218_p4 <= ap_phi_reg_pp0_iter1_tmp_val_V_59_reg_214;
        end if; 
    end process;


    ap_phi_mux_tmp_val_V_60_phi_fu_207_p4_assign_proc : process(tensor_y_dout, icmp_ln316_reg_1154, tmp_25_reg_1158, ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203)
    begin
        if (((tmp_25_reg_1158 = ap_const_lv1_0) and (icmp_ln316_reg_1154 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_val_V_60_phi_fu_207_p4 <= tensor_y_dout(63 downto 32);
        else 
            ap_phi_mux_tmp_val_V_60_phi_fu_207_p4 <= ap_phi_reg_pp0_iter1_tmp_val_V_60_reg_203;
        end if; 
    end process;


    ap_phi_mux_tmp_val_V_61_phi_fu_196_p4_assign_proc : process(tensor_y_dout, icmp_ln316_reg_1154, tmp_25_reg_1158, ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192)
    begin
        if (((tmp_25_reg_1158 = ap_const_lv1_0) and (icmp_ln316_reg_1154 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_val_V_61_phi_fu_196_p4 <= tensor_y_dout(95 downto 64);
        else 
            ap_phi_mux_tmp_val_V_61_phi_fu_196_p4 <= ap_phi_reg_pp0_iter1_tmp_val_V_61_reg_192;
        end if; 
    end process;


    ap_phi_mux_tmp_val_V_62_phi_fu_185_p4_assign_proc : process(tensor_y_dout, icmp_ln316_reg_1154, tmp_25_reg_1158, ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181)
    begin
        if (((tmp_25_reg_1158 = ap_const_lv1_0) and (icmp_ln316_reg_1154 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_val_V_62_phi_fu_185_p4 <= tensor_y_dout(127 downto 96);
        else 
            ap_phi_mux_tmp_val_V_62_phi_fu_185_p4 <= ap_phi_reg_pp0_iter1_tmp_val_V_62_reg_181;
        end if; 
    end process;


    ap_phi_mux_tmp_val_V_63_phi_fu_174_p4_assign_proc : process(tensor_y_dout, icmp_ln316_reg_1154, tmp_25_reg_1158, ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170)
    begin
        if (((tmp_25_reg_1158 = ap_const_lv1_0) and (icmp_ln316_reg_1154 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_val_V_63_phi_fu_174_p4 <= tensor_y_dout(159 downto 128);
        else 
            ap_phi_mux_tmp_val_V_63_phi_fu_174_p4 <= ap_phi_reg_pp0_iter1_tmp_val_V_63_reg_170;
        end if; 
    end process;


    ap_phi_mux_tmp_val_V_64_phi_fu_163_p4_assign_proc : process(tensor_y_dout, icmp_ln316_reg_1154, tmp_25_reg_1158, ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159)
    begin
        if (((tmp_25_reg_1158 = ap_const_lv1_0) and (icmp_ln316_reg_1154 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_val_V_64_phi_fu_163_p4 <= tensor_y_dout(191 downto 160);
        else 
            ap_phi_mux_tmp_val_V_64_phi_fu_163_p4 <= ap_phi_reg_pp0_iter1_tmp_val_V_64_reg_159;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_tmp_val_V_59_reg_214 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_val_V_60_reg_203 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_val_V_61_reg_192 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_val_V_62_reg_181 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_val_V_63_reg_170 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_val_V_64_reg_159 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op163_write_state2_assign_proc : process(icmp_ln316_reg_1154, icmp_ln348_reg_1172)
    begin
                ap_predicate_op163_write_state2 <= ((icmp_ln348_reg_1172 = ap_const_lv1_0) and (icmp_ln316_reg_1154 = ap_const_lv1_0));
    end process;


    ap_predicate_op58_read_state2_assign_proc : process(icmp_ln316_reg_1154, tmp_25_reg_1158)
    begin
                ap_predicate_op58_read_state2 <= ((tmp_25_reg_1158 = ap_const_lv1_0) and (icmp_ln316_reg_1154 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_c_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, c_fu_114, ap_loop_init, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_c_load <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_c_load <= c_fu_114;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_118, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv19_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_118;
        end if; 
    end process;

    icmp_ln316_fu_238_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv19_6D1B4) else "0";
    icmp_ln318_fu_253_p2 <= "1" when (ap_sig_allocacmp_c_load = ap_const_lv11_401) else "0";
    icmp_ln337_fu_291_p2 <= "0" when (tmp_26_fu_281_p4 = ap_const_lv10_0) else "1";
    icmp_ln348_fu_303_p2 <= "1" when (select_ln316_fu_259_p3 = ap_const_lv11_0) else "0";
    lhs_11_fu_497_p3 <= (tmp_13_fu_487_p4 & ap_const_lv19_0);
    lhs_12_fu_525_p3 <= (tmp_14_fu_515_p4 & ap_const_lv19_0);
    lhs_13_fu_553_p3 <= (tmp_15_fu_543_p4 & ap_const_lv19_0);
    lhs_14_fu_581_p3 <= (tmp_16_fu_571_p4 & ap_const_lv19_0);
    lhs_15_fu_615_p3 <= (tmp_17_fu_605_p4 & ap_const_lv19_0);
    lhs_16_fu_469_p3 <= (tmp_s_fu_459_p4 & ap_const_lv19_0);
    lhs_17_fu_683_p3 <= (tmp_19_fu_673_p4 & ap_const_lv19_0);
    lhs_18_fu_717_p3 <= (tmp_20_fu_707_p4 & ap_const_lv19_0);
    lhs_19_fu_751_p3 <= (tmp_21_fu_741_p4 & ap_const_lv19_0);
    lhs_20_fu_785_p3 <= (tmp_22_fu_775_p4 & ap_const_lv19_0);
    lhs_21_fu_649_p3 <= (tmp_18_fu_639_p4 & ap_const_lv19_0);
    lhs_fu_441_p3 <= (tmp_fu_431_p4 & ap_const_lv19_0);
    r_V_59_fu_425_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_61_fu_453_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_63_fu_481_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_65_fu_509_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_67_fu_537_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_69_fu_565_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_72_fu_593_p1 <= ap_const_lv51_2CF76(19 - 1 downto 0);
    r_V_74_fu_627_p1 <= ap_const_lv51_2CF76(19 - 1 downto 0);
    r_V_76_fu_661_p1 <= ap_const_lv51_2CF76(19 - 1 downto 0);
    r_V_78_fu_695_p1 <= ap_const_lv51_2CF76(19 - 1 downto 0);
    r_V_80_fu_729_p1 <= ap_const_lv51_2CF76(19 - 1 downto 0);
    r_V_82_fu_763_p1 <= ap_const_lv51_2CF76(19 - 1 downto 0);
    r_V_84_fu_797_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_86_fu_823_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_88_fu_849_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_90_fu_875_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_92_fu_901_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);
    r_V_94_fu_927_p1 <= ap_const_lv51_2982A(19 - 1 downto 0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_12_fu_633_p2 <= std_logic_vector(unsigned(lhs_16_fu_469_p3) + unsigned(r_V_74_fu_627_p2));
    ret_V_13_fu_667_p2 <= std_logic_vector(unsigned(lhs_11_fu_497_p3) + unsigned(r_V_76_fu_661_p2));
    ret_V_14_fu_701_p2 <= std_logic_vector(unsigned(lhs_12_fu_525_p3) + unsigned(r_V_78_fu_695_p2));
    ret_V_15_fu_735_p2 <= std_logic_vector(unsigned(lhs_13_fu_553_p3) + unsigned(r_V_80_fu_729_p2));
    ret_V_16_fu_769_p2 <= std_logic_vector(unsigned(lhs_14_fu_581_p3) + unsigned(r_V_82_fu_763_p2));
    ret_V_17_fu_803_p2 <= std_logic_vector(unsigned(r_V_84_fu_797_p2) + unsigned(lhs_15_fu_615_p3));
    ret_V_18_fu_829_p2 <= std_logic_vector(unsigned(r_V_86_fu_823_p2) + unsigned(lhs_21_fu_649_p3));
    ret_V_19_fu_855_p2 <= std_logic_vector(unsigned(r_V_88_fu_849_p2) + unsigned(lhs_17_fu_683_p3));
    ret_V_20_fu_881_p2 <= std_logic_vector(unsigned(r_V_90_fu_875_p2) + unsigned(lhs_18_fu_717_p3));
    ret_V_21_fu_907_p2 <= std_logic_vector(unsigned(r_V_92_fu_901_p2) + unsigned(lhs_19_fu_751_p3));
    ret_V_22_fu_933_p2 <= std_logic_vector(unsigned(r_V_94_fu_927_p2) + unsigned(lhs_20_fu_785_p3));
    ret_V_fu_599_p2 <= std_logic_vector(unsigned(lhs_fu_441_p3) + unsigned(r_V_72_fu_593_p2));
    select_ln316_fu_259_p3 <= 
        ap_const_lv11_0 when (icmp_ln318_fu_253_p2(0) = '1') else 
        ap_sig_allocacmp_c_load;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    tensor_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tensor_full_n, ap_predicate_op163_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op163_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tensor_blk_n <= tensor_full_n;
        else 
            tensor_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tensor_din <= (((((acc_val_V_22_fu_949_p3 & acc_val_V_21_fu_956_p3) & acc_val_V_20_fu_963_p3) & acc_val_V_19_fu_970_p3) & acc_val_V_18_fu_977_p3) & acc_val_V_17_fu_984_p3);

    tensor_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op163_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op163_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tensor_write <= ap_const_logic_1;
        else 
            tensor_write <= ap_const_logic_0;
        end if; 
    end process;


    tensor_y_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tensor_y_empty_n, ap_predicate_op58_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op58_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tensor_y_blk_n <= tensor_y_empty_n;
        else 
            tensor_y_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tensor_y_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op58_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op58_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tensor_y_read <= ap_const_logic_1;
        else 
            tensor_y_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_13_fu_487_p4 <= r_V_63_fu_481_p2(50 downto 19);
    tmp_14_fu_515_p4 <= r_V_65_fu_509_p2(50 downto 19);
    tmp_15_fu_543_p4 <= r_V_67_fu_537_p2(50 downto 19);
    tmp_16_fu_571_p4 <= r_V_69_fu_565_p2(50 downto 19);
    tmp_17_fu_605_p4 <= ret_V_fu_599_p2(50 downto 19);
    tmp_18_fu_639_p4 <= ret_V_12_fu_633_p2(50 downto 19);
    tmp_19_fu_673_p4 <= ret_V_13_fu_667_p2(50 downto 19);
    tmp_20_fu_707_p4 <= ret_V_14_fu_701_p2(50 downto 19);
    tmp_21_fu_741_p4 <= ret_V_15_fu_735_p2(50 downto 19);
    tmp_22_fu_775_p4 <= ret_V_16_fu_769_p2(50 downto 19);
    tmp_25_fu_267_p3 <= select_ln316_fu_259_p3(10 downto 10);
    tmp_26_fu_281_p4 <= select_ln316_fu_259_p3(10 downto 1);
    tmp_fu_431_p4 <= r_V_59_fu_425_p2(50 downto 19);
    tmp_s_fu_459_p4 <= r_V_61_fu_453_p2(50 downto 19);
    tmp_val_V_fu_343_p1 <= tensor_y_dout(32 - 1 downto 0);
    xor_ln323_fu_275_p2 <= (tmp_25_fu_267_p3 xor ap_const_lv1_1);
end behav;
