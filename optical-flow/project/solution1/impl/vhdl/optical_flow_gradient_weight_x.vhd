-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity optical_flow_gradient_weight_x is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    y_filtered_x_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_x_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_x_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_x_V_empty_n : IN STD_LOGIC;
    y_filtered_x_V_read : OUT STD_LOGIC;
    y_filtered_y_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_y_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_y_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_y_V_empty_n : IN STD_LOGIC;
    y_filtered_y_V_read : OUT STD_LOGIC;
    y_filtered_z_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_z_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_z_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_z_V_empty_n : IN STD_LOGIC;
    y_filtered_z_V_read : OUT STD_LOGIC;
    filtered_gradient_x_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    filtered_gradient_x_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    filtered_gradient_x_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    filtered_gradient_x_V_full_n : IN STD_LOGIC;
    filtered_gradient_x_V_write : OUT STD_LOGIC;
    filtered_gradient_y_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    filtered_gradient_y_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    filtered_gradient_y_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    filtered_gradient_y_V_full_n : IN STD_LOGIC;
    filtered_gradient_y_V_write : OUT STD_LOGIC;
    filtered_gradient_z_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    filtered_gradient_z_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    filtered_gradient_z_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    filtered_gradient_z_V_full_n : IN STD_LOGIC;
    filtered_gradient_z_V_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC );
end;


architecture behav of optical_flow_gradient_weight_x is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv19_6D51C : STD_LOGIC_VECTOR (18 downto 0) := "1101101010100011100";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv11_403 : STD_LOGIC_VECTOR (10 downto 0) := "10000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000101";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv49_9A9F : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000001001101010011111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv50_11062 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000010001000001100010";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv50_17EC5 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000010111111011000101";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv51_25288 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000100101001010001000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln193_reg_1348 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_1352 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op91_read_state2 : BOOLEAN;
    signal ap_predicate_op92_read_state2 : BOOLEAN;
    signal ap_predicate_op93_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal and_ln216_reg_1356 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln216_reg_1356_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln226_reg_1360 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln226_reg_1360_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op201_write_state3 : BOOLEAN;
    signal ap_predicate_op202_write_state3 : BOOLEAN;
    signal ap_predicate_op203_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln193_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal y_filtered_x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal y_filtered_y_V_blk_n : STD_LOGIC;
    signal y_filtered_z_V_blk_n : STD_LOGIC;
    signal filtered_gradient_x_V_blk_n : STD_LOGIC;
    signal filtered_gradient_y_V_blk_n : STD_LOGIC;
    signal filtered_gradient_z_V_blk_n : STD_LOGIC;
    signal tmp_x_V_2_reg_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_y_V_2_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_z_V_2_reg_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_66_fu_293_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln216_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln226_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_184_reg_1364 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_186_reg_1369 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_188_reg_1374 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_reg_1379 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_1384 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_1389 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_phi_mux_tmp_x_V_2_phi_fu_216_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_x_V_2_reg_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_y_V_2_phi_fu_229_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_y_V_2_reg_225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_z_V_2_phi_fu_242_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_z_V_2_reg_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_120_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_122_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_fu_102 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln195_fu_325_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_c_load : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten_fu_106 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln193_fu_270_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_124_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_126_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_128_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_130_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_132_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_134_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_136_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_138_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_140_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_142_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_144_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_146_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_148_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_150_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_152_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln195_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln193_fu_285_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln216_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln200_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_154_fu_399_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_154_fu_399_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_156_fu_419_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_156_fu_419_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_158_fu_439_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_158_fu_439_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_161_fu_459_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal acc_x_V_4_fu_405_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_28_fu_465_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1347_fu_473_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_161_fu_459_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_fu_477_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_fu_483_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_67_fu_493_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_163_fu_509_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal acc_y_V_4_fu_425_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_V_14_fu_515_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1347_3_fu_523_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_163_fu_509_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_40_fu_527_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_68_fu_533_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_69_fu_543_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_165_fu_559_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal acc_z_V_4_fu_445_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_V_16_fu_565_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1347_4_fu_573_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_165_fu_559_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_41_fu_577_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_70_fu_583_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_71_fu_593_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_167_fu_609_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_167_fu_609_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_29_fu_501_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_fu_615_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_42_fu_619_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_s_fu_625_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_169_fu_647_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_169_fu_647_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_17_fu_551_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_12_fu_653_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_43_fu_657_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_34_fu_663_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_171_fu_685_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_171_fu_685_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_19_fu_601_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_13_fu_691_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_44_fu_695_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_35_fu_701_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_173_fu_723_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_30_fu_635_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_173_fu_723_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_45_fu_729_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_36_fu_735_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_175_fu_757_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_V_26_fu_673_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_175_fu_757_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_46_fu_763_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_37_fu_769_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_177_fu_791_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lhs_V_13_fu_711_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_177_fu_791_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_47_fu_797_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_38_fu_803_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_179_fu_825_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_179_fu_825_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_31_fu_745_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_14_fu_831_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_48_fu_835_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_181_fu_855_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_181_fu_855_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_27_fu_779_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_15_fu_861_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_49_fu_865_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_183_fu_885_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_183_fu_885_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_18_fu_813_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_16_fu_891_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_50_fu_895_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_185_fu_1025_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_185_fu_1025_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_32_fu_1001_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_17_fu_1031_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_51_fu_1035_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_42_fu_1041_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_187_fu_1062_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_187_fu_1062_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_28_fu_1008_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_18_fu_1068_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_52_fu_1072_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_43_fu_1078_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_189_fu_1099_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_189_fu_1099_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_20_fu_1015_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_19_fu_1105_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_53_fu_1109_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_44_fu_1115_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_191_fu_1137_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_191_fu_1137_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal lhs_33_fu_1051_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_20_fu_1143_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_54_fu_1147_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_193_fu_1168_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_193_fu_1168_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal lhs_V_29_fu_1088_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_21_fu_1174_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_55_fu_1178_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_195_fu_1199_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_195_fu_1199_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal lhs_V_21_fu_1125_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_22_fu_1205_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_56_fu_1209_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_233 : BOOLEAN;
    signal ap_condition_228 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component optical_flow_mul_32s_17ns_49_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (48 downto 0) );
    end component;


    component optical_flow_mul_32s_18ns_50_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component optical_flow_mul_32s_19ns_51_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (50 downto 0) );
    end component;


    component optical_flow_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    mul_32s_17ns_49_1_1_U51 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => r_V_fu_90,
        din1 => r_V_154_fu_399_p1,
        dout => r_V_154_fu_399_p2);

    mul_32s_17ns_49_1_1_U52 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => r_V_120_fu_94,
        din1 => r_V_156_fu_419_p1,
        dout => r_V_156_fu_419_p2);

    mul_32s_17ns_49_1_1_U53 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => r_V_122_fu_98,
        din1 => r_V_158_fu_439_p1,
        dout => r_V_158_fu_439_p2);

    mul_32s_18ns_50_1_1_U54 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_124_fu_110,
        din1 => r_V_161_fu_459_p1,
        dout => r_V_161_fu_459_p2);

    mul_32s_18ns_50_1_1_U55 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_126_fu_114,
        din1 => r_V_163_fu_509_p1,
        dout => r_V_163_fu_509_p2);

    mul_32s_18ns_50_1_1_U56 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_128_fu_118,
        din1 => r_V_165_fu_559_p1,
        dout => r_V_165_fu_559_p2);

    mul_32s_18ns_50_1_1_U57 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_130_fu_122,
        din1 => r_V_167_fu_609_p1,
        dout => r_V_167_fu_609_p2);

    mul_32s_18ns_50_1_1_U58 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_132_fu_126,
        din1 => r_V_169_fu_647_p1,
        dout => r_V_169_fu_647_p2);

    mul_32s_18ns_50_1_1_U59 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_134_fu_130,
        din1 => r_V_171_fu_685_p1,
        dout => r_V_171_fu_685_p2);

    mul_32s_19ns_51_1_1_U60 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_136_fu_134,
        din1 => r_V_173_fu_723_p1,
        dout => r_V_173_fu_723_p2);

    mul_32s_19ns_51_1_1_U61 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_138_fu_138,
        din1 => r_V_175_fu_757_p1,
        dout => r_V_175_fu_757_p2);

    mul_32s_19ns_51_1_1_U62 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => r_V_140_fu_142,
        din1 => r_V_177_fu_791_p1,
        dout => r_V_177_fu_791_p2);

    mul_32s_18ns_50_1_1_U63 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_142_fu_146,
        din1 => r_V_179_fu_825_p1,
        dout => r_V_179_fu_825_p2);

    mul_32s_18ns_50_1_1_U64 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_144_fu_150,
        din1 => r_V_181_fu_855_p1,
        dout => r_V_181_fu_855_p2);

    mul_32s_18ns_50_1_1_U65 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_146_fu_154,
        din1 => r_V_183_fu_885_p1,
        dout => r_V_183_fu_885_p2);

    mul_32s_18ns_50_1_1_U66 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_184_reg_1364,
        din1 => r_V_185_fu_1025_p1,
        dout => r_V_185_fu_1025_p2);

    mul_32s_18ns_50_1_1_U67 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_186_reg_1369,
        din1 => r_V_187_fu_1062_p1,
        dout => r_V_187_fu_1062_p2);

    mul_32s_18ns_50_1_1_U68 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_188_reg_1374,
        din1 => r_V_189_fu_1099_p1,
        dout => r_V_189_fu_1099_p2);

    mul_32s_17ns_49_1_1_U69 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => tmp_x_V_2_reg_212,
        din1 => r_V_191_fu_1137_p1,
        dout => r_V_191_fu_1137_p2);

    mul_32s_17ns_49_1_1_U70 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => tmp_y_V_2_reg_225,
        din1 => r_V_193_fu_1168_p1,
        dout => r_V_193_fu_1168_p2);

    mul_32s_17ns_49_1_1_U71 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => tmp_z_V_2_reg_238,
        din1 => r_V_195_fu_1199_p1,
        dout => r_V_195_fu_1199_p2);

    flow_control_loop_pipe_U : component optical_flow_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => real_start,
        ap_ready => internal_ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_233)) then
                if (((tmp_66_fu_293_p3 = ap_const_lv1_1) and (icmp_ln193_fu_264_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212 <= ap_phi_reg_pp0_iter0_tmp_x_V_2_reg_212;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_233)) then
                if (((tmp_66_fu_293_p3 = ap_const_lv1_1) and (icmp_ln193_fu_264_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225 <= ap_phi_reg_pp0_iter0_tmp_y_V_2_reg_225;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_233)) then
                if (((tmp_66_fu_293_p3 = ap_const_lv1_1) and (icmp_ln193_fu_264_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238 <= ap_phi_reg_pp0_iter0_tmp_z_V_2_reg_238;
                end if;
            end if; 
        end if;
    end process;

    c_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_233)) then
                if ((icmp_ln193_fu_264_p2 = ap_const_lv1_0)) then 
                    c_fu_102 <= add_ln195_fu_325_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    c_fu_102 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_233)) then
                if ((icmp_ln193_fu_264_p2 = ap_const_lv1_0)) then 
                    indvar_flatten_fu_106 <= add_ln193_fu_270_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_106 <= ap_const_lv19_0;
                end if;
            end if; 
        end if;
    end process;

    tmp_x_V_2_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if (((tmp_66_reg_1352 = ap_const_lv1_0) and (icmp_ln193_reg_1348 = ap_const_lv1_0))) then 
                    tmp_x_V_2_reg_212 <= y_filtered_x_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    tmp_x_V_2_reg_212 <= ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212;
                end if;
            end if; 
        end if;
    end process;

    tmp_y_V_2_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if (((tmp_66_reg_1352 = ap_const_lv1_0) and (icmp_ln193_reg_1348 = ap_const_lv1_0))) then 
                    tmp_y_V_2_reg_225 <= y_filtered_y_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    tmp_y_V_2_reg_225 <= ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225;
                end if;
            end if; 
        end if;
    end process;

    tmp_z_V_2_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_228)) then
                if (((tmp_66_reg_1352 = ap_const_lv1_0) and (icmp_ln193_reg_1348 = ap_const_lv1_0))) then 
                    tmp_z_V_2_reg_238 <= y_filtered_z_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    tmp_z_V_2_reg_238 <= ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln193_fu_264_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln216_reg_1356 <= and_ln216_fu_313_p2;
                tmp_66_reg_1352 <= select_ln193_fu_285_p3(10 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln216_reg_1356_pp0_iter1_reg <= and_ln216_reg_1356;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln193_reg_1348 <= icmp_ln193_fu_264_p2;
                icmp_ln226_reg_1360_pp0_iter1_reg <= icmp_ln226_reg_1360;
                r_V_184_reg_1364 <= r_V_148_fu_158;
                r_V_186_reg_1369 <= r_V_150_fu_162;
                r_V_188_reg_1374 <= r_V_152_fu_166;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln216_fu_313_p2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln193_fu_264_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln226_reg_1360 <= icmp_ln226_fu_319_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln193_reg_1348 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_120_fu_94 <= r_V_126_fu_114;
                r_V_122_fu_98 <= r_V_128_fu_118;
                r_V_124_fu_110 <= r_V_130_fu_122;
                r_V_126_fu_114 <= r_V_132_fu_126;
                r_V_128_fu_118 <= r_V_134_fu_130;
                r_V_130_fu_122 <= r_V_136_fu_134;
                r_V_132_fu_126 <= r_V_138_fu_138;
                r_V_134_fu_130 <= r_V_140_fu_142;
                r_V_136_fu_134 <= r_V_142_fu_146;
                r_V_138_fu_138 <= r_V_144_fu_150;
                r_V_140_fu_142 <= r_V_146_fu_154;
                r_V_142_fu_146 <= r_V_148_fu_158;
                r_V_144_fu_150 <= r_V_150_fu_162;
                r_V_146_fu_154 <= r_V_152_fu_166;
                r_V_148_fu_158 <= ap_phi_mux_tmp_x_V_2_phi_fu_216_p4;
                r_V_150_fu_162 <= ap_phi_mux_tmp_y_V_2_phi_fu_229_p4;
                r_V_152_fu_166 <= ap_phi_mux_tmp_z_V_2_phi_fu_242_p4;
                r_V_fu_90 <= r_V_124_fu_110;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln216_reg_1356) and (icmp_ln193_reg_1348 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_39_reg_1379 <= ret_V_48_fu_835_p2(50 downto 19);
                tmp_40_reg_1384 <= ret_V_49_fu_865_p2(50 downto 19);
                tmp_41_reg_1389 <= ret_V_50_fu_895_p2(50 downto 19);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    acc_x_V_4_fu_405_p4 <= r_V_154_fu_399_p2(48 downto 19);
    acc_y_V_4_fu_425_p4 <= r_V_156_fu_419_p2(48 downto 19);
    acc_z_V_4_fu_445_p4 <= r_V_158_fu_439_p2(48 downto 19);
    add_ln193_fu_270_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv19_1));
    add_ln195_fu_325_p2 <= std_logic_vector(unsigned(select_ln193_fu_285_p3) + unsigned(ap_const_lv11_1));
    and_ln216_fu_313_p2 <= (xor_ln200_fu_301_p2 and icmp_ln216_fu_307_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, y_filtered_x_V_empty_n, ap_predicate_op91_read_state2, y_filtered_y_V_empty_n, ap_predicate_op92_read_state2, y_filtered_z_V_empty_n, ap_predicate_op93_read_state2, filtered_gradient_x_V_full_n, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op201_write_state3, filtered_gradient_y_V_full_n, ap_predicate_op202_write_state3, filtered_gradient_z_V_full_n, ap_predicate_op203_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op93_read_state2 = ap_const_boolean_1) and (y_filtered_z_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op92_read_state2 = ap_const_boolean_1) and (y_filtered_y_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op91_read_state2 = ap_const_boolean_1) and (y_filtered_x_V_empty_n = ap_const_logic_0)))) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((filtered_gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op201_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_x_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_z_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_y_V_full_n = ap_const_logic_0)) or ((ap_predicate_op203_write_state3 = ap_const_boolean_1) and (filtered_gradient_z_V_full_n = ap_const_logic_0)) or ((ap_predicate_op202_write_state3 = ap_const_boolean_1) and (filtered_gradient_y_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, y_filtered_x_V_empty_n, ap_predicate_op91_read_state2, y_filtered_y_V_empty_n, ap_predicate_op92_read_state2, y_filtered_z_V_empty_n, ap_predicate_op93_read_state2, filtered_gradient_x_V_full_n, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op201_write_state3, filtered_gradient_y_V_full_n, ap_predicate_op202_write_state3, filtered_gradient_z_V_full_n, ap_predicate_op203_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op93_read_state2 = ap_const_boolean_1) and (y_filtered_z_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op92_read_state2 = ap_const_boolean_1) and (y_filtered_y_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op91_read_state2 = ap_const_boolean_1) and (y_filtered_x_V_empty_n = ap_const_logic_0)))) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((filtered_gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op201_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_x_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_z_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_y_V_full_n = ap_const_logic_0)) or ((ap_predicate_op203_write_state3 = ap_const_boolean_1) and (filtered_gradient_z_V_full_n = ap_const_logic_0)) or ((ap_predicate_op202_write_state3 = ap_const_boolean_1) and (filtered_gradient_y_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, y_filtered_x_V_empty_n, ap_predicate_op91_read_state2, y_filtered_y_V_empty_n, ap_predicate_op92_read_state2, y_filtered_z_V_empty_n, ap_predicate_op93_read_state2, filtered_gradient_x_V_full_n, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op201_write_state3, filtered_gradient_y_V_full_n, ap_predicate_op202_write_state3, filtered_gradient_z_V_full_n, ap_predicate_op203_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op93_read_state2 = ap_const_boolean_1) and (y_filtered_z_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op92_read_state2 = ap_const_boolean_1) and (y_filtered_y_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op91_read_state2 = ap_const_boolean_1) and (y_filtered_x_V_empty_n = ap_const_logic_0)))) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((filtered_gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op201_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_x_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_z_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_y_V_full_n = ap_const_logic_0)) or ((ap_predicate_op203_write_state3 = ap_const_boolean_1) and (filtered_gradient_z_V_full_n = ap_const_logic_0)) or ((ap_predicate_op202_write_state3 = ap_const_boolean_1) and (filtered_gradient_y_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(y_filtered_x_V_empty_n, ap_predicate_op91_read_state2, y_filtered_y_V_empty_n, ap_predicate_op92_read_state2, y_filtered_z_V_empty_n, ap_predicate_op93_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op93_read_state2 = ap_const_boolean_1) and (y_filtered_z_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op92_read_state2 = ap_const_boolean_1) and (y_filtered_y_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op91_read_state2 = ap_const_boolean_1) and (y_filtered_x_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(filtered_gradient_x_V_full_n, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op201_write_state3, filtered_gradient_y_V_full_n, ap_predicate_op202_write_state3, filtered_gradient_z_V_full_n, ap_predicate_op203_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((filtered_gradient_x_V_full_n = ap_const_logic_0) and (ap_predicate_op201_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_x_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_z_V_full_n = ap_const_logic_0)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (filtered_gradient_y_V_full_n = ap_const_logic_0)) or ((ap_predicate_op203_write_state3 = ap_const_boolean_1) and (filtered_gradient_z_V_full_n = ap_const_logic_0)) or ((ap_predicate_op202_write_state3 = ap_const_boolean_1) and (filtered_gradient_y_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_228_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_228 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_233_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_233 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln193_fu_264_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln193_fu_264_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln193_reg_1348, ap_block_pp0_stage0_subdone)
    begin
        if (((icmp_ln193_reg_1348 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_tmp_x_V_2_phi_fu_216_p4_assign_proc : process(y_filtered_x_V_dout, icmp_ln193_reg_1348, tmp_66_reg_1352, ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212)
    begin
        if (((tmp_66_reg_1352 = ap_const_lv1_0) and (icmp_ln193_reg_1348 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_x_V_2_phi_fu_216_p4 <= y_filtered_x_V_dout;
        else 
            ap_phi_mux_tmp_x_V_2_phi_fu_216_p4 <= ap_phi_reg_pp0_iter1_tmp_x_V_2_reg_212;
        end if; 
    end process;


    ap_phi_mux_tmp_y_V_2_phi_fu_229_p4_assign_proc : process(icmp_ln193_reg_1348, tmp_66_reg_1352, y_filtered_y_V_dout, ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225)
    begin
        if (((tmp_66_reg_1352 = ap_const_lv1_0) and (icmp_ln193_reg_1348 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_y_V_2_phi_fu_229_p4 <= y_filtered_y_V_dout;
        else 
            ap_phi_mux_tmp_y_V_2_phi_fu_229_p4 <= ap_phi_reg_pp0_iter1_tmp_y_V_2_reg_225;
        end if; 
    end process;


    ap_phi_mux_tmp_z_V_2_phi_fu_242_p4_assign_proc : process(icmp_ln193_reg_1348, tmp_66_reg_1352, y_filtered_z_V_dout, ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238)
    begin
        if (((tmp_66_reg_1352 = ap_const_lv1_0) and (icmp_ln193_reg_1348 = ap_const_lv1_0))) then 
            ap_phi_mux_tmp_z_V_2_phi_fu_242_p4 <= y_filtered_z_V_dout;
        else 
            ap_phi_mux_tmp_z_V_2_phi_fu_242_p4 <= ap_phi_reg_pp0_iter1_tmp_z_V_2_reg_238;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_tmp_x_V_2_reg_212 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_y_V_2_reg_225 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_z_V_2_reg_238 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op201_write_state3_assign_proc : process(and_ln216_reg_1356_pp0_iter1_reg, icmp_ln226_reg_1360_pp0_iter1_reg)
    begin
                ap_predicate_op201_write_state3 <= ((icmp_ln226_reg_1360_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln216_reg_1356_pp0_iter1_reg));
    end process;


    ap_predicate_op202_write_state3_assign_proc : process(and_ln216_reg_1356_pp0_iter1_reg, icmp_ln226_reg_1360_pp0_iter1_reg)
    begin
                ap_predicate_op202_write_state3 <= ((icmp_ln226_reg_1360_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln216_reg_1356_pp0_iter1_reg));
    end process;


    ap_predicate_op203_write_state3_assign_proc : process(and_ln216_reg_1356_pp0_iter1_reg, icmp_ln226_reg_1360_pp0_iter1_reg)
    begin
                ap_predicate_op203_write_state3 <= ((icmp_ln226_reg_1360_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln216_reg_1356_pp0_iter1_reg));
    end process;


    ap_predicate_op91_read_state2_assign_proc : process(icmp_ln193_reg_1348, tmp_66_reg_1352)
    begin
                ap_predicate_op91_read_state2 <= ((tmp_66_reg_1352 = ap_const_lv1_0) and (icmp_ln193_reg_1348 = ap_const_lv1_0));
    end process;


    ap_predicate_op92_read_state2_assign_proc : process(icmp_ln193_reg_1348, tmp_66_reg_1352)
    begin
                ap_predicate_op92_read_state2 <= ((tmp_66_reg_1352 = ap_const_lv1_0) and (icmp_ln193_reg_1348 = ap_const_lv1_0));
    end process;


    ap_predicate_op93_read_state2_assign_proc : process(icmp_ln193_reg_1348, tmp_66_reg_1352)
    begin
                ap_predicate_op93_read_state2 <= ((tmp_66_reg_1352 = ap_const_lv1_0) and (icmp_ln193_reg_1348 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_c_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, c_fu_102, ap_loop_init, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_c_load <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_c_load <= c_fu_102;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_106, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv19_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_106;
        end if; 
    end process;


    filtered_gradient_x_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, filtered_gradient_x_V_full_n, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op201_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op201_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            filtered_gradient_x_V_blk_n <= filtered_gradient_x_V_full_n;
        else 
            filtered_gradient_x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    filtered_gradient_x_V_din_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op201_write_state3, ap_block_pp0_stage0_01001, ret_V_54_fu_1147_p2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg)) then 
                filtered_gradient_x_V_din <= ret_V_54_fu_1147_p2(50 downto 19);
            elsif ((ap_predicate_op201_write_state3 = ap_const_boolean_1)) then 
                filtered_gradient_x_V_din <= ap_const_lv32_0;
            else 
                filtered_gradient_x_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            filtered_gradient_x_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    filtered_gradient_x_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op201_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op201_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            filtered_gradient_x_V_write <= ap_const_logic_1;
        else 
            filtered_gradient_x_V_write <= ap_const_logic_0;
        end if; 
    end process;


    filtered_gradient_y_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln216_reg_1356_pp0_iter1_reg, filtered_gradient_y_V_full_n, ap_predicate_op202_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op202_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            filtered_gradient_y_V_blk_n <= filtered_gradient_y_V_full_n;
        else 
            filtered_gradient_y_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    filtered_gradient_y_V_din_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op202_write_state3, ap_block_pp0_stage0_01001, ret_V_55_fu_1178_p2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg)) then 
                filtered_gradient_y_V_din <= ret_V_55_fu_1178_p2(50 downto 19);
            elsif ((ap_predicate_op202_write_state3 = ap_const_boolean_1)) then 
                filtered_gradient_y_V_din <= ap_const_lv32_0;
            else 
                filtered_gradient_y_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            filtered_gradient_y_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    filtered_gradient_y_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op202_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op202_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            filtered_gradient_y_V_write <= ap_const_logic_1;
        else 
            filtered_gradient_y_V_write <= ap_const_logic_0;
        end if; 
    end process;


    filtered_gradient_z_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln216_reg_1356_pp0_iter1_reg, filtered_gradient_z_V_full_n, ap_predicate_op203_write_state3, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op203_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            filtered_gradient_z_V_blk_n <= filtered_gradient_z_V_full_n;
        else 
            filtered_gradient_z_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    filtered_gradient_z_V_din_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op203_write_state3, ap_block_pp0_stage0_01001, ret_V_56_fu_1209_p2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg)) then 
                filtered_gradient_z_V_din <= ret_V_56_fu_1209_p2(50 downto 19);
            elsif ((ap_predicate_op203_write_state3 = ap_const_boolean_1)) then 
                filtered_gradient_z_V_din <= ap_const_lv32_0;
            else 
                filtered_gradient_z_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            filtered_gradient_z_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    filtered_gradient_z_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln216_reg_1356_pp0_iter1_reg, ap_predicate_op203_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op203_write_state3 = ap_const_boolean_1)) or ((ap_const_lv1_1 = and_ln216_reg_1356_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            filtered_gradient_z_V_write <= ap_const_logic_1;
        else 
            filtered_gradient_z_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln193_fu_264_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv19_6D51C) else "0";
    icmp_ln195_fu_279_p2 <= "1" when (ap_sig_allocacmp_c_load = ap_const_lv11_403) else "0";
    icmp_ln216_fu_307_p2 <= "1" when (unsigned(select_ln193_fu_285_p3) > unsigned(ap_const_lv11_5)) else "0";
    icmp_ln226_fu_319_p2 <= "1" when (unsigned(select_ln193_fu_285_p3) > unsigned(ap_const_lv11_2)) else "0";
    lhs_28_fu_465_p3 <= (acc_x_V_4_fu_405_p4 & ap_const_lv19_0);
        lhs_29_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_67_fu_493_p3),51));

    lhs_30_fu_635_p3 <= (tmp_s_fu_625_p4 & ap_const_lv19_0);
    lhs_31_fu_745_p3 <= (tmp_36_fu_735_p4 & ap_const_lv19_0);
    lhs_32_fu_1001_p3 <= (tmp_39_reg_1379 & ap_const_lv19_0);
    lhs_33_fu_1051_p3 <= (tmp_42_fu_1041_p4 & ap_const_lv19_0);
    lhs_V_13_fu_711_p3 <= (tmp_35_fu_701_p4 & ap_const_lv19_0);
    lhs_V_14_fu_515_p3 <= (acc_y_V_4_fu_425_p4 & ap_const_lv19_0);
    lhs_V_16_fu_565_p3 <= (acc_z_V_4_fu_445_p4 & ap_const_lv19_0);
        lhs_V_17_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_69_fu_543_p3),51));

    lhs_V_18_fu_813_p3 <= (tmp_38_fu_803_p4 & ap_const_lv19_0);
        lhs_V_19_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_71_fu_593_p3),51));

    lhs_V_20_fu_1015_p3 <= (tmp_41_reg_1389 & ap_const_lv19_0);
    lhs_V_21_fu_1125_p3 <= (tmp_44_fu_1115_p4 & ap_const_lv19_0);
    lhs_V_26_fu_673_p3 <= (tmp_34_fu_663_p4 & ap_const_lv19_0);
    lhs_V_27_fu_779_p3 <= (tmp_37_fu_769_p4 & ap_const_lv19_0);
    lhs_V_28_fu_1008_p3 <= (tmp_40_reg_1384 & ap_const_lv19_0);
    lhs_V_29_fu_1088_p3 <= (tmp_43_fu_1078_p4 & ap_const_lv19_0);
    r_V_154_fu_399_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_156_fu_419_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_158_fu_439_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_161_fu_459_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_163_fu_509_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_165_fu_559_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_167_fu_609_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_169_fu_647_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_171_fu_685_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_173_fu_723_p1 <= ap_const_lv51_25288(19 - 1 downto 0);
    r_V_175_fu_757_p1 <= ap_const_lv51_25288(19 - 1 downto 0);
    r_V_177_fu_791_p1 <= ap_const_lv51_25288(19 - 1 downto 0);
    r_V_179_fu_825_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_181_fu_855_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_183_fu_885_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_185_fu_1025_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_187_fu_1062_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_189_fu_1099_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_191_fu_1137_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_193_fu_1168_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_195_fu_1199_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_40_fu_527_p2 <= std_logic_vector(signed(sext_ln1347_3_fu_523_p1) + signed(r_V_163_fu_509_p2));
    ret_V_41_fu_577_p2 <= std_logic_vector(signed(sext_ln1347_4_fu_573_p1) + signed(r_V_165_fu_559_p2));
    ret_V_42_fu_619_p2 <= std_logic_vector(signed(lhs_29_fu_501_p1) + signed(sext_ln813_fu_615_p1));
    ret_V_43_fu_657_p2 <= std_logic_vector(signed(lhs_V_17_fu_551_p1) + signed(sext_ln813_12_fu_653_p1));
    ret_V_44_fu_695_p2 <= std_logic_vector(signed(lhs_V_19_fu_601_p1) + signed(sext_ln813_13_fu_691_p1));
    ret_V_45_fu_729_p2 <= std_logic_vector(unsigned(lhs_30_fu_635_p3) + unsigned(r_V_173_fu_723_p2));
    ret_V_46_fu_763_p2 <= std_logic_vector(unsigned(lhs_V_26_fu_673_p3) + unsigned(r_V_175_fu_757_p2));
    ret_V_47_fu_797_p2 <= std_logic_vector(unsigned(lhs_V_13_fu_711_p3) + unsigned(r_V_177_fu_791_p2));
    ret_V_48_fu_835_p2 <= std_logic_vector(unsigned(lhs_31_fu_745_p3) + unsigned(sext_ln813_14_fu_831_p1));
    ret_V_49_fu_865_p2 <= std_logic_vector(unsigned(lhs_V_27_fu_779_p3) + unsigned(sext_ln813_15_fu_861_p1));
    ret_V_50_fu_895_p2 <= std_logic_vector(unsigned(lhs_V_18_fu_813_p3) + unsigned(sext_ln813_16_fu_891_p1));
    ret_V_51_fu_1035_p2 <= std_logic_vector(unsigned(lhs_32_fu_1001_p3) + unsigned(sext_ln813_17_fu_1031_p1));
    ret_V_52_fu_1072_p2 <= std_logic_vector(unsigned(lhs_V_28_fu_1008_p3) + unsigned(sext_ln813_18_fu_1068_p1));
    ret_V_53_fu_1109_p2 <= std_logic_vector(unsigned(lhs_V_20_fu_1015_p3) + unsigned(sext_ln813_19_fu_1105_p1));
    ret_V_54_fu_1147_p2 <= std_logic_vector(unsigned(lhs_33_fu_1051_p3) + unsigned(sext_ln813_20_fu_1143_p1));
    ret_V_55_fu_1178_p2 <= std_logic_vector(unsigned(lhs_V_29_fu_1088_p3) + unsigned(sext_ln813_21_fu_1174_p1));
    ret_V_56_fu_1209_p2 <= std_logic_vector(unsigned(lhs_V_21_fu_1125_p3) + unsigned(sext_ln813_22_fu_1205_p1));
    ret_V_fu_477_p2 <= std_logic_vector(signed(sext_ln1347_fu_473_p1) + signed(r_V_161_fu_459_p2));
    select_ln193_fu_285_p3 <= 
        ap_const_lv11_0 when (icmp_ln195_fu_279_p2(0) = '1') else 
        ap_sig_allocacmp_c_load;
        sext_ln1347_3_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_14_fu_515_p3),50));

        sext_ln1347_4_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_16_fu_565_p3),50));

        sext_ln1347_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_28_fu_465_p3),50));

        sext_ln813_12_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_169_fu_647_p2),51));

        sext_ln813_13_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_171_fu_685_p2),51));

        sext_ln813_14_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_179_fu_825_p2),51));

        sext_ln813_15_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_181_fu_855_p2),51));

        sext_ln813_16_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_183_fu_885_p2),51));

        sext_ln813_17_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_185_fu_1025_p2),51));

        sext_ln813_18_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_187_fu_1062_p2),51));

        sext_ln813_19_fu_1105_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_189_fu_1099_p2),51));

        sext_ln813_20_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_191_fu_1137_p2),51));

        sext_ln813_21_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_193_fu_1168_p2),51));

        sext_ln813_22_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_195_fu_1199_p2),51));

        sext_ln813_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_167_fu_609_p2),51));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_34_fu_663_p4 <= ret_V_43_fu_657_p2(50 downto 19);
    tmp_35_fu_701_p4 <= ret_V_44_fu_695_p2(50 downto 19);
    tmp_36_fu_735_p4 <= ret_V_45_fu_729_p2(50 downto 19);
    tmp_37_fu_769_p4 <= ret_V_46_fu_763_p2(50 downto 19);
    tmp_38_fu_803_p4 <= ret_V_47_fu_797_p2(50 downto 19);
    tmp_42_fu_1041_p4 <= ret_V_51_fu_1035_p2(50 downto 19);
    tmp_43_fu_1078_p4 <= ret_V_52_fu_1072_p2(50 downto 19);
    tmp_44_fu_1115_p4 <= ret_V_53_fu_1109_p2(50 downto 19);
    tmp_66_fu_293_p3 <= select_ln193_fu_285_p3(10 downto 10);
    tmp_67_fu_493_p3 <= (tmp_fu_483_p4 & ap_const_lv19_0);
    tmp_68_fu_533_p4 <= ret_V_40_fu_527_p2(49 downto 19);
    tmp_69_fu_543_p3 <= (tmp_68_fu_533_p4 & ap_const_lv19_0);
    tmp_70_fu_583_p4 <= ret_V_41_fu_577_p2(49 downto 19);
    tmp_71_fu_593_p3 <= (tmp_70_fu_583_p4 & ap_const_lv19_0);
    tmp_fu_483_p4 <= ret_V_fu_477_p2(49 downto 19);
    tmp_s_fu_625_p4 <= ret_V_42_fu_619_p2(50 downto 19);
    xor_ln200_fu_301_p2 <= (tmp_66_fu_293_p3 xor ap_const_lv1_1);

    y_filtered_x_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, y_filtered_x_V_empty_n, ap_predicate_op91_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op91_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            y_filtered_x_V_blk_n <= y_filtered_x_V_empty_n;
        else 
            y_filtered_x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_x_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op91_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op91_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            y_filtered_x_V_read <= ap_const_logic_1;
        else 
            y_filtered_x_V_read <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_y_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, y_filtered_y_V_empty_n, ap_predicate_op92_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op92_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            y_filtered_y_V_blk_n <= y_filtered_y_V_empty_n;
        else 
            y_filtered_y_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_y_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op92_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op92_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            y_filtered_y_V_read <= ap_const_logic_1;
        else 
            y_filtered_y_V_read <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_z_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, y_filtered_z_V_empty_n, ap_predicate_op93_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op93_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            y_filtered_z_V_blk_n <= y_filtered_z_V_empty_n;
        else 
            y_filtered_z_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_z_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op93_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op93_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            y_filtered_z_V_read <= ap_const_logic_1;
        else 
            y_filtered_z_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
