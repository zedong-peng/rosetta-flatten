-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity optical_flow_gradient_weight_y is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    gradient_x_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    gradient_x_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    gradient_x_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    gradient_x_V_empty_n : IN STD_LOGIC;
    gradient_x_V_read : OUT STD_LOGIC;
    gradient_y_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    gradient_y_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    gradient_y_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    gradient_y_V_empty_n : IN STD_LOGIC;
    gradient_y_V_read : OUT STD_LOGIC;
    gradient_z_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    gradient_z_V_num_data_valid : IN STD_LOGIC_VECTOR (12 downto 0);
    gradient_z_V_fifo_cap : IN STD_LOGIC_VECTOR (12 downto 0);
    gradient_z_V_empty_n : IN STD_LOGIC;
    gradient_z_V_read : OUT STD_LOGIC;
    y_filtered_x_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_x_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_x_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_x_V_full_n : IN STD_LOGIC;
    y_filtered_x_V_write : OUT STD_LOGIC;
    y_filtered_y_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_y_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_y_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_y_V_full_n : IN STD_LOGIC;
    y_filtered_y_V_write : OUT STD_LOGIC;
    y_filtered_z_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_filtered_z_V_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_z_V_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    y_filtered_z_V_full_n : IN STD_LOGIC;
    y_filtered_z_V_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC );
end;


architecture behav of optical_flow_gradient_weight_y is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv9_1B4 : STD_LOGIC_VECTOR (8 downto 0) := "110110100";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv19_6DC00 : STD_LOGIC_VECTOR (18 downto 0) := "1101101110000000000";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv49_9A9F : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000001001101010011111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv50_11062 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000010001000001100010";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv50_17EC5 : STD_LOGIC_VECTOR (49 downto 0) := "00000000000000000000000000000000010111111011000101";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv51_25288 : STD_LOGIC_VECTOR (50 downto 0) := "000000000000000000000000000000000100101001010001000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln139_reg_1543 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_1_reg_1547 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op179_read_state2 : BOOLEAN;
    signal ap_predicate_op180_read_state2 : BOOLEAN;
    signal ap_predicate_op181_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal select_ln139_3_reg_1555 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_3_reg_1555_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_2_reg_1551 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_2_reg_1551_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op310_write_state3 : BOOLEAN;
    signal ap_predicate_op311_write_state3 : BOOLEAN;
    signal ap_predicate_op312_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln139_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gradient_x_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal gradient_y_V_blk_n : STD_LOGIC;
    signal gradient_z_V_blk_n : STD_LOGIC;
    signal y_filtered_x_V_blk_n : STD_LOGIC;
    signal y_filtered_y_V_blk_n : STD_LOGIC;
    signal y_filtered_z_V_blk_n : STD_LOGIC;
    signal r_V_113_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_115_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_117_reg_579 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln139_1_fu_685_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_2_fu_699_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_3_fu_725_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_val_x_V_addr_reg_1559 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_addr_reg_1565 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_addr_reg_1571 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_1_addr_reg_1577 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_1_addr_reg_1583 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_1_addr_reg_1589 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_2_addr_reg_1595 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_2_addr_reg_1601 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_2_addr_reg_1607 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_3_addr_reg_1613 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_3_addr_reg_1619 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_3_addr_reg_1625 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_4_addr_reg_1631 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_4_addr_reg_1637 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_4_addr_reg_1643 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_5_addr_reg_1649 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_5_addr_reg_1655 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_5_addr_reg_1661 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_137_reg_1667 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_139_reg_1672 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_141_reg_1677 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_V_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_143_reg_1682 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_V_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_145_reg_1687 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_V_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_147_reg_1692 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_1697 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_reg_1702 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_1707 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_ce0 : STD_LOGIC;
    signal buf_val_x_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_ce1 : STD_LOGIC;
    signal buf_val_x_V_we1 : STD_LOGIC;
    signal buf_val_x_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_1_ce0 : STD_LOGIC;
    signal buf_val_x_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_V_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_1_ce1 : STD_LOGIC;
    signal buf_val_x_V_1_we1 : STD_LOGIC;
    signal buf_val_x_V_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_2_ce0 : STD_LOGIC;
    signal buf_val_x_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_V_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_2_ce1 : STD_LOGIC;
    signal buf_val_x_V_2_we1 : STD_LOGIC;
    signal buf_val_x_V_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_3_ce0 : STD_LOGIC;
    signal buf_val_x_V_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_x_V_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_3_ce1 : STD_LOGIC;
    signal buf_val_x_V_3_we1 : STD_LOGIC;
    signal buf_val_x_V_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_4_ce0 : STD_LOGIC;
    signal buf_val_x_V_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_4_ce1 : STD_LOGIC;
    signal buf_val_x_V_4_we1 : STD_LOGIC;
    signal buf_val_x_V_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_5_ce0 : STD_LOGIC;
    signal buf_val_x_V_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_x_V_5_ce1 : STD_LOGIC;
    signal buf_val_x_V_5_we1 : STD_LOGIC;
    signal buf_val_y_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_ce0 : STD_LOGIC;
    signal buf_val_y_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_ce1 : STD_LOGIC;
    signal buf_val_y_V_we1 : STD_LOGIC;
    signal buf_val_y_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_1_ce0 : STD_LOGIC;
    signal buf_val_y_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_V_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_1_ce1 : STD_LOGIC;
    signal buf_val_y_V_1_we1 : STD_LOGIC;
    signal buf_val_y_V_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_2_ce0 : STD_LOGIC;
    signal buf_val_y_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_V_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_2_ce1 : STD_LOGIC;
    signal buf_val_y_V_2_we1 : STD_LOGIC;
    signal buf_val_y_V_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_3_ce0 : STD_LOGIC;
    signal buf_val_y_V_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_y_V_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_3_ce1 : STD_LOGIC;
    signal buf_val_y_V_3_we1 : STD_LOGIC;
    signal buf_val_y_V_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_4_ce0 : STD_LOGIC;
    signal buf_val_y_V_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_4_ce1 : STD_LOGIC;
    signal buf_val_y_V_4_we1 : STD_LOGIC;
    signal buf_val_y_V_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_5_ce0 : STD_LOGIC;
    signal buf_val_y_V_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_y_V_5_ce1 : STD_LOGIC;
    signal buf_val_y_V_5_we1 : STD_LOGIC;
    signal buf_val_z_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_ce0 : STD_LOGIC;
    signal buf_val_z_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_ce1 : STD_LOGIC;
    signal buf_val_z_V_we1 : STD_LOGIC;
    signal buf_val_z_V_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_1_ce0 : STD_LOGIC;
    signal buf_val_z_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_V_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_1_ce1 : STD_LOGIC;
    signal buf_val_z_V_1_we1 : STD_LOGIC;
    signal buf_val_z_V_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_2_ce0 : STD_LOGIC;
    signal buf_val_z_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_V_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_2_ce1 : STD_LOGIC;
    signal buf_val_z_V_2_we1 : STD_LOGIC;
    signal buf_val_z_V_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_3_ce0 : STD_LOGIC;
    signal buf_val_z_V_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_val_z_V_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_3_ce1 : STD_LOGIC;
    signal buf_val_z_V_3_we1 : STD_LOGIC;
    signal buf_val_z_V_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_4_ce0 : STD_LOGIC;
    signal buf_val_z_V_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_4_ce1 : STD_LOGIC;
    signal buf_val_z_V_4_we1 : STD_LOGIC;
    signal buf_val_z_V_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_5_ce0 : STD_LOGIC;
    signal buf_val_z_V_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_val_z_V_5_ce1 : STD_LOGIC;
    signal buf_val_z_V_5_we1 : STD_LOGIC;
    signal ap_phi_mux_r_V_113_phi_fu_555_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_r_V_113_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_r_V_113_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_r_V_115_phi_fu_569_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_r_V_115_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_r_V_115_reg_565 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_r_V_117_phi_fu_583_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_r_V_117_reg_579 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_r_V_117_reg_579 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln803_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_fu_104 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln141_fu_763_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_c_load : STD_LOGIC_VECTOR (10 downto 0);
    signal r_fu_108 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln139_4_fu_733_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_r_3 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar_flatten_fu_112 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln139_1_fu_650_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal cmp10_i_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp34_not_i_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp35_not_i_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln141_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln139_fu_659_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal cmp10_i_mid1_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp66_i_mid1_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp66_i_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp34_not_i_mid1_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp35_not_i_mid1_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_mid1_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln139_fu_671_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_103_fu_788_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_103_fu_788_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_107_fu_808_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_107_fu_808_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_111_fu_828_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_111_fu_828_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_120_fu_848_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal acc_x_V_2_fu_794_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_22_fu_854_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1347_fu_862_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_120_fu_848_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_fu_866_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_fu_872_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_49_fu_882_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_122_fu_898_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal acc_y_V_2_fu_814_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_V_1_fu_904_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1347_1_fu_912_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_122_fu_898_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_23_fu_916_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_50_fu_922_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_51_fu_932_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_124_fu_948_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal acc_z_V_2_fu_834_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal lhs_V_3_fu_954_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal sext_ln1347_2_fu_962_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_124_fu_948_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_24_fu_966_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal tmp_52_fu_972_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_53_fu_982_p3 : STD_LOGIC_VECTOR (49 downto 0);
    signal r_V_126_fu_998_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_126_fu_998_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_23_fu_890_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_fu_1004_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_25_fu_1008_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_s_fu_1014_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_128_fu_1036_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_128_fu_1036_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_4_fu_940_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_1_fu_1042_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_26_fu_1046_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_23_fu_1052_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_130_fu_1074_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_130_fu_1074_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_5_fu_990_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_2_fu_1080_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_27_fu_1084_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_24_fu_1090_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_132_fu_1112_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_132_fu_1112_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_24_fu_1024_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_28_fu_1118_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_134_fu_1138_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_134_fu_1138_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_V_6_fu_1062_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_29_fu_1144_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_136_fu_1164_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_136_fu_1164_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal lhs_V_7_fu_1100_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_30_fu_1170_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_138_fu_1210_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_138_fu_1210_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_25_fu_1186_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_3_fu_1216_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_31_fu_1220_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_28_fu_1226_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_140_fu_1247_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_140_fu_1247_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_8_fu_1193_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_4_fu_1253_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_32_fu_1257_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_29_fu_1263_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_142_fu_1284_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_142_fu_1284_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_9_fu_1200_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_5_fu_1290_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_33_fu_1294_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_30_fu_1300_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_144_fu_1321_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_144_fu_1321_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_26_fu_1236_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_6_fu_1327_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_34_fu_1331_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_31_fu_1337_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_146_fu_1358_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_146_fu_1358_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_11_fu_1273_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_7_fu_1364_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_35_fu_1368_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_32_fu_1374_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_148_fu_1395_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_148_fu_1395_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_10_fu_1310_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_8_fu_1401_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_36_fu_1405_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal tmp_33_fu_1411_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_149_fu_1433_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_149_fu_1433_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal lhs_27_fu_1347_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_9_fu_1439_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_37_fu_1443_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_150_fu_1464_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_150_fu_1464_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal lhs_V_13_fu_1384_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_10_fu_1470_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_38_fu_1474_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_151_fu_1495_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_151_fu_1495_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal lhs_V_12_fu_1421_p3 : STD_LOGIC_VECTOR (50 downto 0);
    signal sext_ln813_11_fu_1501_p1 : STD_LOGIC_VECTOR (50 downto 0);
    signal ret_V_39_fu_1505_p2 : STD_LOGIC_VECTOR (50 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_115 : BOOLEAN;
    signal ap_enable_state1_pp0_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_146 : BOOLEAN;
    signal ap_enable_state2_pp0_iter1_stage0 : BOOLEAN;
    signal ap_enable_operation_164 : BOOLEAN;
    signal ap_enable_operation_116 : BOOLEAN;
    signal ap_enable_operation_147 : BOOLEAN;
    signal ap_enable_operation_165 : BOOLEAN;
    signal ap_enable_operation_117 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_enable_operation_166 : BOOLEAN;
    signal ap_enable_operation_118 : BOOLEAN;
    signal ap_enable_operation_149 : BOOLEAN;
    signal ap_enable_operation_167 : BOOLEAN;
    signal ap_enable_operation_119 : BOOLEAN;
    signal ap_enable_operation_150 : BOOLEAN;
    signal ap_enable_operation_168 : BOOLEAN;
    signal ap_enable_operation_120 : BOOLEAN;
    signal ap_enable_operation_151 : BOOLEAN;
    signal ap_enable_operation_169 : BOOLEAN;
    signal ap_enable_operation_121 : BOOLEAN;
    signal ap_enable_operation_152 : BOOLEAN;
    signal ap_enable_operation_170 : BOOLEAN;
    signal ap_enable_operation_122 : BOOLEAN;
    signal ap_enable_operation_153 : BOOLEAN;
    signal ap_enable_operation_171 : BOOLEAN;
    signal ap_enable_operation_123 : BOOLEAN;
    signal ap_enable_operation_154 : BOOLEAN;
    signal ap_enable_operation_172 : BOOLEAN;
    signal ap_enable_operation_124 : BOOLEAN;
    signal ap_enable_operation_155 : BOOLEAN;
    signal ap_enable_operation_173 : BOOLEAN;
    signal ap_enable_operation_125 : BOOLEAN;
    signal ap_enable_operation_156 : BOOLEAN;
    signal ap_enable_operation_174 : BOOLEAN;
    signal ap_enable_operation_126 : BOOLEAN;
    signal ap_enable_operation_157 : BOOLEAN;
    signal ap_enable_operation_175 : BOOLEAN;
    signal ap_enable_operation_127 : BOOLEAN;
    signal ap_enable_operation_158 : BOOLEAN;
    signal ap_enable_operation_176 : BOOLEAN;
    signal ap_enable_operation_128 : BOOLEAN;
    signal ap_enable_operation_159 : BOOLEAN;
    signal ap_enable_operation_177 : BOOLEAN;
    signal ap_enable_operation_129 : BOOLEAN;
    signal ap_enable_operation_160 : BOOLEAN;
    signal ap_enable_operation_178 : BOOLEAN;
    signal ap_enable_operation_130 : BOOLEAN;
    signal ap_enable_operation_161 : BOOLEAN;
    signal ap_enable_operation_186 : BOOLEAN;
    signal ap_enable_operation_131 : BOOLEAN;
    signal ap_enable_operation_162 : BOOLEAN;
    signal ap_enable_operation_187 : BOOLEAN;
    signal ap_enable_operation_132 : BOOLEAN;
    signal ap_enable_operation_163 : BOOLEAN;
    signal ap_enable_operation_188 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_462 : BOOLEAN;
    signal ap_condition_239 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component optical_flow_mul_32s_17ns_49_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (48 downto 0) );
    end component;


    component optical_flow_mul_32s_18ns_50_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;


    component optical_flow_mul_32s_19ns_51_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (50 downto 0) );
    end component;


    component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component optical_flow_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    buf_val_x_V_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_x_V_address0,
        ce0 => buf_val_x_V_ce0,
        q0 => buf_val_x_V_q0,
        address1 => buf_val_x_V_address1,
        ce1 => buf_val_x_V_ce1,
        we1 => buf_val_x_V_we1,
        d1 => buf_val_x_V_1_q0);

    buf_val_x_V_1_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_x_V_1_address0,
        ce0 => buf_val_x_V_1_ce0,
        q0 => buf_val_x_V_1_q0,
        address1 => buf_val_x_V_1_address1,
        ce1 => buf_val_x_V_1_ce1,
        we1 => buf_val_x_V_1_we1,
        d1 => buf_val_x_V_2_q0);

    buf_val_x_V_2_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_x_V_2_address0,
        ce0 => buf_val_x_V_2_ce0,
        q0 => buf_val_x_V_2_q0,
        address1 => buf_val_x_V_2_address1,
        ce1 => buf_val_x_V_2_ce1,
        we1 => buf_val_x_V_2_we1,
        d1 => buf_val_x_V_3_q0);

    buf_val_x_V_3_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_x_V_3_address0,
        ce0 => buf_val_x_V_3_ce0,
        q0 => buf_val_x_V_3_q0,
        address1 => buf_val_x_V_3_address1,
        ce1 => buf_val_x_V_3_ce1,
        we1 => buf_val_x_V_3_we1,
        d1 => buf_val_x_V_4_q0);

    buf_val_x_V_4_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_x_V_4_address0,
        ce0 => buf_val_x_V_4_ce0,
        q0 => buf_val_x_V_4_q0,
        address1 => buf_val_x_V_4_address1,
        ce1 => buf_val_x_V_4_ce1,
        we1 => buf_val_x_V_4_we1,
        d1 => buf_val_x_V_5_q0);

    buf_val_x_V_5_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_x_V_5_address0,
        ce0 => buf_val_x_V_5_ce0,
        q0 => buf_val_x_V_5_q0,
        address1 => buf_val_x_V_5_address1,
        ce1 => buf_val_x_V_5_ce1,
        we1 => buf_val_x_V_5_we1,
        d1 => ap_phi_mux_r_V_113_phi_fu_555_p4);

    buf_val_y_V_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_y_V_address0,
        ce0 => buf_val_y_V_ce0,
        q0 => buf_val_y_V_q0,
        address1 => buf_val_y_V_address1,
        ce1 => buf_val_y_V_ce1,
        we1 => buf_val_y_V_we1,
        d1 => buf_val_y_V_1_q0);

    buf_val_y_V_1_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_y_V_1_address0,
        ce0 => buf_val_y_V_1_ce0,
        q0 => buf_val_y_V_1_q0,
        address1 => buf_val_y_V_1_address1,
        ce1 => buf_val_y_V_1_ce1,
        we1 => buf_val_y_V_1_we1,
        d1 => buf_val_y_V_2_q0);

    buf_val_y_V_2_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_y_V_2_address0,
        ce0 => buf_val_y_V_2_ce0,
        q0 => buf_val_y_V_2_q0,
        address1 => buf_val_y_V_2_address1,
        ce1 => buf_val_y_V_2_ce1,
        we1 => buf_val_y_V_2_we1,
        d1 => buf_val_y_V_3_q0);

    buf_val_y_V_3_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_y_V_3_address0,
        ce0 => buf_val_y_V_3_ce0,
        q0 => buf_val_y_V_3_q0,
        address1 => buf_val_y_V_3_address1,
        ce1 => buf_val_y_V_3_ce1,
        we1 => buf_val_y_V_3_we1,
        d1 => buf_val_y_V_4_q0);

    buf_val_y_V_4_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_y_V_4_address0,
        ce0 => buf_val_y_V_4_ce0,
        q0 => buf_val_y_V_4_q0,
        address1 => buf_val_y_V_4_address1,
        ce1 => buf_val_y_V_4_ce1,
        we1 => buf_val_y_V_4_we1,
        d1 => buf_val_y_V_5_q0);

    buf_val_y_V_5_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_y_V_5_address0,
        ce0 => buf_val_y_V_5_ce0,
        q0 => buf_val_y_V_5_q0,
        address1 => buf_val_y_V_5_address1,
        ce1 => buf_val_y_V_5_ce1,
        we1 => buf_val_y_V_5_we1,
        d1 => ap_phi_mux_r_V_115_phi_fu_569_p4);

    buf_val_z_V_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_z_V_address0,
        ce0 => buf_val_z_V_ce0,
        q0 => buf_val_z_V_q0,
        address1 => buf_val_z_V_address1,
        ce1 => buf_val_z_V_ce1,
        we1 => buf_val_z_V_we1,
        d1 => buf_val_z_V_1_q0);

    buf_val_z_V_1_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_z_V_1_address0,
        ce0 => buf_val_z_V_1_ce0,
        q0 => buf_val_z_V_1_q0,
        address1 => buf_val_z_V_1_address1,
        ce1 => buf_val_z_V_1_ce1,
        we1 => buf_val_z_V_1_we1,
        d1 => buf_val_z_V_2_q0);

    buf_val_z_V_2_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_z_V_2_address0,
        ce0 => buf_val_z_V_2_ce0,
        q0 => buf_val_z_V_2_q0,
        address1 => buf_val_z_V_2_address1,
        ce1 => buf_val_z_V_2_ce1,
        we1 => buf_val_z_V_2_we1,
        d1 => buf_val_z_V_3_q0);

    buf_val_z_V_3_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_z_V_3_address0,
        ce0 => buf_val_z_V_3_ce0,
        q0 => buf_val_z_V_3_q0,
        address1 => buf_val_z_V_3_address1,
        ce1 => buf_val_z_V_3_ce1,
        we1 => buf_val_z_V_3_we1,
        d1 => buf_val_z_V_4_q0);

    buf_val_z_V_4_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_z_V_4_address0,
        ce0 => buf_val_z_V_4_ce0,
        q0 => buf_val_z_V_4_q0,
        address1 => buf_val_z_V_4_address1,
        ce1 => buf_val_z_V_4_ce1,
        we1 => buf_val_z_V_4_we1,
        d1 => buf_val_z_V_5_q0);

    buf_val_z_V_5_U : component optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_val_z_V_5_address0,
        ce0 => buf_val_z_V_5_ce0,
        q0 => buf_val_z_V_5_q0,
        address1 => buf_val_z_V_5_address1,
        ce1 => buf_val_z_V_5_ce1,
        we1 => buf_val_z_V_5_we1,
        d1 => ap_phi_mux_r_V_117_phi_fu_583_p4);

    mul_32s_17ns_49_1_1_U20 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => buf_val_x_V_q0,
        din1 => r_V_103_fu_788_p1,
        dout => r_V_103_fu_788_p2);

    mul_32s_17ns_49_1_1_U21 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => buf_val_y_V_q0,
        din1 => r_V_107_fu_808_p1,
        dout => r_V_107_fu_808_p2);

    mul_32s_17ns_49_1_1_U22 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => buf_val_z_V_q0,
        din1 => r_V_111_fu_828_p1,
        dout => r_V_111_fu_828_p2);

    mul_32s_18ns_50_1_1_U23 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => buf_val_x_V_1_q0,
        din1 => r_V_120_fu_848_p1,
        dout => r_V_120_fu_848_p2);

    mul_32s_18ns_50_1_1_U24 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => buf_val_y_V_1_q0,
        din1 => r_V_122_fu_898_p1,
        dout => r_V_122_fu_898_p2);

    mul_32s_18ns_50_1_1_U25 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => buf_val_z_V_1_q0,
        din1 => r_V_124_fu_948_p1,
        dout => r_V_124_fu_948_p2);

    mul_32s_18ns_50_1_1_U26 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => buf_val_x_V_2_q0,
        din1 => r_V_126_fu_998_p1,
        dout => r_V_126_fu_998_p2);

    mul_32s_18ns_50_1_1_U27 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => buf_val_y_V_2_q0,
        din1 => r_V_128_fu_1036_p1,
        dout => r_V_128_fu_1036_p2);

    mul_32s_18ns_50_1_1_U28 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => buf_val_z_V_2_q0,
        din1 => r_V_130_fu_1074_p1,
        dout => r_V_130_fu_1074_p2);

    mul_32s_19ns_51_1_1_U29 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => buf_val_x_V_3_q0,
        din1 => r_V_132_fu_1112_p1,
        dout => r_V_132_fu_1112_p2);

    mul_32s_19ns_51_1_1_U30 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => buf_val_y_V_3_q0,
        din1 => r_V_134_fu_1138_p1,
        dout => r_V_134_fu_1138_p2);

    mul_32s_19ns_51_1_1_U31 : component optical_flow_mul_32s_19ns_51_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 19,
        dout_WIDTH => 51)
    port map (
        din0 => buf_val_z_V_3_q0,
        din1 => r_V_136_fu_1164_p1,
        dout => r_V_136_fu_1164_p2);

    mul_32s_18ns_50_1_1_U32 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_137_reg_1667,
        din1 => r_V_138_fu_1210_p1,
        dout => r_V_138_fu_1210_p2);

    mul_32s_18ns_50_1_1_U33 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_139_reg_1672,
        din1 => r_V_140_fu_1247_p1,
        dout => r_V_140_fu_1247_p2);

    mul_32s_18ns_50_1_1_U34 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_141_reg_1677,
        din1 => r_V_142_fu_1284_p1,
        dout => r_V_142_fu_1284_p2);

    mul_32s_18ns_50_1_1_U35 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_143_reg_1682,
        din1 => r_V_144_fu_1321_p1,
        dout => r_V_144_fu_1321_p2);

    mul_32s_18ns_50_1_1_U36 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_145_reg_1687,
        din1 => r_V_146_fu_1358_p1,
        dout => r_V_146_fu_1358_p2);

    mul_32s_18ns_50_1_1_U37 : component optical_flow_mul_32s_18ns_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 18,
        dout_WIDTH => 50)
    port map (
        din0 => r_V_147_reg_1692,
        din1 => r_V_148_fu_1395_p1,
        dout => r_V_148_fu_1395_p2);

    mul_32s_17ns_49_1_1_U38 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => r_V_113_reg_551,
        din1 => r_V_149_fu_1433_p1,
        dout => r_V_149_fu_1433_p2);

    mul_32s_17ns_49_1_1_U39 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => r_V_115_reg_565,
        din1 => r_V_150_fu_1464_p1,
        dout => r_V_150_fu_1464_p2);

    mul_32s_17ns_49_1_1_U40 : component optical_flow_mul_32s_17ns_49_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 17,
        dout_WIDTH => 49)
    port map (
        din0 => r_V_117_reg_579,
        din1 => r_V_151_fu_1495_p1,
        dout => r_V_151_fu_1495_p2);

    flow_control_loop_pipe_U : component optical_flow_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => real_start,
        ap_ready => internal_ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_r_V_113_reg_551_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_462)) then
                if (((select_ln139_1_fu_685_p3 = ap_const_lv1_0) and (icmp_ln139_fu_644_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_r_V_113_reg_551 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_r_V_113_reg_551 <= ap_phi_reg_pp0_iter0_r_V_113_reg_551;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_r_V_115_reg_565_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_462)) then
                if (((select_ln139_1_fu_685_p3 = ap_const_lv1_0) and (icmp_ln139_fu_644_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_r_V_115_reg_565 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_r_V_115_reg_565 <= ap_phi_reg_pp0_iter0_r_V_115_reg_565;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_r_V_117_reg_579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_462)) then
                if (((select_ln139_1_fu_685_p3 = ap_const_lv1_0) and (icmp_ln139_fu_644_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_r_V_117_reg_579 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_r_V_117_reg_579 <= ap_phi_reg_pp0_iter0_r_V_117_reg_579;
                end if;
            end if; 
        end if;
    end process;

    c_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_462)) then
                if ((icmp_ln139_fu_644_p2 = ap_const_lv1_0)) then 
                    c_fu_104 <= add_ln141_fu_763_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    c_fu_104 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_462)) then
                if ((icmp_ln139_fu_644_p2 = ap_const_lv1_0)) then 
                    indvar_flatten_fu_112 <= add_ln139_1_fu_650_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_112 <= ap_const_lv19_0;
                end if;
            end if; 
        end if;
    end process;

    r_V_113_reg_551_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_239)) then
                if (((select_ln139_1_reg_1547 = ap_const_lv1_1) and (icmp_ln139_reg_1543 = ap_const_lv1_0))) then 
                    r_V_113_reg_551 <= gradient_x_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    r_V_113_reg_551 <= ap_phi_reg_pp0_iter1_r_V_113_reg_551;
                end if;
            end if; 
        end if;
    end process;

    r_V_115_reg_565_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_239)) then
                if (((select_ln139_1_reg_1547 = ap_const_lv1_1) and (icmp_ln139_reg_1543 = ap_const_lv1_0))) then 
                    r_V_115_reg_565 <= gradient_y_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    r_V_115_reg_565 <= ap_phi_reg_pp0_iter1_r_V_115_reg_565;
                end if;
            end if; 
        end if;
    end process;

    r_V_117_reg_579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_239)) then
                if (((select_ln139_1_reg_1547 = ap_const_lv1_1) and (icmp_ln139_reg_1543 = ap_const_lv1_0))) then 
                    r_V_117_reg_579 <= gradient_z_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    r_V_117_reg_579 <= ap_phi_reg_pp0_iter1_r_V_117_reg_579;
                end if;
            end if; 
        end if;
    end process;

    r_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_462)) then
                if ((icmp_ln139_fu_644_p2 = ap_const_lv1_0)) then 
                    r_fu_108 <= select_ln139_4_fu_733_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    r_fu_108 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln139_reg_1543 <= icmp_ln139_fu_644_p2;
                select_ln139_2_reg_1551_pp0_iter1_reg <= select_ln139_2_reg_1551;
                select_ln139_3_reg_1555_pp0_iter1_reg <= select_ln139_3_reg_1555;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln139_fu_644_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_val_x_V_1_addr_reg_1577 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_x_V_2_addr_reg_1595 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_x_V_3_addr_reg_1613 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_x_V_4_addr_reg_1631 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_x_V_5_addr_reg_1649 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_x_V_addr_reg_1559 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_y_V_1_addr_reg_1583 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_y_V_2_addr_reg_1601 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_y_V_3_addr_reg_1619 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_y_V_4_addr_reg_1637 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_y_V_5_addr_reg_1655 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_y_V_addr_reg_1565 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_z_V_1_addr_reg_1589 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_z_V_2_addr_reg_1607 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_z_V_3_addr_reg_1625 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_z_V_4_addr_reg_1643 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_z_V_5_addr_reg_1661 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                buf_val_z_V_addr_reg_1571 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
                select_ln139_1_reg_1547 <= select_ln139_1_fu_685_p3;
                select_ln139_2_reg_1551 <= select_ln139_2_fu_699_p3;
                select_ln139_3_reg_1555 <= select_ln139_3_fu_725_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_137_reg_1667 <= buf_val_x_V_4_q0;
                r_V_139_reg_1672 <= buf_val_y_V_4_q0;
                r_V_141_reg_1677 <= buf_val_z_V_4_q0;
                r_V_143_reg_1682 <= buf_val_x_V_5_q0;
                r_V_145_reg_1687 <= buf_val_y_V_5_q0;
                r_V_147_reg_1692 <= buf_val_z_V_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln139_3_reg_1555 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_25_reg_1697 <= ret_V_28_fu_1118_p2(50 downto 19);
                tmp_26_reg_1702 <= ret_V_29_fu_1144_p2(50 downto 19);
                tmp_27_reg_1707 <= ret_V_30_fu_1170_p2(50 downto 19);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    acc_x_V_2_fu_794_p4 <= r_V_103_fu_788_p2(48 downto 19);
    acc_y_V_2_fu_814_p4 <= r_V_107_fu_808_p2(48 downto 19);
    acc_z_V_2_fu_834_p4 <= r_V_111_fu_828_p2(48 downto 19);
    add_ln139_1_fu_650_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv19_1));
    add_ln139_fu_659_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_r_3) + unsigned(ap_const_lv9_1));
    add_ln141_fu_763_p2 <= std_logic_vector(unsigned(select_ln139_fu_671_p3) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, gradient_x_V_empty_n, ap_predicate_op179_read_state2, gradient_y_V_empty_n, ap_predicate_op180_read_state2, gradient_z_V_empty_n, ap_predicate_op181_read_state2, y_filtered_x_V_full_n, select_ln139_3_reg_1555_pp0_iter1_reg, y_filtered_y_V_full_n, y_filtered_z_V_full_n, ap_predicate_op310_write_state3, ap_predicate_op311_write_state3, ap_predicate_op312_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op181_read_state2 = ap_const_boolean_1) and (gradient_z_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op180_read_state2 = ap_const_boolean_1) and (gradient_y_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op179_read_state2 = ap_const_boolean_1) and (gradient_x_V_empty_n = ap_const_logic_0)))) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_x_V_full_n = ap_const_logic_0)) or ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_z_V_full_n = ap_const_logic_0)) or ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_y_V_full_n = ap_const_logic_0)) or ((y_filtered_x_V_full_n = ap_const_logic_0) and (ap_predicate_op310_write_state3 = ap_const_boolean_1)) or ((ap_predicate_op312_write_state3 = ap_const_boolean_1) and (y_filtered_z_V_full_n = ap_const_logic_0)) or ((ap_predicate_op311_write_state3 = ap_const_boolean_1) and (y_filtered_y_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, gradient_x_V_empty_n, ap_predicate_op179_read_state2, gradient_y_V_empty_n, ap_predicate_op180_read_state2, gradient_z_V_empty_n, ap_predicate_op181_read_state2, y_filtered_x_V_full_n, select_ln139_3_reg_1555_pp0_iter1_reg, y_filtered_y_V_full_n, y_filtered_z_V_full_n, ap_predicate_op310_write_state3, ap_predicate_op311_write_state3, ap_predicate_op312_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op181_read_state2 = ap_const_boolean_1) and (gradient_z_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op180_read_state2 = ap_const_boolean_1) and (gradient_y_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op179_read_state2 = ap_const_boolean_1) and (gradient_x_V_empty_n = ap_const_logic_0)))) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_x_V_full_n = ap_const_logic_0)) or ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_z_V_full_n = ap_const_logic_0)) or ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_y_V_full_n = ap_const_logic_0)) or ((y_filtered_x_V_full_n = ap_const_logic_0) and (ap_predicate_op310_write_state3 = ap_const_boolean_1)) or ((ap_predicate_op312_write_state3 = ap_const_boolean_1) and (y_filtered_z_V_full_n = ap_const_logic_0)) or ((ap_predicate_op311_write_state3 = ap_const_boolean_1) and (y_filtered_y_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_done_reg, gradient_x_V_empty_n, ap_predicate_op179_read_state2, gradient_y_V_empty_n, ap_predicate_op180_read_state2, gradient_z_V_empty_n, ap_predicate_op181_read_state2, y_filtered_x_V_full_n, select_ln139_3_reg_1555_pp0_iter1_reg, y_filtered_y_V_full_n, y_filtered_z_V_full_n, ap_predicate_op310_write_state3, ap_predicate_op311_write_state3, ap_predicate_op312_write_state3, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op181_read_state2 = ap_const_boolean_1) and (gradient_z_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op180_read_state2 = ap_const_boolean_1) and (gradient_y_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op179_read_state2 = ap_const_boolean_1) and (gradient_x_V_empty_n = ap_const_logic_0)))) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_x_V_full_n = ap_const_logic_0)) or ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_z_V_full_n = ap_const_logic_0)) or ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_y_V_full_n = ap_const_logic_0)) or ((y_filtered_x_V_full_n = ap_const_logic_0) and (ap_predicate_op310_write_state3 = ap_const_boolean_1)) or ((ap_predicate_op312_write_state3 = ap_const_boolean_1) and (y_filtered_z_V_full_n = ap_const_logic_0)) or ((ap_predicate_op311_write_state3 = ap_const_boolean_1) and (y_filtered_y_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(gradient_x_V_empty_n, ap_predicate_op179_read_state2, gradient_y_V_empty_n, ap_predicate_op180_read_state2, gradient_z_V_empty_n, ap_predicate_op181_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op181_read_state2 = ap_const_boolean_1) and (gradient_z_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op180_read_state2 = ap_const_boolean_1) and (gradient_y_V_empty_n = ap_const_logic_0)) or ((ap_predicate_op179_read_state2 = ap_const_boolean_1) and (gradient_x_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(y_filtered_x_V_full_n, select_ln139_3_reg_1555_pp0_iter1_reg, y_filtered_y_V_full_n, y_filtered_z_V_full_n, ap_predicate_op310_write_state3, ap_predicate_op311_write_state3, ap_predicate_op312_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= (((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_x_V_full_n = ap_const_logic_0)) or ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_z_V_full_n = ap_const_logic_0)) or ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (y_filtered_y_V_full_n = ap_const_logic_0)) or ((y_filtered_x_V_full_n = ap_const_logic_0) and (ap_predicate_op310_write_state3 = ap_const_boolean_1)) or ((ap_predicate_op312_write_state3 = ap_const_boolean_1) and (y_filtered_z_V_full_n = ap_const_logic_0)) or ((ap_predicate_op311_write_state3 = ap_const_boolean_1) and (y_filtered_y_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_239_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_239 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_462_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_462 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln139_fu_644_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln139_fu_644_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_115_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_115 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_116_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_116 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_117_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_117 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_118_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_118 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_119_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_119 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_120_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_120 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_121_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_121 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_122_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_122 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_123_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_123 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_124_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_124 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_125_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_125 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_126_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_126 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_127_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_127 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_128_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_128 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_129_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_129 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_130_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_130 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_131_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_131 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_132_assign_proc : process(icmp_ln139_fu_644_p2)
    begin
                ap_enable_operation_132 <= (icmp_ln139_fu_644_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_146_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_146 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_147_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_147 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_148_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_148 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_149_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_149 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_150_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_150 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_151_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_151 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_152_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_152 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_153_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_153 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_154_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_154 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_155_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_155 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_156_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_156 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_157_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_157 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_158_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_158 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_159_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_159 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_160_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_160 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_161_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_161 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_162_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_162 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_163_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_163 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_164_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_164 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_165_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_165 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_166_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_166 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_167_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_167 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_168_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_168 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_169_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_169 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_170_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_170 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_171_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_171 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_172_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_172 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_173_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_173 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_174_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_174 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_175_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_175 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_176_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_176 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_177_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_177 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;


    ap_enable_operation_178_assign_proc : process(icmp_ln139_reg_1543)
    begin
                ap_enable_operation_178 <= (icmp_ln139_reg_1543 = ap_const_lv1_0);
    end process;

        ap_enable_operation_186 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_187 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_188 <= (ap_const_boolean_1 = ap_const_boolean_1);
    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state1_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_start_int)
    begin
                ap_enable_state1_pp0_iter0_stage0 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state2_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state2_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_r_V_113_phi_fu_555_p4_assign_proc : process(gradient_x_V_dout, icmp_ln139_reg_1543, select_ln139_1_reg_1547, ap_phi_reg_pp0_iter1_r_V_113_reg_551)
    begin
        if (((select_ln139_1_reg_1547 = ap_const_lv1_1) and (icmp_ln139_reg_1543 = ap_const_lv1_0))) then 
            ap_phi_mux_r_V_113_phi_fu_555_p4 <= gradient_x_V_dout;
        else 
            ap_phi_mux_r_V_113_phi_fu_555_p4 <= ap_phi_reg_pp0_iter1_r_V_113_reg_551;
        end if; 
    end process;


    ap_phi_mux_r_V_115_phi_fu_569_p4_assign_proc : process(icmp_ln139_reg_1543, select_ln139_1_reg_1547, gradient_y_V_dout, ap_phi_reg_pp0_iter1_r_V_115_reg_565)
    begin
        if (((select_ln139_1_reg_1547 = ap_const_lv1_1) and (icmp_ln139_reg_1543 = ap_const_lv1_0))) then 
            ap_phi_mux_r_V_115_phi_fu_569_p4 <= gradient_y_V_dout;
        else 
            ap_phi_mux_r_V_115_phi_fu_569_p4 <= ap_phi_reg_pp0_iter1_r_V_115_reg_565;
        end if; 
    end process;


    ap_phi_mux_r_V_117_phi_fu_583_p4_assign_proc : process(icmp_ln139_reg_1543, select_ln139_1_reg_1547, gradient_z_V_dout, ap_phi_reg_pp0_iter1_r_V_117_reg_579)
    begin
        if (((select_ln139_1_reg_1547 = ap_const_lv1_1) and (icmp_ln139_reg_1543 = ap_const_lv1_0))) then 
            ap_phi_mux_r_V_117_phi_fu_583_p4 <= gradient_z_V_dout;
        else 
            ap_phi_mux_r_V_117_phi_fu_583_p4 <= ap_phi_reg_pp0_iter1_r_V_117_reg_579;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_r_V_113_reg_551 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_r_V_115_reg_565 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_r_V_117_reg_579 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op179_read_state2_assign_proc : process(icmp_ln139_reg_1543, select_ln139_1_reg_1547)
    begin
                ap_predicate_op179_read_state2 <= ((select_ln139_1_reg_1547 = ap_const_lv1_1) and (icmp_ln139_reg_1543 = ap_const_lv1_0));
    end process;


    ap_predicate_op180_read_state2_assign_proc : process(icmp_ln139_reg_1543, select_ln139_1_reg_1547)
    begin
                ap_predicate_op180_read_state2 <= ((select_ln139_1_reg_1547 = ap_const_lv1_1) and (icmp_ln139_reg_1543 = ap_const_lv1_0));
    end process;


    ap_predicate_op181_read_state2_assign_proc : process(icmp_ln139_reg_1543, select_ln139_1_reg_1547)
    begin
                ap_predicate_op181_read_state2 <= ((select_ln139_1_reg_1547 = ap_const_lv1_1) and (icmp_ln139_reg_1543 = ap_const_lv1_0));
    end process;


    ap_predicate_op310_write_state3_assign_proc : process(select_ln139_3_reg_1555_pp0_iter1_reg, select_ln139_2_reg_1551_pp0_iter1_reg)
    begin
                ap_predicate_op310_write_state3 <= ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_1) and (select_ln139_2_reg_1551_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op311_write_state3_assign_proc : process(select_ln139_3_reg_1555_pp0_iter1_reg, select_ln139_2_reg_1551_pp0_iter1_reg)
    begin
                ap_predicate_op311_write_state3 <= ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_1) and (select_ln139_2_reg_1551_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op312_write_state3_assign_proc : process(select_ln139_3_reg_1555_pp0_iter1_reg, select_ln139_2_reg_1551_pp0_iter1_reg)
    begin
                ap_predicate_op312_write_state3 <= ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_1) and (select_ln139_2_reg_1551_pp0_iter1_reg = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_c_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, c_fu_104, ap_loop_init, ap_start_int)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_c_load <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_c_load <= c_fu_104;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_112, ap_start_int)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv19_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_112;
        end if; 
    end process;


    ap_sig_allocacmp_r_3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, r_fu_108, ap_start_int)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_r_3 <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_r_3 <= r_fu_108;
        end if; 
    end process;

    brmerge_i_fu_638_p2 <= (cmp35_not_i_fu_632_p2 or cmp34_not_i_fu_626_p2);
    brmerge_i_mid1_fu_719_p2 <= (cmp35_not_i_mid1_fu_713_p2 or cmp34_not_i_mid1_fu_707_p2);
    buf_val_x_V_1_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_x_V_1_address1 <= buf_val_x_V_1_addr_reg_1577;

    buf_val_x_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_1_ce0 <= ap_const_logic_1;
        else 
            buf_val_x_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_1_ce1 <= ap_const_logic_1;
        else 
            buf_val_x_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_1_we1 <= ap_const_logic_1;
        else 
            buf_val_x_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_x_V_2_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_x_V_2_address1 <= buf_val_x_V_2_addr_reg_1595;

    buf_val_x_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_2_ce0 <= ap_const_logic_1;
        else 
            buf_val_x_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_2_ce1 <= ap_const_logic_1;
        else 
            buf_val_x_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_2_we1 <= ap_const_logic_1;
        else 
            buf_val_x_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_x_V_3_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_x_V_3_address1 <= buf_val_x_V_3_addr_reg_1613;

    buf_val_x_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_3_ce0 <= ap_const_logic_1;
        else 
            buf_val_x_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_3_ce1 <= ap_const_logic_1;
        else 
            buf_val_x_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_3_we1 <= ap_const_logic_1;
        else 
            buf_val_x_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_x_V_4_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_x_V_4_address1 <= buf_val_x_V_4_addr_reg_1631;

    buf_val_x_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_4_ce0 <= ap_const_logic_1;
        else 
            buf_val_x_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_4_ce1 <= ap_const_logic_1;
        else 
            buf_val_x_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_4_we1 <= ap_const_logic_1;
        else 
            buf_val_x_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_x_V_5_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_x_V_5_address1 <= buf_val_x_V_5_addr_reg_1649;

    buf_val_x_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_5_ce0 <= ap_const_logic_1;
        else 
            buf_val_x_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_5_ce1 <= ap_const_logic_1;
        else 
            buf_val_x_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_5_we1 <= ap_const_logic_1;
        else 
            buf_val_x_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_x_V_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_x_V_address1 <= buf_val_x_V_addr_reg_1559;

    buf_val_x_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_ce0 <= ap_const_logic_1;
        else 
            buf_val_x_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_ce1 <= ap_const_logic_1;
        else 
            buf_val_x_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_x_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_x_V_we1 <= ap_const_logic_1;
        else 
            buf_val_x_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_y_V_1_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_y_V_1_address1 <= buf_val_y_V_1_addr_reg_1583;

    buf_val_y_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_1_ce0 <= ap_const_logic_1;
        else 
            buf_val_y_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_1_ce1 <= ap_const_logic_1;
        else 
            buf_val_y_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_1_we1 <= ap_const_logic_1;
        else 
            buf_val_y_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_y_V_2_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_y_V_2_address1 <= buf_val_y_V_2_addr_reg_1601;

    buf_val_y_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_2_ce0 <= ap_const_logic_1;
        else 
            buf_val_y_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_2_ce1 <= ap_const_logic_1;
        else 
            buf_val_y_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_2_we1 <= ap_const_logic_1;
        else 
            buf_val_y_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_y_V_3_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_y_V_3_address1 <= buf_val_y_V_3_addr_reg_1619;

    buf_val_y_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_3_ce0 <= ap_const_logic_1;
        else 
            buf_val_y_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_3_ce1 <= ap_const_logic_1;
        else 
            buf_val_y_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_3_we1 <= ap_const_logic_1;
        else 
            buf_val_y_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_y_V_4_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_y_V_4_address1 <= buf_val_y_V_4_addr_reg_1637;

    buf_val_y_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_4_ce0 <= ap_const_logic_1;
        else 
            buf_val_y_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_4_ce1 <= ap_const_logic_1;
        else 
            buf_val_y_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_4_we1 <= ap_const_logic_1;
        else 
            buf_val_y_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_y_V_5_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_y_V_5_address1 <= buf_val_y_V_5_addr_reg_1655;

    buf_val_y_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_5_ce0 <= ap_const_logic_1;
        else 
            buf_val_y_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_5_ce1 <= ap_const_logic_1;
        else 
            buf_val_y_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_5_we1 <= ap_const_logic_1;
        else 
            buf_val_y_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_y_V_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_y_V_address1 <= buf_val_y_V_addr_reg_1565;

    buf_val_y_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_ce0 <= ap_const_logic_1;
        else 
            buf_val_y_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_ce1 <= ap_const_logic_1;
        else 
            buf_val_y_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_y_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_y_V_we1 <= ap_const_logic_1;
        else 
            buf_val_y_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_z_V_1_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_z_V_1_address1 <= buf_val_z_V_1_addr_reg_1589;

    buf_val_z_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_1_ce0 <= ap_const_logic_1;
        else 
            buf_val_z_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_1_ce1 <= ap_const_logic_1;
        else 
            buf_val_z_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_1_we1 <= ap_const_logic_1;
        else 
            buf_val_z_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_z_V_2_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_z_V_2_address1 <= buf_val_z_V_2_addr_reg_1607;

    buf_val_z_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_2_ce0 <= ap_const_logic_1;
        else 
            buf_val_z_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_2_ce1 <= ap_const_logic_1;
        else 
            buf_val_z_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_2_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_2_we1 <= ap_const_logic_1;
        else 
            buf_val_z_V_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_z_V_3_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_z_V_3_address1 <= buf_val_z_V_3_addr_reg_1625;

    buf_val_z_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_3_ce0 <= ap_const_logic_1;
        else 
            buf_val_z_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_3_ce1 <= ap_const_logic_1;
        else 
            buf_val_z_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_3_we1 <= ap_const_logic_1;
        else 
            buf_val_z_V_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_z_V_4_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_z_V_4_address1 <= buf_val_z_V_4_addr_reg_1643;

    buf_val_z_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_4_ce0 <= ap_const_logic_1;
        else 
            buf_val_z_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_4_ce1 <= ap_const_logic_1;
        else 
            buf_val_z_V_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_4_we1 <= ap_const_logic_1;
        else 
            buf_val_z_V_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_z_V_5_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_z_V_5_address1 <= buf_val_z_V_5_addr_reg_1661;

    buf_val_z_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_5_ce0 <= ap_const_logic_1;
        else 
            buf_val_z_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_5_ce1 <= ap_const_logic_1;
        else 
            buf_val_z_V_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_5_we1 <= ap_const_logic_1;
        else 
            buf_val_z_V_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_val_z_V_address0 <= zext_ln803_fu_741_p1(10 - 1 downto 0);
    buf_val_z_V_address1 <= buf_val_z_V_addr_reg_1571;

    buf_val_z_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_ce0 <= ap_const_logic_1;
        else 
            buf_val_z_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_ce1 <= ap_const_logic_1;
        else 
            buf_val_z_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_val_z_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln139_reg_1543, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln139_reg_1543 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            buf_val_z_V_we1 <= ap_const_logic_1;
        else 
            buf_val_z_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp10_i_fu_614_p2 <= "1" when (unsigned(ap_sig_allocacmp_r_3) < unsigned(ap_const_lv9_1B4)) else "0";
    cmp10_i_mid1_fu_679_p2 <= "1" when (unsigned(add_ln139_fu_659_p2) < unsigned(ap_const_lv9_1B4)) else "0";
    cmp34_not_i_fu_626_p2 <= "1" when (unsigned(ap_sig_allocacmp_r_3) < unsigned(ap_const_lv9_6)) else "0";
    cmp34_not_i_mid1_fu_707_p2 <= "1" when (unsigned(add_ln139_fu_659_p2) < unsigned(ap_const_lv9_6)) else "0";
    cmp35_not_i_fu_632_p2 <= (cmp10_i_fu_614_p2 xor ap_const_lv1_1);
    cmp35_not_i_mid1_fu_713_p2 <= (cmp10_i_mid1_fu_679_p2 xor ap_const_lv1_1);
    cmp66_i_fu_620_p2 <= "1" when (unsigned(ap_sig_allocacmp_r_3) > unsigned(ap_const_lv9_2)) else "0";
    cmp66_i_mid1_fu_693_p2 <= "1" when (unsigned(add_ln139_fu_659_p2) > unsigned(ap_const_lv9_2)) else "0";

    gradient_x_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, gradient_x_V_empty_n, ap_predicate_op179_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op179_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gradient_x_V_blk_n <= gradient_x_V_empty_n;
        else 
            gradient_x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_x_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op179_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op179_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gradient_x_V_read <= ap_const_logic_1;
        else 
            gradient_x_V_read <= ap_const_logic_0;
        end if; 
    end process;


    gradient_y_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, gradient_y_V_empty_n, ap_predicate_op180_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op180_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gradient_y_V_blk_n <= gradient_y_V_empty_n;
        else 
            gradient_y_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_y_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op180_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op180_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gradient_y_V_read <= ap_const_logic_1;
        else 
            gradient_y_V_read <= ap_const_logic_0;
        end if; 
    end process;


    gradient_z_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, gradient_z_V_empty_n, ap_predicate_op181_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op181_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gradient_z_V_blk_n <= gradient_z_V_empty_n;
        else 
            gradient_z_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    gradient_z_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op181_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op181_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gradient_z_V_read <= ap_const_logic_1;
        else 
            gradient_z_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln139_fu_644_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv19_6DC00) else "0";
    icmp_ln141_fu_665_p2 <= "1" when (ap_sig_allocacmp_c_load = ap_const_lv11_400) else "0";
    lhs_22_fu_854_p3 <= (acc_x_V_2_fu_794_p4 & ap_const_lv19_0);
        lhs_23_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_882_p3),51));

    lhs_24_fu_1024_p3 <= (tmp_s_fu_1014_p4 & ap_const_lv19_0);
    lhs_25_fu_1186_p3 <= (tmp_25_reg_1697 & ap_const_lv19_0);
    lhs_26_fu_1236_p3 <= (tmp_28_fu_1226_p4 & ap_const_lv19_0);
    lhs_27_fu_1347_p3 <= (tmp_31_fu_1337_p4 & ap_const_lv19_0);
    lhs_V_10_fu_1310_p3 <= (tmp_30_fu_1300_p4 & ap_const_lv19_0);
    lhs_V_11_fu_1273_p3 <= (tmp_29_fu_1263_p4 & ap_const_lv19_0);
    lhs_V_12_fu_1421_p3 <= (tmp_33_fu_1411_p4 & ap_const_lv19_0);
    lhs_V_13_fu_1384_p3 <= (tmp_32_fu_1374_p4 & ap_const_lv19_0);
    lhs_V_1_fu_904_p3 <= (acc_y_V_2_fu_814_p4 & ap_const_lv19_0);
    lhs_V_3_fu_954_p3 <= (acc_z_V_2_fu_834_p4 & ap_const_lv19_0);
        lhs_V_4_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_51_fu_932_p3),51));

        lhs_V_5_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_53_fu_982_p3),51));

    lhs_V_6_fu_1062_p3 <= (tmp_23_fu_1052_p4 & ap_const_lv19_0);
    lhs_V_7_fu_1100_p3 <= (tmp_24_fu_1090_p4 & ap_const_lv19_0);
    lhs_V_8_fu_1193_p3 <= (tmp_26_reg_1702 & ap_const_lv19_0);
    lhs_V_9_fu_1200_p3 <= (tmp_27_reg_1707 & ap_const_lv19_0);
    r_V_103_fu_788_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_107_fu_808_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_111_fu_828_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_120_fu_848_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_122_fu_898_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_124_fu_948_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_126_fu_998_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_128_fu_1036_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_130_fu_1074_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_132_fu_1112_p1 <= ap_const_lv51_25288(19 - 1 downto 0);
    r_V_134_fu_1138_p1 <= ap_const_lv51_25288(19 - 1 downto 0);
    r_V_136_fu_1164_p1 <= ap_const_lv51_25288(19 - 1 downto 0);
    r_V_138_fu_1210_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_140_fu_1247_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_142_fu_1284_p1 <= ap_const_lv50_17EC5(18 - 1 downto 0);
    r_V_144_fu_1321_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_146_fu_1358_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_148_fu_1395_p1 <= ap_const_lv50_11062(18 - 1 downto 0);
    r_V_149_fu_1433_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_150_fu_1464_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);
    r_V_151_fu_1495_p1 <= ap_const_lv49_9A9F(17 - 1 downto 0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_23_fu_916_p2 <= std_logic_vector(signed(sext_ln1347_1_fu_912_p1) + signed(r_V_122_fu_898_p2));
    ret_V_24_fu_966_p2 <= std_logic_vector(signed(sext_ln1347_2_fu_962_p1) + signed(r_V_124_fu_948_p2));
    ret_V_25_fu_1008_p2 <= std_logic_vector(signed(lhs_23_fu_890_p1) + signed(sext_ln813_fu_1004_p1));
    ret_V_26_fu_1046_p2 <= std_logic_vector(signed(lhs_V_4_fu_940_p1) + signed(sext_ln813_1_fu_1042_p1));
    ret_V_27_fu_1084_p2 <= std_logic_vector(signed(lhs_V_5_fu_990_p1) + signed(sext_ln813_2_fu_1080_p1));
    ret_V_28_fu_1118_p2 <= std_logic_vector(unsigned(r_V_132_fu_1112_p2) + unsigned(lhs_24_fu_1024_p3));
    ret_V_29_fu_1144_p2 <= std_logic_vector(unsigned(r_V_134_fu_1138_p2) + unsigned(lhs_V_6_fu_1062_p3));
    ret_V_30_fu_1170_p2 <= std_logic_vector(unsigned(r_V_136_fu_1164_p2) + unsigned(lhs_V_7_fu_1100_p3));
    ret_V_31_fu_1220_p2 <= std_logic_vector(unsigned(lhs_25_fu_1186_p3) + unsigned(sext_ln813_3_fu_1216_p1));
    ret_V_32_fu_1257_p2 <= std_logic_vector(unsigned(lhs_V_8_fu_1193_p3) + unsigned(sext_ln813_4_fu_1253_p1));
    ret_V_33_fu_1294_p2 <= std_logic_vector(unsigned(lhs_V_9_fu_1200_p3) + unsigned(sext_ln813_5_fu_1290_p1));
    ret_V_34_fu_1331_p2 <= std_logic_vector(unsigned(lhs_26_fu_1236_p3) + unsigned(sext_ln813_6_fu_1327_p1));
    ret_V_35_fu_1368_p2 <= std_logic_vector(unsigned(lhs_V_11_fu_1273_p3) + unsigned(sext_ln813_7_fu_1364_p1));
    ret_V_36_fu_1405_p2 <= std_logic_vector(unsigned(lhs_V_10_fu_1310_p3) + unsigned(sext_ln813_8_fu_1401_p1));
    ret_V_37_fu_1443_p2 <= std_logic_vector(unsigned(lhs_27_fu_1347_p3) + unsigned(sext_ln813_9_fu_1439_p1));
    ret_V_38_fu_1474_p2 <= std_logic_vector(unsigned(lhs_V_13_fu_1384_p3) + unsigned(sext_ln813_10_fu_1470_p1));
    ret_V_39_fu_1505_p2 <= std_logic_vector(unsigned(lhs_V_12_fu_1421_p3) + unsigned(sext_ln813_11_fu_1501_p1));
    ret_V_fu_866_p2 <= std_logic_vector(signed(sext_ln1347_fu_862_p1) + signed(r_V_120_fu_848_p2));
    select_ln139_1_fu_685_p3 <= 
        cmp10_i_mid1_fu_679_p2 when (icmp_ln141_fu_665_p2(0) = '1') else 
        cmp10_i_fu_614_p2;
    select_ln139_2_fu_699_p3 <= 
        cmp66_i_mid1_fu_693_p2 when (icmp_ln141_fu_665_p2(0) = '1') else 
        cmp66_i_fu_620_p2;
    select_ln139_3_fu_725_p3 <= 
        brmerge_i_mid1_fu_719_p2 when (icmp_ln141_fu_665_p2(0) = '1') else 
        brmerge_i_fu_638_p2;
    select_ln139_4_fu_733_p3 <= 
        add_ln139_fu_659_p2 when (icmp_ln141_fu_665_p2(0) = '1') else 
        ap_sig_allocacmp_r_3;
    select_ln139_fu_671_p3 <= 
        ap_const_lv11_0 when (icmp_ln141_fu_665_p2(0) = '1') else 
        ap_sig_allocacmp_c_load;
        sext_ln1347_1_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_1_fu_904_p3),50));

        sext_ln1347_2_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_3_fu_954_p3),50));

        sext_ln1347_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_22_fu_854_p3),50));

        sext_ln813_10_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_150_fu_1464_p2),51));

        sext_ln813_11_fu_1501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_151_fu_1495_p2),51));

        sext_ln813_1_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_128_fu_1036_p2),51));

        sext_ln813_2_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_130_fu_1074_p2),51));

        sext_ln813_3_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_138_fu_1210_p2),51));

        sext_ln813_4_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_140_fu_1247_p2),51));

        sext_ln813_5_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_142_fu_1284_p2),51));

        sext_ln813_6_fu_1327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_144_fu_1321_p2),51));

        sext_ln813_7_fu_1364_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_146_fu_1358_p2),51));

        sext_ln813_8_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_148_fu_1395_p2),51));

        sext_ln813_9_fu_1439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_149_fu_1433_p2),51));

        sext_ln813_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_126_fu_998_p2),51));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_23_fu_1052_p4 <= ret_V_26_fu_1046_p2(50 downto 19);
    tmp_24_fu_1090_p4 <= ret_V_27_fu_1084_p2(50 downto 19);
    tmp_28_fu_1226_p4 <= ret_V_31_fu_1220_p2(50 downto 19);
    tmp_29_fu_1263_p4 <= ret_V_32_fu_1257_p2(50 downto 19);
    tmp_30_fu_1300_p4 <= ret_V_33_fu_1294_p2(50 downto 19);
    tmp_31_fu_1337_p4 <= ret_V_34_fu_1331_p2(50 downto 19);
    tmp_32_fu_1374_p4 <= ret_V_35_fu_1368_p2(50 downto 19);
    tmp_33_fu_1411_p4 <= ret_V_36_fu_1405_p2(50 downto 19);
    tmp_49_fu_882_p3 <= (tmp_fu_872_p4 & ap_const_lv19_0);
    tmp_50_fu_922_p4 <= ret_V_23_fu_916_p2(49 downto 19);
    tmp_51_fu_932_p3 <= (tmp_50_fu_922_p4 & ap_const_lv19_0);
    tmp_52_fu_972_p4 <= ret_V_24_fu_966_p2(49 downto 19);
    tmp_53_fu_982_p3 <= (tmp_52_fu_972_p4 & ap_const_lv19_0);
    tmp_fu_872_p4 <= ret_V_fu_866_p2(49 downto 19);
    tmp_s_fu_1014_p4 <= ret_V_25_fu_1008_p2(50 downto 19);

    y_filtered_x_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, y_filtered_x_V_full_n, select_ln139_3_reg_1555_pp0_iter1_reg, ap_predicate_op310_write_state3, ap_block_pp0_stage0)
    begin
        if ((((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op310_write_state3 = ap_const_boolean_1)))) then 
            y_filtered_x_V_blk_n <= y_filtered_x_V_full_n;
        else 
            y_filtered_x_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_x_V_din_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln139_3_reg_1555_pp0_iter1_reg, ap_predicate_op310_write_state3, ap_block_pp0_stage0_01001, ret_V_37_fu_1443_p2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op310_write_state3 = ap_const_boolean_1)) then 
                y_filtered_x_V_din <= ap_const_lv32_0;
            elsif ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0)) then 
                y_filtered_x_V_din <= ret_V_37_fu_1443_p2(50 downto 19);
            else 
                y_filtered_x_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            y_filtered_x_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_filtered_x_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln139_3_reg_1555_pp0_iter1_reg, ap_predicate_op310_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op310_write_state3 = ap_const_boolean_1)))) then 
            y_filtered_x_V_write <= ap_const_logic_1;
        else 
            y_filtered_x_V_write <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_y_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln139_3_reg_1555_pp0_iter1_reg, y_filtered_y_V_full_n, ap_predicate_op311_write_state3, ap_block_pp0_stage0)
    begin
        if ((((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op311_write_state3 = ap_const_boolean_1)))) then 
            y_filtered_y_V_blk_n <= y_filtered_y_V_full_n;
        else 
            y_filtered_y_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_y_V_din_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln139_3_reg_1555_pp0_iter1_reg, ap_predicate_op311_write_state3, ap_block_pp0_stage0_01001, ret_V_38_fu_1474_p2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op311_write_state3 = ap_const_boolean_1)) then 
                y_filtered_y_V_din <= ap_const_lv32_0;
            elsif ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0)) then 
                y_filtered_y_V_din <= ret_V_38_fu_1474_p2(50 downto 19);
            else 
                y_filtered_y_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            y_filtered_y_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_filtered_y_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln139_3_reg_1555_pp0_iter1_reg, ap_predicate_op311_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op311_write_state3 = ap_const_boolean_1)))) then 
            y_filtered_y_V_write <= ap_const_logic_1;
        else 
            y_filtered_y_V_write <= ap_const_logic_0;
        end if; 
    end process;


    y_filtered_z_V_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln139_3_reg_1555_pp0_iter1_reg, y_filtered_z_V_full_n, ap_predicate_op312_write_state3, ap_block_pp0_stage0)
    begin
        if ((((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op312_write_state3 = ap_const_boolean_1)))) then 
            y_filtered_z_V_blk_n <= y_filtered_z_V_full_n;
        else 
            y_filtered_z_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    y_filtered_z_V_din_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln139_3_reg_1555_pp0_iter1_reg, ap_predicate_op312_write_state3, ap_block_pp0_stage0_01001, ret_V_39_fu_1505_p2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then
            if ((ap_predicate_op312_write_state3 = ap_const_boolean_1)) then 
                y_filtered_z_V_din <= ap_const_lv32_0;
            elsif ((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0)) then 
                y_filtered_z_V_din <= ret_V_39_fu_1505_p2(50 downto 19);
            else 
                y_filtered_z_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            y_filtered_z_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    y_filtered_z_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, select_ln139_3_reg_1555_pp0_iter1_reg, ap_predicate_op312_write_state3, ap_block_pp0_stage0_11001)
    begin
        if ((((select_ln139_3_reg_1555_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op312_write_state3 = ap_const_boolean_1)))) then 
            y_filtered_z_V_write <= ap_const_logic_1;
        else 
            y_filtered_z_V_write <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln803_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln139_fu_671_p3),64));
end behav;
