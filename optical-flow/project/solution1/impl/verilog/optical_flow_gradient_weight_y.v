// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module optical_flow_gradient_weight_y (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        gradient_x_V_dout,
        gradient_x_V_num_data_valid,
        gradient_x_V_fifo_cap,
        gradient_x_V_empty_n,
        gradient_x_V_read,
        gradient_y_V_dout,
        gradient_y_V_num_data_valid,
        gradient_y_V_fifo_cap,
        gradient_y_V_empty_n,
        gradient_y_V_read,
        gradient_z_V_dout,
        gradient_z_V_num_data_valid,
        gradient_z_V_fifo_cap,
        gradient_z_V_empty_n,
        gradient_z_V_read,
        y_filtered_x_V_din,
        y_filtered_x_V_num_data_valid,
        y_filtered_x_V_fifo_cap,
        y_filtered_x_V_full_n,
        y_filtered_x_V_write,
        y_filtered_y_V_din,
        y_filtered_y_V_num_data_valid,
        y_filtered_y_V_fifo_cap,
        y_filtered_y_V_full_n,
        y_filtered_y_V_write,
        y_filtered_z_V_din,
        y_filtered_z_V_num_data_valid,
        y_filtered_z_V_fifo_cap,
        y_filtered_z_V_full_n,
        y_filtered_z_V_write,
        start_out,
        start_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] gradient_x_V_dout;
input  [10:0] gradient_x_V_num_data_valid;
input  [10:0] gradient_x_V_fifo_cap;
input   gradient_x_V_empty_n;
output   gradient_x_V_read;
input  [31:0] gradient_y_V_dout;
input  [10:0] gradient_y_V_num_data_valid;
input  [10:0] gradient_y_V_fifo_cap;
input   gradient_y_V_empty_n;
output   gradient_y_V_read;
input  [31:0] gradient_z_V_dout;
input  [12:0] gradient_z_V_num_data_valid;
input  [12:0] gradient_z_V_fifo_cap;
input   gradient_z_V_empty_n;
output   gradient_z_V_read;
output  [31:0] y_filtered_x_V_din;
input  [10:0] y_filtered_x_V_num_data_valid;
input  [10:0] y_filtered_x_V_fifo_cap;
input   y_filtered_x_V_full_n;
output   y_filtered_x_V_write;
output  [31:0] y_filtered_y_V_din;
input  [10:0] y_filtered_y_V_num_data_valid;
input  [10:0] y_filtered_y_V_fifo_cap;
input   y_filtered_y_V_full_n;
output   y_filtered_y_V_write;
output  [31:0] y_filtered_z_V_din;
input  [10:0] y_filtered_z_V_num_data_valid;
input  [10:0] y_filtered_z_V_fifo_cap;
input   y_filtered_z_V_full_n;
output   y_filtered_z_V_write;
output   start_out;
output   start_write;

reg ap_idle;
reg gradient_x_V_read;
reg gradient_y_V_read;
reg gradient_z_V_read;
reg[31:0] y_filtered_x_V_din;
reg y_filtered_x_V_write;
reg[31:0] y_filtered_y_V_din;
reg y_filtered_y_V_write;
reg[31:0] y_filtered_z_V_din;
reg y_filtered_z_V_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    internal_ap_ready;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln139_reg_1543;
reg   [0:0] select_ln139_1_reg_1547;
reg    ap_predicate_op179_read_state2;
reg    ap_predicate_op180_read_state2;
reg    ap_predicate_op181_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] select_ln139_3_reg_1555;
reg   [0:0] select_ln139_3_reg_1555_pp0_iter1_reg;
reg   [0:0] select_ln139_2_reg_1551;
reg   [0:0] select_ln139_2_reg_1551_pp0_iter1_reg;
reg    ap_predicate_op310_write_state3;
reg    ap_predicate_op311_write_state3;
reg    ap_predicate_op312_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln139_fu_644_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gradient_x_V_blk_n;
wire    ap_block_pp0_stage0;
reg    gradient_y_V_blk_n;
reg    gradient_z_V_blk_n;
reg    y_filtered_x_V_blk_n;
reg    y_filtered_y_V_blk_n;
reg    y_filtered_z_V_blk_n;
reg  signed [31:0] r_V_113_reg_551;
reg  signed [31:0] r_V_115_reg_565;
reg  signed [31:0] r_V_117_reg_579;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] select_ln139_1_fu_685_p3;
wire   [0:0] select_ln139_2_fu_699_p3;
wire   [0:0] select_ln139_3_fu_725_p3;
reg   [9:0] buf_val_x_V_addr_reg_1559;
reg   [9:0] buf_val_y_V_addr_reg_1565;
reg   [9:0] buf_val_z_V_addr_reg_1571;
reg   [9:0] buf_val_x_V_1_addr_reg_1577;
reg   [9:0] buf_val_y_V_1_addr_reg_1583;
reg   [9:0] buf_val_z_V_1_addr_reg_1589;
reg   [9:0] buf_val_x_V_2_addr_reg_1595;
reg   [9:0] buf_val_y_V_2_addr_reg_1601;
reg   [9:0] buf_val_z_V_2_addr_reg_1607;
reg   [9:0] buf_val_x_V_3_addr_reg_1613;
reg   [9:0] buf_val_y_V_3_addr_reg_1619;
reg   [9:0] buf_val_z_V_3_addr_reg_1625;
reg   [9:0] buf_val_x_V_4_addr_reg_1631;
reg   [9:0] buf_val_y_V_4_addr_reg_1637;
reg   [9:0] buf_val_z_V_4_addr_reg_1643;
reg   [9:0] buf_val_x_V_5_addr_reg_1649;
reg   [9:0] buf_val_y_V_5_addr_reg_1655;
reg   [9:0] buf_val_z_V_5_addr_reg_1661;
wire   [31:0] buf_val_x_V_4_q0;
reg  signed [31:0] r_V_137_reg_1667;
wire   [31:0] buf_val_y_V_4_q0;
reg  signed [31:0] r_V_139_reg_1672;
wire   [31:0] buf_val_z_V_4_q0;
reg  signed [31:0] r_V_141_reg_1677;
wire   [31:0] buf_val_x_V_5_q0;
reg  signed [31:0] r_V_143_reg_1682;
wire   [31:0] buf_val_y_V_5_q0;
reg  signed [31:0] r_V_145_reg_1687;
wire   [31:0] buf_val_z_V_5_q0;
reg  signed [31:0] r_V_147_reg_1692;
reg   [31:0] tmp_25_reg_1697;
reg   [31:0] tmp_26_reg_1702;
reg   [31:0] tmp_27_reg_1707;
wire   [9:0] buf_val_x_V_address0;
reg    buf_val_x_V_ce0;
wire  signed [31:0] buf_val_x_V_q0;
wire   [9:0] buf_val_x_V_address1;
reg    buf_val_x_V_ce1;
reg    buf_val_x_V_we1;
wire   [9:0] buf_val_x_V_1_address0;
reg    buf_val_x_V_1_ce0;
wire  signed [31:0] buf_val_x_V_1_q0;
wire   [9:0] buf_val_x_V_1_address1;
reg    buf_val_x_V_1_ce1;
reg    buf_val_x_V_1_we1;
wire   [9:0] buf_val_x_V_2_address0;
reg    buf_val_x_V_2_ce0;
wire  signed [31:0] buf_val_x_V_2_q0;
wire   [9:0] buf_val_x_V_2_address1;
reg    buf_val_x_V_2_ce1;
reg    buf_val_x_V_2_we1;
wire   [9:0] buf_val_x_V_3_address0;
reg    buf_val_x_V_3_ce0;
wire  signed [31:0] buf_val_x_V_3_q0;
wire   [9:0] buf_val_x_V_3_address1;
reg    buf_val_x_V_3_ce1;
reg    buf_val_x_V_3_we1;
wire   [9:0] buf_val_x_V_4_address0;
reg    buf_val_x_V_4_ce0;
wire   [9:0] buf_val_x_V_4_address1;
reg    buf_val_x_V_4_ce1;
reg    buf_val_x_V_4_we1;
wire   [9:0] buf_val_x_V_5_address0;
reg    buf_val_x_V_5_ce0;
wire   [9:0] buf_val_x_V_5_address1;
reg    buf_val_x_V_5_ce1;
reg    buf_val_x_V_5_we1;
wire   [9:0] buf_val_y_V_address0;
reg    buf_val_y_V_ce0;
wire  signed [31:0] buf_val_y_V_q0;
wire   [9:0] buf_val_y_V_address1;
reg    buf_val_y_V_ce1;
reg    buf_val_y_V_we1;
wire   [9:0] buf_val_y_V_1_address0;
reg    buf_val_y_V_1_ce0;
wire  signed [31:0] buf_val_y_V_1_q0;
wire   [9:0] buf_val_y_V_1_address1;
reg    buf_val_y_V_1_ce1;
reg    buf_val_y_V_1_we1;
wire   [9:0] buf_val_y_V_2_address0;
reg    buf_val_y_V_2_ce0;
wire  signed [31:0] buf_val_y_V_2_q0;
wire   [9:0] buf_val_y_V_2_address1;
reg    buf_val_y_V_2_ce1;
reg    buf_val_y_V_2_we1;
wire   [9:0] buf_val_y_V_3_address0;
reg    buf_val_y_V_3_ce0;
wire  signed [31:0] buf_val_y_V_3_q0;
wire   [9:0] buf_val_y_V_3_address1;
reg    buf_val_y_V_3_ce1;
reg    buf_val_y_V_3_we1;
wire   [9:0] buf_val_y_V_4_address0;
reg    buf_val_y_V_4_ce0;
wire   [9:0] buf_val_y_V_4_address1;
reg    buf_val_y_V_4_ce1;
reg    buf_val_y_V_4_we1;
wire   [9:0] buf_val_y_V_5_address0;
reg    buf_val_y_V_5_ce0;
wire   [9:0] buf_val_y_V_5_address1;
reg    buf_val_y_V_5_ce1;
reg    buf_val_y_V_5_we1;
wire   [9:0] buf_val_z_V_address0;
reg    buf_val_z_V_ce0;
wire  signed [31:0] buf_val_z_V_q0;
wire   [9:0] buf_val_z_V_address1;
reg    buf_val_z_V_ce1;
reg    buf_val_z_V_we1;
wire   [9:0] buf_val_z_V_1_address0;
reg    buf_val_z_V_1_ce0;
wire  signed [31:0] buf_val_z_V_1_q0;
wire   [9:0] buf_val_z_V_1_address1;
reg    buf_val_z_V_1_ce1;
reg    buf_val_z_V_1_we1;
wire   [9:0] buf_val_z_V_2_address0;
reg    buf_val_z_V_2_ce0;
wire  signed [31:0] buf_val_z_V_2_q0;
wire   [9:0] buf_val_z_V_2_address1;
reg    buf_val_z_V_2_ce1;
reg    buf_val_z_V_2_we1;
wire   [9:0] buf_val_z_V_3_address0;
reg    buf_val_z_V_3_ce0;
wire  signed [31:0] buf_val_z_V_3_q0;
wire   [9:0] buf_val_z_V_3_address1;
reg    buf_val_z_V_3_ce1;
reg    buf_val_z_V_3_we1;
wire   [9:0] buf_val_z_V_4_address0;
reg    buf_val_z_V_4_ce0;
wire   [9:0] buf_val_z_V_4_address1;
reg    buf_val_z_V_4_ce1;
reg    buf_val_z_V_4_we1;
wire   [9:0] buf_val_z_V_5_address0;
reg    buf_val_z_V_5_ce0;
wire   [9:0] buf_val_z_V_5_address1;
reg    buf_val_z_V_5_ce1;
reg    buf_val_z_V_5_we1;
reg   [31:0] ap_phi_mux_r_V_113_phi_fu_555_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_r_V_113_reg_551;
wire  signed [31:0] ap_phi_reg_pp0_iter0_r_V_113_reg_551;
reg   [31:0] ap_phi_mux_r_V_115_phi_fu_569_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_r_V_115_reg_565;
wire  signed [31:0] ap_phi_reg_pp0_iter0_r_V_115_reg_565;
reg   [31:0] ap_phi_mux_r_V_117_phi_fu_583_p4;
reg  signed [31:0] ap_phi_reg_pp0_iter1_r_V_117_reg_579;
wire  signed [31:0] ap_phi_reg_pp0_iter0_r_V_117_reg_579;
wire   [63:0] zext_ln803_fu_741_p1;
reg   [10:0] c_fu_104;
wire   [10:0] add_ln141_fu_763_p2;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_c_load;
reg   [8:0] r_fu_108;
wire   [8:0] select_ln139_4_fu_733_p3;
reg   [8:0] ap_sig_allocacmp_r_3;
reg   [18:0] indvar_flatten_fu_112;
wire   [18:0] add_ln139_1_fu_650_p2;
reg   [18:0] ap_sig_allocacmp_indvar_flatten_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] cmp10_i_fu_614_p2;
wire   [0:0] cmp34_not_i_fu_626_p2;
wire   [0:0] cmp35_not_i_fu_632_p2;
wire   [0:0] icmp_ln141_fu_665_p2;
wire   [8:0] add_ln139_fu_659_p2;
wire   [0:0] cmp10_i_mid1_fu_679_p2;
wire   [0:0] cmp66_i_mid1_fu_693_p2;
wire   [0:0] cmp66_i_fu_620_p2;
wire   [0:0] cmp34_not_i_mid1_fu_707_p2;
wire   [0:0] cmp35_not_i_mid1_fu_713_p2;
wire   [0:0] brmerge_i_mid1_fu_719_p2;
wire   [0:0] brmerge_i_fu_638_p2;
wire   [10:0] select_ln139_fu_671_p3;
wire   [16:0] r_V_103_fu_788_p1;
wire   [48:0] r_V_103_fu_788_p2;
wire   [16:0] r_V_107_fu_808_p1;
wire   [48:0] r_V_107_fu_808_p2;
wire   [16:0] r_V_111_fu_828_p1;
wire   [48:0] r_V_111_fu_828_p2;
wire   [17:0] r_V_120_fu_848_p1;
wire   [29:0] acc_x_V_2_fu_794_p4;
wire   [48:0] lhs_22_fu_854_p3;
wire  signed [49:0] sext_ln1347_fu_862_p1;
wire   [49:0] r_V_120_fu_848_p2;
wire   [49:0] ret_V_fu_866_p2;
wire   [30:0] tmp_fu_872_p4;
wire   [49:0] tmp_49_fu_882_p3;
wire   [17:0] r_V_122_fu_898_p1;
wire   [29:0] acc_y_V_2_fu_814_p4;
wire   [48:0] lhs_V_1_fu_904_p3;
wire  signed [49:0] sext_ln1347_1_fu_912_p1;
wire   [49:0] r_V_122_fu_898_p2;
wire   [49:0] ret_V_23_fu_916_p2;
wire   [30:0] tmp_50_fu_922_p4;
wire   [49:0] tmp_51_fu_932_p3;
wire   [17:0] r_V_124_fu_948_p1;
wire   [29:0] acc_z_V_2_fu_834_p4;
wire   [48:0] lhs_V_3_fu_954_p3;
wire  signed [49:0] sext_ln1347_2_fu_962_p1;
wire   [49:0] r_V_124_fu_948_p2;
wire   [49:0] ret_V_24_fu_966_p2;
wire   [30:0] tmp_52_fu_972_p4;
wire   [49:0] tmp_53_fu_982_p3;
wire   [17:0] r_V_126_fu_998_p1;
wire   [49:0] r_V_126_fu_998_p2;
wire  signed [50:0] lhs_23_fu_890_p1;
wire  signed [50:0] sext_ln813_fu_1004_p1;
wire   [50:0] ret_V_25_fu_1008_p2;
wire   [31:0] tmp_s_fu_1014_p4;
wire   [17:0] r_V_128_fu_1036_p1;
wire   [49:0] r_V_128_fu_1036_p2;
wire  signed [50:0] lhs_V_4_fu_940_p1;
wire  signed [50:0] sext_ln813_1_fu_1042_p1;
wire   [50:0] ret_V_26_fu_1046_p2;
wire   [31:0] tmp_23_fu_1052_p4;
wire   [17:0] r_V_130_fu_1074_p1;
wire   [49:0] r_V_130_fu_1074_p2;
wire  signed [50:0] lhs_V_5_fu_990_p1;
wire  signed [50:0] sext_ln813_2_fu_1080_p1;
wire   [50:0] ret_V_27_fu_1084_p2;
wire   [31:0] tmp_24_fu_1090_p4;
wire   [18:0] r_V_132_fu_1112_p1;
wire   [50:0] r_V_132_fu_1112_p2;
wire   [50:0] lhs_24_fu_1024_p3;
wire   [50:0] ret_V_28_fu_1118_p2;
wire   [18:0] r_V_134_fu_1138_p1;
wire   [50:0] r_V_134_fu_1138_p2;
wire   [50:0] lhs_V_6_fu_1062_p3;
wire   [50:0] ret_V_29_fu_1144_p2;
wire   [18:0] r_V_136_fu_1164_p1;
wire   [50:0] r_V_136_fu_1164_p2;
wire   [50:0] lhs_V_7_fu_1100_p3;
wire   [50:0] ret_V_30_fu_1170_p2;
wire   [17:0] r_V_138_fu_1210_p1;
wire   [49:0] r_V_138_fu_1210_p2;
wire   [50:0] lhs_25_fu_1186_p3;
wire  signed [50:0] sext_ln813_3_fu_1216_p1;
wire   [50:0] ret_V_31_fu_1220_p2;
wire   [31:0] tmp_28_fu_1226_p4;
wire   [17:0] r_V_140_fu_1247_p1;
wire   [49:0] r_V_140_fu_1247_p2;
wire   [50:0] lhs_V_8_fu_1193_p3;
wire  signed [50:0] sext_ln813_4_fu_1253_p1;
wire   [50:0] ret_V_32_fu_1257_p2;
wire   [31:0] tmp_29_fu_1263_p4;
wire   [17:0] r_V_142_fu_1284_p1;
wire   [49:0] r_V_142_fu_1284_p2;
wire   [50:0] lhs_V_9_fu_1200_p3;
wire  signed [50:0] sext_ln813_5_fu_1290_p1;
wire   [50:0] ret_V_33_fu_1294_p2;
wire   [31:0] tmp_30_fu_1300_p4;
wire   [17:0] r_V_144_fu_1321_p1;
wire   [49:0] r_V_144_fu_1321_p2;
wire   [50:0] lhs_26_fu_1236_p3;
wire  signed [50:0] sext_ln813_6_fu_1327_p1;
wire   [50:0] ret_V_34_fu_1331_p2;
wire   [31:0] tmp_31_fu_1337_p4;
wire   [17:0] r_V_146_fu_1358_p1;
wire   [49:0] r_V_146_fu_1358_p2;
wire   [50:0] lhs_V_11_fu_1273_p3;
wire  signed [50:0] sext_ln813_7_fu_1364_p1;
wire   [50:0] ret_V_35_fu_1368_p2;
wire   [31:0] tmp_32_fu_1374_p4;
wire   [17:0] r_V_148_fu_1395_p1;
wire   [49:0] r_V_148_fu_1395_p2;
wire   [50:0] lhs_V_10_fu_1310_p3;
wire  signed [50:0] sext_ln813_8_fu_1401_p1;
wire   [50:0] ret_V_36_fu_1405_p2;
wire   [31:0] tmp_33_fu_1411_p4;
wire   [16:0] r_V_149_fu_1433_p1;
wire   [48:0] r_V_149_fu_1433_p2;
wire   [50:0] lhs_27_fu_1347_p3;
wire  signed [50:0] sext_ln813_9_fu_1439_p1;
wire   [50:0] ret_V_37_fu_1443_p2;
wire   [16:0] r_V_150_fu_1464_p1;
wire   [48:0] r_V_150_fu_1464_p2;
wire   [50:0] lhs_V_13_fu_1384_p3;
wire  signed [50:0] sext_ln813_10_fu_1470_p1;
wire   [50:0] ret_V_38_fu_1474_p2;
wire   [16:0] r_V_151_fu_1495_p1;
wire   [48:0] r_V_151_fu_1495_p2;
wire   [50:0] lhs_V_12_fu_1421_p3;
wire  signed [50:0] sext_ln813_11_fu_1501_p1;
wire   [50:0] ret_V_39_fu_1505_p2;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_115;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_enable_operation_146;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_enable_operation_164;
reg    ap_enable_operation_116;
reg    ap_enable_operation_147;
reg    ap_enable_operation_165;
reg    ap_enable_operation_117;
reg    ap_enable_operation_148;
reg    ap_enable_operation_166;
reg    ap_enable_operation_118;
reg    ap_enable_operation_149;
reg    ap_enable_operation_167;
reg    ap_enable_operation_119;
reg    ap_enable_operation_150;
reg    ap_enable_operation_168;
reg    ap_enable_operation_120;
reg    ap_enable_operation_151;
reg    ap_enable_operation_169;
reg    ap_enable_operation_121;
reg    ap_enable_operation_152;
reg    ap_enable_operation_170;
reg    ap_enable_operation_122;
reg    ap_enable_operation_153;
reg    ap_enable_operation_171;
reg    ap_enable_operation_123;
reg    ap_enable_operation_154;
reg    ap_enable_operation_172;
reg    ap_enable_operation_124;
reg    ap_enable_operation_155;
reg    ap_enable_operation_173;
reg    ap_enable_operation_125;
reg    ap_enable_operation_156;
reg    ap_enable_operation_174;
reg    ap_enable_operation_126;
reg    ap_enable_operation_157;
reg    ap_enable_operation_175;
reg    ap_enable_operation_127;
reg    ap_enable_operation_158;
reg    ap_enable_operation_176;
reg    ap_enable_operation_128;
reg    ap_enable_operation_159;
reg    ap_enable_operation_177;
reg    ap_enable_operation_129;
reg    ap_enable_operation_160;
reg    ap_enable_operation_178;
reg    ap_enable_operation_130;
reg    ap_enable_operation_161;
wire    ap_enable_operation_186;
reg    ap_enable_operation_131;
reg    ap_enable_operation_162;
wire    ap_enable_operation_187;
reg    ap_enable_operation_132;
reg    ap_enable_operation_163;
wire    ap_enable_operation_188;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_462;
reg    ap_condition_239;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_x_V_address0),
    .ce0(buf_val_x_V_ce0),
    .q0(buf_val_x_V_q0),
    .address1(buf_val_x_V_address1),
    .ce1(buf_val_x_V_ce1),
    .we1(buf_val_x_V_we1),
    .d1(buf_val_x_V_1_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_x_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_x_V_1_address0),
    .ce0(buf_val_x_V_1_ce0),
    .q0(buf_val_x_V_1_q0),
    .address1(buf_val_x_V_1_address1),
    .ce1(buf_val_x_V_1_ce1),
    .we1(buf_val_x_V_1_we1),
    .d1(buf_val_x_V_2_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_x_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_x_V_2_address0),
    .ce0(buf_val_x_V_2_ce0),
    .q0(buf_val_x_V_2_q0),
    .address1(buf_val_x_V_2_address1),
    .ce1(buf_val_x_V_2_ce1),
    .we1(buf_val_x_V_2_we1),
    .d1(buf_val_x_V_3_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_x_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_x_V_3_address0),
    .ce0(buf_val_x_V_3_ce0),
    .q0(buf_val_x_V_3_q0),
    .address1(buf_val_x_V_3_address1),
    .ce1(buf_val_x_V_3_ce1),
    .we1(buf_val_x_V_3_we1),
    .d1(buf_val_x_V_4_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_x_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_x_V_4_address0),
    .ce0(buf_val_x_V_4_ce0),
    .q0(buf_val_x_V_4_q0),
    .address1(buf_val_x_V_4_address1),
    .ce1(buf_val_x_V_4_ce1),
    .we1(buf_val_x_V_4_we1),
    .d1(buf_val_x_V_5_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_x_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_x_V_5_address0),
    .ce0(buf_val_x_V_5_ce0),
    .q0(buf_val_x_V_5_q0),
    .address1(buf_val_x_V_5_address1),
    .ce1(buf_val_x_V_5_ce1),
    .we1(buf_val_x_V_5_we1),
    .d1(ap_phi_mux_r_V_113_phi_fu_555_p4)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_y_V_address0),
    .ce0(buf_val_y_V_ce0),
    .q0(buf_val_y_V_q0),
    .address1(buf_val_y_V_address1),
    .ce1(buf_val_y_V_ce1),
    .we1(buf_val_y_V_we1),
    .d1(buf_val_y_V_1_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_y_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_y_V_1_address0),
    .ce0(buf_val_y_V_1_ce0),
    .q0(buf_val_y_V_1_q0),
    .address1(buf_val_y_V_1_address1),
    .ce1(buf_val_y_V_1_ce1),
    .we1(buf_val_y_V_1_we1),
    .d1(buf_val_y_V_2_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_y_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_y_V_2_address0),
    .ce0(buf_val_y_V_2_ce0),
    .q0(buf_val_y_V_2_q0),
    .address1(buf_val_y_V_2_address1),
    .ce1(buf_val_y_V_2_ce1),
    .we1(buf_val_y_V_2_we1),
    .d1(buf_val_y_V_3_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_y_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_y_V_3_address0),
    .ce0(buf_val_y_V_3_ce0),
    .q0(buf_val_y_V_3_q0),
    .address1(buf_val_y_V_3_address1),
    .ce1(buf_val_y_V_3_ce1),
    .we1(buf_val_y_V_3_we1),
    .d1(buf_val_y_V_4_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_y_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_y_V_4_address0),
    .ce0(buf_val_y_V_4_ce0),
    .q0(buf_val_y_V_4_q0),
    .address1(buf_val_y_V_4_address1),
    .ce1(buf_val_y_V_4_ce1),
    .we1(buf_val_y_V_4_we1),
    .d1(buf_val_y_V_5_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_y_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_y_V_5_address0),
    .ce0(buf_val_y_V_5_ce0),
    .q0(buf_val_y_V_5_q0),
    .address1(buf_val_y_V_5_address1),
    .ce1(buf_val_y_V_5_ce1),
    .we1(buf_val_y_V_5_we1),
    .d1(ap_phi_mux_r_V_115_phi_fu_569_p4)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_z_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_z_V_address0),
    .ce0(buf_val_z_V_ce0),
    .q0(buf_val_z_V_q0),
    .address1(buf_val_z_V_address1),
    .ce1(buf_val_z_V_ce1),
    .we1(buf_val_z_V_we1),
    .d1(buf_val_z_V_1_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_z_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_z_V_1_address0),
    .ce0(buf_val_z_V_1_ce0),
    .q0(buf_val_z_V_1_q0),
    .address1(buf_val_z_V_1_address1),
    .ce1(buf_val_z_V_1_ce1),
    .we1(buf_val_z_V_1_we1),
    .d1(buf_val_z_V_2_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_z_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_z_V_2_address0),
    .ce0(buf_val_z_V_2_ce0),
    .q0(buf_val_z_V_2_q0),
    .address1(buf_val_z_V_2_address1),
    .ce1(buf_val_z_V_2_ce1),
    .we1(buf_val_z_V_2_we1),
    .d1(buf_val_z_V_3_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_z_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_z_V_3_address0),
    .ce0(buf_val_z_V_3_ce0),
    .q0(buf_val_z_V_3_q0),
    .address1(buf_val_z_V_3_address1),
    .ce1(buf_val_z_V_3_ce1),
    .we1(buf_val_z_V_3_we1),
    .d1(buf_val_z_V_4_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_z_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_z_V_4_address0),
    .ce0(buf_val_z_V_4_ce0),
    .q0(buf_val_z_V_4_q0),
    .address1(buf_val_z_V_4_address1),
    .ce1(buf_val_z_V_4_ce1),
    .we1(buf_val_z_V_4_we1),
    .d1(buf_val_z_V_5_q0)
);

optical_flow_gradient_weight_y_buf_val_x_V_RAM_S2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buf_val_z_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_val_z_V_5_address0),
    .ce0(buf_val_z_V_5_ce0),
    .q0(buf_val_z_V_5_q0),
    .address1(buf_val_z_V_5_address1),
    .ce1(buf_val_z_V_5_ce1),
    .we1(buf_val_z_V_5_we1),
    .d1(ap_phi_mux_r_V_117_phi_fu_583_p4)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U20(
    .din0(buf_val_x_V_q0),
    .din1(r_V_103_fu_788_p1),
    .dout(r_V_103_fu_788_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U21(
    .din0(buf_val_y_V_q0),
    .din1(r_V_107_fu_808_p1),
    .dout(r_V_107_fu_808_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U22(
    .din0(buf_val_z_V_q0),
    .din1(r_V_111_fu_828_p1),
    .dout(r_V_111_fu_828_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U23(
    .din0(buf_val_x_V_1_q0),
    .din1(r_V_120_fu_848_p1),
    .dout(r_V_120_fu_848_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U24(
    .din0(buf_val_y_V_1_q0),
    .din1(r_V_122_fu_898_p1),
    .dout(r_V_122_fu_898_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U25(
    .din0(buf_val_z_V_1_q0),
    .din1(r_V_124_fu_948_p1),
    .dout(r_V_124_fu_948_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U26(
    .din0(buf_val_x_V_2_q0),
    .din1(r_V_126_fu_998_p1),
    .dout(r_V_126_fu_998_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U27(
    .din0(buf_val_y_V_2_q0),
    .din1(r_V_128_fu_1036_p1),
    .dout(r_V_128_fu_1036_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U28(
    .din0(buf_val_z_V_2_q0),
    .din1(r_V_130_fu_1074_p1),
    .dout(r_V_130_fu_1074_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U29(
    .din0(buf_val_x_V_3_q0),
    .din1(r_V_132_fu_1112_p1),
    .dout(r_V_132_fu_1112_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U30(
    .din0(buf_val_y_V_3_q0),
    .din1(r_V_134_fu_1138_p1),
    .dout(r_V_134_fu_1138_p2)
);

optical_flow_mul_32s_19ns_51_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 51 ))
mul_32s_19ns_51_1_1_U31(
    .din0(buf_val_z_V_3_q0),
    .din1(r_V_136_fu_1164_p1),
    .dout(r_V_136_fu_1164_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U32(
    .din0(r_V_137_reg_1667),
    .din1(r_V_138_fu_1210_p1),
    .dout(r_V_138_fu_1210_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U33(
    .din0(r_V_139_reg_1672),
    .din1(r_V_140_fu_1247_p1),
    .dout(r_V_140_fu_1247_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U34(
    .din0(r_V_141_reg_1677),
    .din1(r_V_142_fu_1284_p1),
    .dout(r_V_142_fu_1284_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U35(
    .din0(r_V_143_reg_1682),
    .din1(r_V_144_fu_1321_p1),
    .dout(r_V_144_fu_1321_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U36(
    .din0(r_V_145_reg_1687),
    .din1(r_V_146_fu_1358_p1),
    .dout(r_V_146_fu_1358_p2)
);

optical_flow_mul_32s_18ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 50 ))
mul_32s_18ns_50_1_1_U37(
    .din0(r_V_147_reg_1692),
    .din1(r_V_148_fu_1395_p1),
    .dout(r_V_148_fu_1395_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U38(
    .din0(r_V_113_reg_551),
    .din1(r_V_149_fu_1433_p1),
    .dout(r_V_149_fu_1433_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U39(
    .din0(r_V_115_reg_565),
    .din1(r_V_150_fu_1464_p1),
    .dout(r_V_150_fu_1464_p2)
);

optical_flow_mul_32s_17ns_49_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 49 ))
mul_32s_17ns_49_1_1_U40(
    .din0(r_V_117_reg_579),
    .din1(r_V_151_fu_1495_p1),
    .dout(r_V_151_fu_1495_p2)
);

optical_flow_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(real_start),
    .ap_ready(internal_ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_462)) begin
        if (((select_ln139_1_fu_685_p3 == 1'd0) & (icmp_ln139_fu_644_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_r_V_113_reg_551 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_r_V_113_reg_551 <= ap_phi_reg_pp0_iter0_r_V_113_reg_551;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_462)) begin
        if (((select_ln139_1_fu_685_p3 == 1'd0) & (icmp_ln139_fu_644_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_r_V_115_reg_565 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_r_V_115_reg_565 <= ap_phi_reg_pp0_iter0_r_V_115_reg_565;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_462)) begin
        if (((select_ln139_1_fu_685_p3 == 1'd0) & (icmp_ln139_fu_644_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_r_V_117_reg_579 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_r_V_117_reg_579 <= ap_phi_reg_pp0_iter0_r_V_117_reg_579;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_462)) begin
        if ((icmp_ln139_fu_644_p2 == 1'd0)) begin
            c_fu_104 <= add_ln141_fu_763_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            c_fu_104 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_462)) begin
        if ((icmp_ln139_fu_644_p2 == 1'd0)) begin
            indvar_flatten_fu_112 <= add_ln139_1_fu_650_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_112 <= 19'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_239)) begin
        if (((select_ln139_1_reg_1547 == 1'd1) & (icmp_ln139_reg_1543 == 1'd0))) begin
            r_V_113_reg_551 <= gradient_x_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            r_V_113_reg_551 <= ap_phi_reg_pp0_iter1_r_V_113_reg_551;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_239)) begin
        if (((select_ln139_1_reg_1547 == 1'd1) & (icmp_ln139_reg_1543 == 1'd0))) begin
            r_V_115_reg_565 <= gradient_y_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            r_V_115_reg_565 <= ap_phi_reg_pp0_iter1_r_V_115_reg_565;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_239)) begin
        if (((select_ln139_1_reg_1547 == 1'd1) & (icmp_ln139_reg_1543 == 1'd0))) begin
            r_V_117_reg_579 <= gradient_z_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            r_V_117_reg_579 <= ap_phi_reg_pp0_iter1_r_V_117_reg_579;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_462)) begin
        if ((icmp_ln139_fu_644_p2 == 1'd0)) begin
            r_fu_108 <= select_ln139_4_fu_733_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            r_fu_108 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln139_reg_1543 <= icmp_ln139_fu_644_p2;
        select_ln139_2_reg_1551_pp0_iter1_reg <= select_ln139_2_reg_1551;
        select_ln139_3_reg_1555_pp0_iter1_reg <= select_ln139_3_reg_1555;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln139_fu_644_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_1_addr_reg_1577 <= zext_ln803_fu_741_p1;
        buf_val_x_V_2_addr_reg_1595 <= zext_ln803_fu_741_p1;
        buf_val_x_V_3_addr_reg_1613 <= zext_ln803_fu_741_p1;
        buf_val_x_V_4_addr_reg_1631 <= zext_ln803_fu_741_p1;
        buf_val_x_V_5_addr_reg_1649 <= zext_ln803_fu_741_p1;
        buf_val_x_V_addr_reg_1559 <= zext_ln803_fu_741_p1;
        buf_val_y_V_1_addr_reg_1583 <= zext_ln803_fu_741_p1;
        buf_val_y_V_2_addr_reg_1601 <= zext_ln803_fu_741_p1;
        buf_val_y_V_3_addr_reg_1619 <= zext_ln803_fu_741_p1;
        buf_val_y_V_4_addr_reg_1637 <= zext_ln803_fu_741_p1;
        buf_val_y_V_5_addr_reg_1655 <= zext_ln803_fu_741_p1;
        buf_val_y_V_addr_reg_1565 <= zext_ln803_fu_741_p1;
        buf_val_z_V_1_addr_reg_1589 <= zext_ln803_fu_741_p1;
        buf_val_z_V_2_addr_reg_1607 <= zext_ln803_fu_741_p1;
        buf_val_z_V_3_addr_reg_1625 <= zext_ln803_fu_741_p1;
        buf_val_z_V_4_addr_reg_1643 <= zext_ln803_fu_741_p1;
        buf_val_z_V_5_addr_reg_1661 <= zext_ln803_fu_741_p1;
        buf_val_z_V_addr_reg_1571 <= zext_ln803_fu_741_p1;
        select_ln139_1_reg_1547 <= select_ln139_1_fu_685_p3;
        select_ln139_2_reg_1551 <= select_ln139_2_fu_699_p3;
        select_ln139_3_reg_1555 <= select_ln139_3_fu_725_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_137_reg_1667 <= buf_val_x_V_4_q0;
        r_V_139_reg_1672 <= buf_val_y_V_4_q0;
        r_V_141_reg_1677 <= buf_val_z_V_4_q0;
        r_V_143_reg_1682 <= buf_val_x_V_5_q0;
        r_V_145_reg_1687 <= buf_val_y_V_5_q0;
        r_V_147_reg_1692 <= buf_val_z_V_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln139_3_reg_1555 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_25_reg_1697 <= {{ret_V_28_fu_1118_p2[50:19]}};
        tmp_26_reg_1702 <= {{ret_V_29_fu_1144_p2[50:19]}};
        tmp_27_reg_1707 <= {{ret_V_30_fu_1170_p2[50:19]}};
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln139_fu_644_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln139_1_reg_1547 == 1'd1) & (icmp_ln139_reg_1543 == 1'd0))) begin
        ap_phi_mux_r_V_113_phi_fu_555_p4 = gradient_x_V_dout;
    end else begin
        ap_phi_mux_r_V_113_phi_fu_555_p4 = ap_phi_reg_pp0_iter1_r_V_113_reg_551;
    end
end

always @ (*) begin
    if (((select_ln139_1_reg_1547 == 1'd1) & (icmp_ln139_reg_1543 == 1'd0))) begin
        ap_phi_mux_r_V_115_phi_fu_569_p4 = gradient_y_V_dout;
    end else begin
        ap_phi_mux_r_V_115_phi_fu_569_p4 = ap_phi_reg_pp0_iter1_r_V_115_reg_565;
    end
end

always @ (*) begin
    if (((select_ln139_1_reg_1547 == 1'd1) & (icmp_ln139_reg_1543 == 1'd0))) begin
        ap_phi_mux_r_V_117_phi_fu_583_p4 = gradient_z_V_dout;
    end else begin
        ap_phi_mux_r_V_117_phi_fu_583_p4 = ap_phi_reg_pp0_iter1_r_V_117_reg_579;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_c_load = 11'd0;
    end else begin
        ap_sig_allocacmp_c_load = c_fu_104;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 19'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_112;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_r_3 = 9'd0;
    end else begin
        ap_sig_allocacmp_r_3 = r_fu_108;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_1_ce0 = 1'b1;
    end else begin
        buf_val_x_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_1_ce1 = 1'b1;
    end else begin
        buf_val_x_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_1_we1 = 1'b1;
    end else begin
        buf_val_x_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_2_ce0 = 1'b1;
    end else begin
        buf_val_x_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_2_ce1 = 1'b1;
    end else begin
        buf_val_x_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_2_we1 = 1'b1;
    end else begin
        buf_val_x_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_3_ce0 = 1'b1;
    end else begin
        buf_val_x_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_3_ce1 = 1'b1;
    end else begin
        buf_val_x_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_3_we1 = 1'b1;
    end else begin
        buf_val_x_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_4_ce0 = 1'b1;
    end else begin
        buf_val_x_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_4_ce1 = 1'b1;
    end else begin
        buf_val_x_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_4_we1 = 1'b1;
    end else begin
        buf_val_x_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_5_ce0 = 1'b1;
    end else begin
        buf_val_x_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_5_ce1 = 1'b1;
    end else begin
        buf_val_x_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_5_we1 = 1'b1;
    end else begin
        buf_val_x_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_ce0 = 1'b1;
    end else begin
        buf_val_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_ce1 = 1'b1;
    end else begin
        buf_val_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_x_V_we1 = 1'b1;
    end else begin
        buf_val_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_1_ce0 = 1'b1;
    end else begin
        buf_val_y_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_1_ce1 = 1'b1;
    end else begin
        buf_val_y_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_1_we1 = 1'b1;
    end else begin
        buf_val_y_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_2_ce0 = 1'b1;
    end else begin
        buf_val_y_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_2_ce1 = 1'b1;
    end else begin
        buf_val_y_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_2_we1 = 1'b1;
    end else begin
        buf_val_y_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_3_ce0 = 1'b1;
    end else begin
        buf_val_y_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_3_ce1 = 1'b1;
    end else begin
        buf_val_y_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_3_we1 = 1'b1;
    end else begin
        buf_val_y_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_4_ce0 = 1'b1;
    end else begin
        buf_val_y_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_4_ce1 = 1'b1;
    end else begin
        buf_val_y_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_4_we1 = 1'b1;
    end else begin
        buf_val_y_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_5_ce0 = 1'b1;
    end else begin
        buf_val_y_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_5_ce1 = 1'b1;
    end else begin
        buf_val_y_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_5_we1 = 1'b1;
    end else begin
        buf_val_y_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_ce0 = 1'b1;
    end else begin
        buf_val_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_ce1 = 1'b1;
    end else begin
        buf_val_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_y_V_we1 = 1'b1;
    end else begin
        buf_val_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_1_ce0 = 1'b1;
    end else begin
        buf_val_z_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_1_ce1 = 1'b1;
    end else begin
        buf_val_z_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_1_we1 = 1'b1;
    end else begin
        buf_val_z_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_2_ce0 = 1'b1;
    end else begin
        buf_val_z_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_2_ce1 = 1'b1;
    end else begin
        buf_val_z_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_2_we1 = 1'b1;
    end else begin
        buf_val_z_V_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_3_ce0 = 1'b1;
    end else begin
        buf_val_z_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_3_ce1 = 1'b1;
    end else begin
        buf_val_z_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_3_we1 = 1'b1;
    end else begin
        buf_val_z_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_4_ce0 = 1'b1;
    end else begin
        buf_val_z_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_4_ce1 = 1'b1;
    end else begin
        buf_val_z_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_4_we1 = 1'b1;
    end else begin
        buf_val_z_V_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_5_ce0 = 1'b1;
    end else begin
        buf_val_z_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_5_ce1 = 1'b1;
    end else begin
        buf_val_z_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_5_we1 = 1'b1;
    end else begin
        buf_val_z_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_ce0 = 1'b1;
    end else begin
        buf_val_z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_ce1 = 1'b1;
    end else begin
        buf_val_z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln139_reg_1543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_val_z_V_we1 = 1'b1;
    end else begin
        buf_val_z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op179_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gradient_x_V_blk_n = gradient_x_V_empty_n;
    end else begin
        gradient_x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op179_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gradient_x_V_read = 1'b1;
    end else begin
        gradient_x_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op180_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gradient_y_V_blk_n = gradient_y_V_empty_n;
    end else begin
        gradient_y_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op180_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gradient_y_V_read = 1'b1;
    end else begin
        gradient_y_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op181_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gradient_z_V_blk_n = gradient_z_V_empty_n;
    end else begin
        gradient_z_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op181_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gradient_z_V_read = 1'b1;
    end else begin
        gradient_z_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op310_write_state3 == 1'b1)))) begin
        y_filtered_x_V_blk_n = y_filtered_x_V_full_n;
    end else begin
        y_filtered_x_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((ap_predicate_op310_write_state3 == 1'b1)) begin
            y_filtered_x_V_din = 32'd0;
        end else if ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0)) begin
            y_filtered_x_V_din = {{ret_V_37_fu_1443_p2[50:19]}};
        end else begin
            y_filtered_x_V_din = 'bx;
        end
    end else begin
        y_filtered_x_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op310_write_state3 == 1'b1)))) begin
        y_filtered_x_V_write = 1'b1;
    end else begin
        y_filtered_x_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op311_write_state3 == 1'b1)))) begin
        y_filtered_y_V_blk_n = y_filtered_y_V_full_n;
    end else begin
        y_filtered_y_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((ap_predicate_op311_write_state3 == 1'b1)) begin
            y_filtered_y_V_din = 32'd0;
        end else if ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0)) begin
            y_filtered_y_V_din = {{ret_V_38_fu_1474_p2[50:19]}};
        end else begin
            y_filtered_y_V_din = 'bx;
        end
    end else begin
        y_filtered_y_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op311_write_state3 == 1'b1)))) begin
        y_filtered_y_V_write = 1'b1;
    end else begin
        y_filtered_y_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op312_write_state3 == 1'b1)))) begin
        y_filtered_z_V_blk_n = y_filtered_z_V_full_n;
    end else begin
        y_filtered_z_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        if ((ap_predicate_op312_write_state3 == 1'b1)) begin
            y_filtered_z_V_din = 32'd0;
        end else if ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0)) begin
            y_filtered_z_V_din = {{ret_V_39_fu_1505_p2[50:19]}};
        end else begin
            y_filtered_z_V_din = 'bx;
        end
    end else begin
        y_filtered_z_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op312_write_state3 == 1'b1)))) begin
        y_filtered_z_V_write = 1'b1;
    end else begin
        y_filtered_z_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_x_V_2_fu_794_p4 = {{r_V_103_fu_788_p2[48:19]}};

assign acc_y_V_2_fu_814_p4 = {{r_V_107_fu_808_p2[48:19]}};

assign acc_z_V_2_fu_834_p4 = {{r_V_111_fu_828_p2[48:19]}};

assign add_ln139_1_fu_650_p2 = (ap_sig_allocacmp_indvar_flatten_load + 19'd1);

assign add_ln139_fu_659_p2 = (ap_sig_allocacmp_r_3 + 9'd1);

assign add_ln141_fu_763_p2 = (select_ln139_fu_671_p3 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op181_read_state2 == 1'b1) & (gradient_z_V_empty_n == 1'b0)) | ((ap_predicate_op180_read_state2 == 1'b1) & (gradient_y_V_empty_n == 1'b0)) | ((ap_predicate_op179_read_state2 == 1'b1) & (gradient_x_V_empty_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_x_V_full_n == 1'b0)) | ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_z_V_full_n == 1'b0)) | ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_y_V_full_n == 1'b0)) | ((y_filtered_x_V_full_n == 1'b0) & (ap_predicate_op310_write_state3 == 1'b1)) | ((ap_predicate_op312_write_state3 == 1'b1) & (y_filtered_z_V_full_n == 1'b0)) | ((ap_predicate_op311_write_state3 == 1'b1) & (y_filtered_y_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op181_read_state2 == 1'b1) & (gradient_z_V_empty_n == 1'b0)) | ((ap_predicate_op180_read_state2 == 1'b1) & (gradient_y_V_empty_n == 1'b0)) | ((ap_predicate_op179_read_state2 == 1'b1) & (gradient_x_V_empty_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_x_V_full_n == 1'b0)) | ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_z_V_full_n == 1'b0)) | ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_y_V_full_n == 1'b0)) | ((y_filtered_x_V_full_n == 1'b0) & (ap_predicate_op310_write_state3 == 1'b1)) | ((ap_predicate_op312_write_state3 == 1'b1) & (y_filtered_z_V_full_n == 1'b0)) | ((ap_predicate_op311_write_state3 == 1'b1) & (y_filtered_y_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op181_read_state2 == 1'b1) & (gradient_z_V_empty_n == 1'b0)) | ((ap_predicate_op180_read_state2 == 1'b1) & (gradient_y_V_empty_n == 1'b0)) | ((ap_predicate_op179_read_state2 == 1'b1) & (gradient_x_V_empty_n == 1'b0)))) | ((ap_done_reg == 1'b1) & (ap_start_int == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_x_V_full_n == 1'b0)) | ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_z_V_full_n == 1'b0)) | ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_y_V_full_n == 1'b0)) | ((y_filtered_x_V_full_n == 1'b0) & (ap_predicate_op310_write_state3 == 1'b1)) | ((ap_predicate_op312_write_state3 == 1'b1) & (y_filtered_z_V_full_n == 1'b0)) | ((ap_predicate_op311_write_state3 == 1'b1) & (y_filtered_y_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op181_read_state2 == 1'b1) & (gradient_z_V_empty_n == 1'b0)) | ((ap_predicate_op180_read_state2 == 1'b1) & (gradient_y_V_empty_n == 1'b0)) | ((ap_predicate_op179_read_state2 == 1'b1) & (gradient_x_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_x_V_full_n == 1'b0)) | ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_z_V_full_n == 1'b0)) | ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd0) & (y_filtered_y_V_full_n == 1'b0)) | ((y_filtered_x_V_full_n == 1'b0) & (ap_predicate_op310_write_state3 == 1'b1)) | ((ap_predicate_op312_write_state3 == 1'b1) & (y_filtered_z_V_full_n == 1'b0)) | ((ap_predicate_op311_write_state3 == 1'b1) & (y_filtered_y_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_239 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_462 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_enable_operation_115 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_116 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_117 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_118 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_119 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_120 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_121 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_122 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_123 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_124 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_125 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_126 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_127 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_128 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_129 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_130 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_131 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_132 = (icmp_ln139_fu_644_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_146 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_147 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_148 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_149 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_150 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_151 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_152 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_153 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_154 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_155 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_156 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_157 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_158 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_159 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_160 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_161 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_162 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_163 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_164 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_165 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_166 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_167 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_168 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_169 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_170 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_171 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_172 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_173 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_174 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_175 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_176 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_177 = (icmp_ln139_reg_1543 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_178 = (icmp_ln139_reg_1543 == 1'd0);
end

assign ap_enable_operation_186 = (1'b1 == 1'b1);

assign ap_enable_operation_187 = (1'b1 == 1'b1);

assign ap_enable_operation_188 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_r_V_113_reg_551 = 'bx;

assign ap_phi_reg_pp0_iter0_r_V_115_reg_565 = 'bx;

assign ap_phi_reg_pp0_iter0_r_V_117_reg_579 = 'bx;

always @ (*) begin
    ap_predicate_op179_read_state2 = ((select_ln139_1_reg_1547 == 1'd1) & (icmp_ln139_reg_1543 == 1'd0));
end

always @ (*) begin
    ap_predicate_op180_read_state2 = ((select_ln139_1_reg_1547 == 1'd1) & (icmp_ln139_reg_1543 == 1'd0));
end

always @ (*) begin
    ap_predicate_op181_read_state2 = ((select_ln139_1_reg_1547 == 1'd1) & (icmp_ln139_reg_1543 == 1'd0));
end

always @ (*) begin
    ap_predicate_op310_write_state3 = ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd1) & (select_ln139_2_reg_1551_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op311_write_state3 = ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd1) & (select_ln139_2_reg_1551_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op312_write_state3 = ((select_ln139_3_reg_1555_pp0_iter1_reg == 1'd1) & (select_ln139_2_reg_1551_pp0_iter1_reg == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign brmerge_i_fu_638_p2 = (cmp35_not_i_fu_632_p2 | cmp34_not_i_fu_626_p2);

assign brmerge_i_mid1_fu_719_p2 = (cmp35_not_i_mid1_fu_713_p2 | cmp34_not_i_mid1_fu_707_p2);

assign buf_val_x_V_1_address0 = zext_ln803_fu_741_p1;

assign buf_val_x_V_1_address1 = buf_val_x_V_1_addr_reg_1577;

assign buf_val_x_V_2_address0 = zext_ln803_fu_741_p1;

assign buf_val_x_V_2_address1 = buf_val_x_V_2_addr_reg_1595;

assign buf_val_x_V_3_address0 = zext_ln803_fu_741_p1;

assign buf_val_x_V_3_address1 = buf_val_x_V_3_addr_reg_1613;

assign buf_val_x_V_4_address0 = zext_ln803_fu_741_p1;

assign buf_val_x_V_4_address1 = buf_val_x_V_4_addr_reg_1631;

assign buf_val_x_V_5_address0 = zext_ln803_fu_741_p1;

assign buf_val_x_V_5_address1 = buf_val_x_V_5_addr_reg_1649;

assign buf_val_x_V_address0 = zext_ln803_fu_741_p1;

assign buf_val_x_V_address1 = buf_val_x_V_addr_reg_1559;

assign buf_val_y_V_1_address0 = zext_ln803_fu_741_p1;

assign buf_val_y_V_1_address1 = buf_val_y_V_1_addr_reg_1583;

assign buf_val_y_V_2_address0 = zext_ln803_fu_741_p1;

assign buf_val_y_V_2_address1 = buf_val_y_V_2_addr_reg_1601;

assign buf_val_y_V_3_address0 = zext_ln803_fu_741_p1;

assign buf_val_y_V_3_address1 = buf_val_y_V_3_addr_reg_1619;

assign buf_val_y_V_4_address0 = zext_ln803_fu_741_p1;

assign buf_val_y_V_4_address1 = buf_val_y_V_4_addr_reg_1637;

assign buf_val_y_V_5_address0 = zext_ln803_fu_741_p1;

assign buf_val_y_V_5_address1 = buf_val_y_V_5_addr_reg_1655;

assign buf_val_y_V_address0 = zext_ln803_fu_741_p1;

assign buf_val_y_V_address1 = buf_val_y_V_addr_reg_1565;

assign buf_val_z_V_1_address0 = zext_ln803_fu_741_p1;

assign buf_val_z_V_1_address1 = buf_val_z_V_1_addr_reg_1589;

assign buf_val_z_V_2_address0 = zext_ln803_fu_741_p1;

assign buf_val_z_V_2_address1 = buf_val_z_V_2_addr_reg_1607;

assign buf_val_z_V_3_address0 = zext_ln803_fu_741_p1;

assign buf_val_z_V_3_address1 = buf_val_z_V_3_addr_reg_1625;

assign buf_val_z_V_4_address0 = zext_ln803_fu_741_p1;

assign buf_val_z_V_4_address1 = buf_val_z_V_4_addr_reg_1643;

assign buf_val_z_V_5_address0 = zext_ln803_fu_741_p1;

assign buf_val_z_V_5_address1 = buf_val_z_V_5_addr_reg_1661;

assign buf_val_z_V_address0 = zext_ln803_fu_741_p1;

assign buf_val_z_V_address1 = buf_val_z_V_addr_reg_1571;

assign cmp10_i_fu_614_p2 = ((ap_sig_allocacmp_r_3 < 9'd436) ? 1'b1 : 1'b0);

assign cmp10_i_mid1_fu_679_p2 = ((add_ln139_fu_659_p2 < 9'd436) ? 1'b1 : 1'b0);

assign cmp34_not_i_fu_626_p2 = ((ap_sig_allocacmp_r_3 < 9'd6) ? 1'b1 : 1'b0);

assign cmp34_not_i_mid1_fu_707_p2 = ((add_ln139_fu_659_p2 < 9'd6) ? 1'b1 : 1'b0);

assign cmp35_not_i_fu_632_p2 = (cmp10_i_fu_614_p2 ^ 1'd1);

assign cmp35_not_i_mid1_fu_713_p2 = (cmp10_i_mid1_fu_679_p2 ^ 1'd1);

assign cmp66_i_fu_620_p2 = ((ap_sig_allocacmp_r_3 > 9'd2) ? 1'b1 : 1'b0);

assign cmp66_i_mid1_fu_693_p2 = ((add_ln139_fu_659_p2 > 9'd2) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_644_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 19'd449536) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_665_p2 = ((ap_sig_allocacmp_c_load == 11'd1024) ? 1'b1 : 1'b0);

assign lhs_22_fu_854_p3 = {{acc_x_V_2_fu_794_p4}, {19'd0}};

assign lhs_23_fu_890_p1 = $signed(tmp_49_fu_882_p3);

assign lhs_24_fu_1024_p3 = {{tmp_s_fu_1014_p4}, {19'd0}};

assign lhs_25_fu_1186_p3 = {{tmp_25_reg_1697}, {19'd0}};

assign lhs_26_fu_1236_p3 = {{tmp_28_fu_1226_p4}, {19'd0}};

assign lhs_27_fu_1347_p3 = {{tmp_31_fu_1337_p4}, {19'd0}};

assign lhs_V_10_fu_1310_p3 = {{tmp_30_fu_1300_p4}, {19'd0}};

assign lhs_V_11_fu_1273_p3 = {{tmp_29_fu_1263_p4}, {19'd0}};

assign lhs_V_12_fu_1421_p3 = {{tmp_33_fu_1411_p4}, {19'd0}};

assign lhs_V_13_fu_1384_p3 = {{tmp_32_fu_1374_p4}, {19'd0}};

assign lhs_V_1_fu_904_p3 = {{acc_y_V_2_fu_814_p4}, {19'd0}};

assign lhs_V_3_fu_954_p3 = {{acc_z_V_2_fu_834_p4}, {19'd0}};

assign lhs_V_4_fu_940_p1 = $signed(tmp_51_fu_932_p3);

assign lhs_V_5_fu_990_p1 = $signed(tmp_53_fu_982_p3);

assign lhs_V_6_fu_1062_p3 = {{tmp_23_fu_1052_p4}, {19'd0}};

assign lhs_V_7_fu_1100_p3 = {{tmp_24_fu_1090_p4}, {19'd0}};

assign lhs_V_8_fu_1193_p3 = {{tmp_26_reg_1702}, {19'd0}};

assign lhs_V_9_fu_1200_p3 = {{tmp_27_reg_1707}, {19'd0}};

assign r_V_103_fu_788_p1 = 49'd39583;

assign r_V_107_fu_808_p1 = 49'd39583;

assign r_V_111_fu_828_p1 = 49'd39583;

assign r_V_120_fu_848_p1 = 50'd69730;

assign r_V_122_fu_898_p1 = 50'd69730;

assign r_V_124_fu_948_p1 = 50'd69730;

assign r_V_126_fu_998_p1 = 50'd97989;

assign r_V_128_fu_1036_p1 = 50'd97989;

assign r_V_130_fu_1074_p1 = 50'd97989;

assign r_V_132_fu_1112_p1 = 51'd152200;

assign r_V_134_fu_1138_p1 = 51'd152200;

assign r_V_136_fu_1164_p1 = 51'd152200;

assign r_V_138_fu_1210_p1 = 50'd97989;

assign r_V_140_fu_1247_p1 = 50'd97989;

assign r_V_142_fu_1284_p1 = 50'd97989;

assign r_V_144_fu_1321_p1 = 50'd69730;

assign r_V_146_fu_1358_p1 = 50'd69730;

assign r_V_148_fu_1395_p1 = 50'd69730;

assign r_V_149_fu_1433_p1 = 49'd39583;

assign r_V_150_fu_1464_p1 = 49'd39583;

assign r_V_151_fu_1495_p1 = 49'd39583;

assign ret_V_23_fu_916_p2 = ($signed(sext_ln1347_1_fu_912_p1) + $signed(r_V_122_fu_898_p2));

assign ret_V_24_fu_966_p2 = ($signed(sext_ln1347_2_fu_962_p1) + $signed(r_V_124_fu_948_p2));

assign ret_V_25_fu_1008_p2 = ($signed(lhs_23_fu_890_p1) + $signed(sext_ln813_fu_1004_p1));

assign ret_V_26_fu_1046_p2 = ($signed(lhs_V_4_fu_940_p1) + $signed(sext_ln813_1_fu_1042_p1));

assign ret_V_27_fu_1084_p2 = ($signed(lhs_V_5_fu_990_p1) + $signed(sext_ln813_2_fu_1080_p1));

assign ret_V_28_fu_1118_p2 = (r_V_132_fu_1112_p2 + lhs_24_fu_1024_p3);

assign ret_V_29_fu_1144_p2 = (r_V_134_fu_1138_p2 + lhs_V_6_fu_1062_p3);

assign ret_V_30_fu_1170_p2 = (r_V_136_fu_1164_p2 + lhs_V_7_fu_1100_p3);

assign ret_V_31_fu_1220_p2 = ($signed(lhs_25_fu_1186_p3) + $signed(sext_ln813_3_fu_1216_p1));

assign ret_V_32_fu_1257_p2 = ($signed(lhs_V_8_fu_1193_p3) + $signed(sext_ln813_4_fu_1253_p1));

assign ret_V_33_fu_1294_p2 = ($signed(lhs_V_9_fu_1200_p3) + $signed(sext_ln813_5_fu_1290_p1));

assign ret_V_34_fu_1331_p2 = ($signed(lhs_26_fu_1236_p3) + $signed(sext_ln813_6_fu_1327_p1));

assign ret_V_35_fu_1368_p2 = ($signed(lhs_V_11_fu_1273_p3) + $signed(sext_ln813_7_fu_1364_p1));

assign ret_V_36_fu_1405_p2 = ($signed(lhs_V_10_fu_1310_p3) + $signed(sext_ln813_8_fu_1401_p1));

assign ret_V_37_fu_1443_p2 = ($signed(lhs_27_fu_1347_p3) + $signed(sext_ln813_9_fu_1439_p1));

assign ret_V_38_fu_1474_p2 = ($signed(lhs_V_13_fu_1384_p3) + $signed(sext_ln813_10_fu_1470_p1));

assign ret_V_39_fu_1505_p2 = ($signed(lhs_V_12_fu_1421_p3) + $signed(sext_ln813_11_fu_1501_p1));

assign ret_V_fu_866_p2 = ($signed(sext_ln1347_fu_862_p1) + $signed(r_V_120_fu_848_p2));

assign select_ln139_1_fu_685_p3 = ((icmp_ln141_fu_665_p2[0:0] == 1'b1) ? cmp10_i_mid1_fu_679_p2 : cmp10_i_fu_614_p2);

assign select_ln139_2_fu_699_p3 = ((icmp_ln141_fu_665_p2[0:0] == 1'b1) ? cmp66_i_mid1_fu_693_p2 : cmp66_i_fu_620_p2);

assign select_ln139_3_fu_725_p3 = ((icmp_ln141_fu_665_p2[0:0] == 1'b1) ? brmerge_i_mid1_fu_719_p2 : brmerge_i_fu_638_p2);

assign select_ln139_4_fu_733_p3 = ((icmp_ln141_fu_665_p2[0:0] == 1'b1) ? add_ln139_fu_659_p2 : ap_sig_allocacmp_r_3);

assign select_ln139_fu_671_p3 = ((icmp_ln141_fu_665_p2[0:0] == 1'b1) ? 11'd0 : ap_sig_allocacmp_c_load);

assign sext_ln1347_1_fu_912_p1 = $signed(lhs_V_1_fu_904_p3);

assign sext_ln1347_2_fu_962_p1 = $signed(lhs_V_3_fu_954_p3);

assign sext_ln1347_fu_862_p1 = $signed(lhs_22_fu_854_p3);

assign sext_ln813_10_fu_1470_p1 = $signed(r_V_150_fu_1464_p2);

assign sext_ln813_11_fu_1501_p1 = $signed(r_V_151_fu_1495_p2);

assign sext_ln813_1_fu_1042_p1 = $signed(r_V_128_fu_1036_p2);

assign sext_ln813_2_fu_1080_p1 = $signed(r_V_130_fu_1074_p2);

assign sext_ln813_3_fu_1216_p1 = $signed(r_V_138_fu_1210_p2);

assign sext_ln813_4_fu_1253_p1 = $signed(r_V_140_fu_1247_p2);

assign sext_ln813_5_fu_1290_p1 = $signed(r_V_142_fu_1284_p2);

assign sext_ln813_6_fu_1327_p1 = $signed(r_V_144_fu_1321_p2);

assign sext_ln813_7_fu_1364_p1 = $signed(r_V_146_fu_1358_p2);

assign sext_ln813_8_fu_1401_p1 = $signed(r_V_148_fu_1395_p2);

assign sext_ln813_9_fu_1439_p1 = $signed(r_V_149_fu_1433_p2);

assign sext_ln813_fu_1004_p1 = $signed(r_V_126_fu_998_p2);

assign start_out = real_start;

assign tmp_23_fu_1052_p4 = {{ret_V_26_fu_1046_p2[50:19]}};

assign tmp_24_fu_1090_p4 = {{ret_V_27_fu_1084_p2[50:19]}};

assign tmp_28_fu_1226_p4 = {{ret_V_31_fu_1220_p2[50:19]}};

assign tmp_29_fu_1263_p4 = {{ret_V_32_fu_1257_p2[50:19]}};

assign tmp_30_fu_1300_p4 = {{ret_V_33_fu_1294_p2[50:19]}};

assign tmp_31_fu_1337_p4 = {{ret_V_34_fu_1331_p2[50:19]}};

assign tmp_32_fu_1374_p4 = {{ret_V_35_fu_1368_p2[50:19]}};

assign tmp_33_fu_1411_p4 = {{ret_V_36_fu_1405_p2[50:19]}};

assign tmp_49_fu_882_p3 = {{tmp_fu_872_p4}, {19'd0}};

assign tmp_50_fu_922_p4 = {{ret_V_23_fu_916_p2[49:19]}};

assign tmp_51_fu_932_p3 = {{tmp_50_fu_922_p4}, {19'd0}};

assign tmp_52_fu_972_p4 = {{ret_V_24_fu_966_p2[49:19]}};

assign tmp_53_fu_982_p3 = {{tmp_52_fu_972_p4}, {19'd0}};

assign tmp_fu_872_p4 = {{ret_V_fu_866_p2[49:19]}};

assign tmp_s_fu_1014_p4 = {{ret_V_25_fu_1008_p2[50:19]}};

assign zext_ln803_fu_741_p1 = select_ln139_fu_671_p3;

endmodule //optical_flow_gradient_weight_y
